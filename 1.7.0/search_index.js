var search_data = {
    'index': {
        'searchIndex': ["","abstractpropeldatamodeltask","abstractpropeltask","aggregatecolumnbehavior","aggregatecolumnrelationbehavior","alternativecodingstandardsbehavior","appdata","archivablebehavior","archivablebehaviorobjectbuildermodifier","archivablebehaviorquerybuildermodifier","autoaddpkbehavior","baseobject","basepeer","basepropelmigrationtask","baseschemaparser","basiclogger","basicvalidator","behavior","buildpropelgenpearpackagetask","buildpropelpearpackagetask","classtools","column","columndefaultvalue","columnmap","columnvalue","concreteinheritancebehavior","concreteinheritanceparentbehavior","constraintnamegenerator","criteria","criterion","criterioniterator","dbadapter","dbmssql","dbmysql","dbnone","dboracle","dbpostgres","dbsqlsrv","dbsqlite","datamodelbuilder","datarow","datasqlbuilder","database","databasemap","debugpdo","debugpdostatement","defaultenglishpluralizer","defaultplatform","delegatebehavior","domain","engineexception","extensionquerybuilder","extensionqueryinheritancebuilder","foreignkey","generatorconfig","generatorconfiginterface","i18nbehavior","i18nbehaviorobjectbuildermodifier","i18nbehaviorpeerbuildermodifier","i18nbehaviorquerybuildermodifier","idmethod","idmethodparameter","index","inheritance","join","matchvalidator","maxlengthvalidator","maxvaluevalidator","minlengthvalidator","minvaluevalidator","modelcriteria","modelcriterion","modeljoin","modelwith","mojavilogadapter","mssqldatasqlbuilder","mssqldebugpdo","mssqlplatform","mssqlpropelpdo","mssqlschemaparser","mysqldatasqlbuilder","mysqlplatform","mysqlschemaparser","namefactory","namegenerator","nestedsetbehavior","nestedsetbehaviorobjectbuildermodifier","nestedsetbehaviorpeerbuildermodifier","nestedsetbehaviorquerybuildermodifier","nestedsetrecursiveiterator","nodeobject","nodepeer","notmatchvalidator","ombuilder","objectbuilder","oracledatasqlbuilder","oracleplatform","oracleschemaparser","php5extensionnodebuilder","php5extensionnodepeerbuilder","php5extensionobjectbuilder","php5extensionpeerbuilder","php5interfacebuilder","php5multiextendobjectbuilder","php5nestedsetbuilder","php5nestedsetpeerbuilder","php5nodebuilder","php5nodepeerbuilder","php5objectbuilder","php5objectnocollectionbuilder","php5peerbuilder","php5tablemapbuilder","peerbuilder","persistent","pgsqldatasqlbuilder","pgsqlplatform","pgsqlschemaparser","phpnamegenerator","pluralizer","preordernodeiterator","propel","propelarraycollection","propelarrayformatter","propelautoloader","propelcsvparser","propelcollection","propelcolumncomparator","propelcolumndiff","propelcolumntypes","propelconditionalproxy","propelconfiguration","propelconfigurationiterator","propelconvertconftask","propeldatadumptask","propeldatasqltask","propeldatabasecomparator","propeldatabasediff","propeldatetime","propeldotgenerator","propelexception","propelforeignkeycomparator","propelformatter","propelgraphviztask","propelindexcomparator","propeljsonparser","propelmigrationdowntask","propelmigrationmanager","propelmigrationstatustask","propelmigrationtask","propelmigrationuptask","propelmodelpager","propelomtask","propelobjectcollection","propelobjectformatter","propelondemandcollection","propelondemandformatter","propelondemanditerator","propelpdo","propelphpparser","propelpager","propelparser","propelplatforminterface","propelquery","propelquickbuilder","propelsqldifftask","propelsqlexec","propelsqlparser","propelsqltask","propelschemareversetask","propelschemareverse_validatorset","propelschemavalidator","propelsimplearrayformatter","propelsqlbuildtask","propelsqlmanager","propelstatementformatter","propelstringreader","propeltablecomparator","propeltablediff","propeltemplate","propeltypes","propelxmlparser","propelyamlparser","querybuilder","querycachebehavior","queryinheritancebuilder","quickgeneratorconfig","relationmap","requiredvalidator","rule","schemaexception","schemaparser","scopedelement","sluggablebehavior","softdeletebehavior","sortablebehavior","sortablebehaviorobjectbuildermodifier","sortablebehaviorpeerbuildermodifier","sortablebehaviorquerybuildermodifier","sortablerelationbehavior","sqlitedatasqlbuilder","sqliteplatform","sqliteschemaparser","sqlsrvdatasqlbuilder","sqlsrvplatform","sqlsrvschemaparser","standardenglishpluralizer","table","tablemap","timestampablebehavior","typevalidator","unique","uniquevalidator","validvaluesvalidator","validationfailed","validator","validatormap","vendorinfo","versionablebehavior","versionablebehaviorobjectbuildermodifier","versionablebehaviorpeerbuildermodifier","versionablebehaviorquerybuildermodifier","xmlelement","xmltoappdata","xmltodatasql","sfyaml","sfyamldumper","sfyamlinline","sfyamlparser","abstractpropeldatamodeltask::getdatamodels","abstractpropeldatamodeltask::getdatamodeldbmap","abstractpropeldatamodeltask::addschemafileset","abstractpropeldatamodeltask::gettargetdatabase","abstractpropeldatamodeltask::settargetdatabase","abstractpropeldatamodeltask::gettargetpackage","abstractpropeldatamodeltask::settargetpackage","abstractpropeldatamodeltask::setpackageobjectmodel","abstractpropeldatamodeltask::setvalidate","abstractpropeldatamodeltask::setxsd","abstractpropeldatamodeltask::setxsl","abstractpropeldatamodeltask::setoutputdirectory","abstractpropeldatamodeltask::setdbencoding","abstractpropeldatamodeltask::seturl","abstractpropeldatamodeltask::setuserid","abstractpropeldatamodeltask::setpassword","abstractpropeldatamodeltask::getoutputdirectory","abstractpropeldatamodeltask::createmapper","abstractpropeldatamodeltask::getconnection","aggregatecolumnbehavior::modifytable","aggregatecolumnbehavior::objectmethods","aggregatecolumnbehavior::postsave","aggregatecolumnrelationbehavior::postsave","aggregatecolumnrelationbehavior::objectattributes","aggregatecolumnrelationbehavior::objectmethods","aggregatecolumnrelationbehavior::objectfilter","aggregatecolumnrelationbehavior::preupdatequery","aggregatecolumnrelationbehavior::predeletequery","aggregatecolumnrelationbehavior::postupdatequery","aggregatecolumnrelationbehavior::postdeletequery","aggregatecolumnrelationbehavior::querymethods","alternativecodingstandardsbehavior::objectfilter","alternativecodingstandardsbehavior::extensionobjectfilter","alternativecodingstandardsbehavior::queryfilter","alternativecodingstandardsbehavior::extensionqueryfilter","alternativecodingstandardsbehavior::peerfilter","alternativecodingstandardsbehavior::extensionpeerfilter","alternativecodingstandardsbehavior::tablemapfilter","alternativecodingstandardsbehavior::stripcomments","appdata::__construct","appdata::setplatform","appdata::getplatform","appdata::setgeneratorconfig","appdata::getgeneratorconfig","appdata::setname","appdata::getname","appdata::getshortname","appdata::getdatabases","appdata::hasmultipledatabases","appdata::getdatabase","appdata::hasdatabase","appdata::adddatabase","appdata::dofinalinitialization","appdata::joinappdatas","appdata::counttables","appdata::tostring","appdata::__tostring","archivablebehavior::modifydatabase","archivablebehavior::modifytable","archivablebehavior::getarchivetable","archivablebehavior::getarchivetablephpname","archivablebehavior::getarchivetablequeryname","archivablebehavior::hasarchiveclass","archivablebehavior::getarchivedatcolumn","archivablebehavior::isarchiveoninsert","archivablebehavior::isarchiveonupdate","archivablebehavior::isarchiveondelete","archivablebehavior::getobjectbuildermodifier","archivablebehavior::getquerybuildermodifier","archivablebehaviorobjectbuildermodifier::__construct","archivablebehaviorobjectbuildermodifier::objectattributes","archivablebehaviorobjectbuildermodifier::postinsert","archivablebehaviorobjectbuildermodifier::postupdate","archivablebehaviorobjectbuildermodifier::predelete","archivablebehaviorobjectbuildermodifier::objectmethods","archivablebehaviorobjectbuildermodifier::addgetarchive","archivablebehaviorobjectbuildermodifier::addarchive","archivablebehaviorobjectbuildermodifier::addrestorefromarchive","archivablebehaviorobjectbuildermodifier::addpopulatefromarchive","archivablebehaviorobjectbuildermodifier::fakeautoincrementprimarykeyforconcreteinheritance","archivablebehaviorobjectbuildermodifier::addsavewithoutarchive","archivablebehaviorobjectbuildermodifier::adddeletewithoutarchive","archivablebehaviorquerybuildermodifier::__construct","archivablebehaviorquerybuildermodifier::queryattributes","archivablebehaviorquerybuildermodifier::predeletequery","archivablebehaviorquerybuildermodifier::postupdatequery","archivablebehaviorquerybuildermodifier::querymethods","archivablebehaviorquerybuildermodifier::addsetarchiveonupdate","archivablebehaviorquerybuildermodifier::addupdatewithoutarchive","archivablebehaviorquerybuildermodifier::addsetarchiveondelete","archivablebehaviorquerybuildermodifier::adddeletewithoutarchive","autoaddpkbehavior::modifydatabase","autoaddpkbehavior::modifytable","baseobject::__construct","baseobject::ismodified","baseobject::iscolumnmodified","baseobject::getmodifiedcolumns","baseobject::isnew","baseobject::setnew","baseobject::isdeleted","baseobject::setdeleted","baseobject::presave","baseobject::postsave","baseobject::preinsert","baseobject::postinsert","baseobject::preupdate","baseobject::postupdate","baseobject::predelete","baseobject::postdelete","baseobject::posthydrate","baseobject::resetmodified","baseobject::equals","baseobject::hashcode","baseobject::getvirtualcolumns","baseobject::hasvirtualcolumn","baseobject::getvirtualcolumn","baseobject::setvirtualcolumn","baseobject::importfrom","baseobject::exportto","baseobject::__sleep","baseobject::__call","baseobject::fromxml","baseobject::fromyaml","baseobject::fromjson","baseobject::fromcsv","baseobject::toxml","baseobject::toyaml","baseobject::tojson","baseobject::tocsv","basepeer::getfieldnames","basepeer::translatefieldname","basepeer::dodelete","basepeer::dodeleteall","basepeer::doinsert","basepeer::doupdate","basepeer::doselect","basepeer::docount","basepeer::dovalidate","basepeer::needsselectaliases","basepeer::createselectsql","basepeer::getvalidator","basepropelmigrationtask::setmigrationtable","basepropelmigrationtask::getmigrationtable","basepropelmigrationtask::setoutputdirectory","basepropelmigrationtask::getoutputdirectory","baseschemaparser::__construct","baseschemaparser::setconnection","baseschemaparser::getconnection","baseschemaparser::setmigrationtable","baseschemaparser::getmigrationtable","baseschemaparser::getwarnings","baseschemaparser::setgeneratorconfig","baseschemaparser::getgeneratorconfig","baseschemaparser::getbuildproperty","baseschemaparser::setplatform","baseschemaparser::getplatform","basiclogger::alert","basiclogger::crit","basiclogger::err","basiclogger::warning","basiclogger::notice","basiclogger::info","basiclogger::debug","basiclogger::log","basicvalidator::isvalid","behavior::setname","behavior::getname","behavior::settable","behavior::gettable","behavior::setdatabase","behavior::getdatabase","behavior::addparameter","behavior::setparameters","behavior::getparameters","behavior::getparameter","behavior::settablemodificationorder","behavior::gettablemodificationorder","behavior::modifydatabase","behavior::modifytable","behavior::settablemodified","behavior::istablemodified","behavior::rendertemplate","behavior::getcolumnforparameter","behavior::appendxml","behavior::gettablemodifier","behavior::getobjectbuildermodifier","behavior::getquerybuildermodifier","behavior::getpeerbuildermodifier","behavior::gettablemapbuildermodifier","behavior::hasadditionalbuilders","behavior::getadditionalbuilders","buildpropelgenpearpackagetask::init","buildpropelgenpearpackagetask::main","buildpropelgenpearpackagetask::getfilesets","buildpropelgenpearpackagetask::createfileset","buildpropelgenpearpackagetask::setversion","buildpropelgenpearpackagetask::setstate","buildpropelgenpearpackagetask::setnotes","buildpropelgenpearpackagetask::setdir","buildpropelgenpearpackagetask::setdestfile","buildpropelpearpackagetask::init","buildpropelpearpackagetask::main","buildpropelpearpackagetask::getfilesets","buildpropelpearpackagetask::createfileset","buildpropelpearpackagetask::setversion","buildpropelpearpackagetask::setstate","buildpropelpearpackagetask::setnotes","buildpropelpearpackagetask::setdir","buildpropelpearpackagetask::setdestfile","classtools::classname","classtools::getfilepath","classtools::createfilepath","classtools::getbasepeer","classtools::getbaseclass","classtools::getinterface","classtools::getphpreservedwords","column::__construct","column::makelist","column::getdomain","column::setdomain","column::getfullyqualifiedname","column::getname","column::setname","column::isnameplural","column::getsingularname","column::getdescription","column::setdescription","column::getphpname","column::setphpname","column::getstudlyphpname","column::getaccessorvisibility","column::setaccessorvisibility","column::getmutatorvisibility","column::setmutatorvisibility","column::getconstantname","column::getconstantcolumnname","column::getpeername","column::setpeername","column::getphptype","column::getposition","column::setposition","column::settable","column::gettable","column::gettablename","column::addinheritance","column::getchildren","column::isinheritance","column::isenumeratedclasses","column::isnotnull","column::setnotnull","column::getnotnullstring","column::setprimarystring","column::isprimarystring","column::setprimarykey","column::isprimarykey","column::setnodekey","column::isnodekey","column::setnodekeysep","column::getnodekeysep","column::setnestedsetleftkey","column::isnestedsetleftkey","column::setnestedsetrightkey","column::isnestedsetrightkey","column::settreescopekey","column::istreescopekey","column::setunique","column::isunique","column::requirestransactioninpostgres","column::isforeignkey","column::hasmultiplefk","column::getforeignkeys","column::addreferrer","column::getreferrers","column::hasreferrers","column::hasreferrer","column::clearreferrers","column::clearinheritancelist","column::setdomainfortype","column::settype","column::gettype","column::getpdotype","column::getpropeltype","column::isdefaultsqltype","column::islobtype","column::istexttype","column::isnumerictype","column::isbooleantype","column::istemporaltype","column::isphparraytype","column::isenumtype","column::setvalueset","column::getvalueset","column::appendxml","column::getsize","column::setsize","column::getscale","column::setscale","column::printsize","column::getdefaultsetting","column::getdefaultvaluestring","column::setdefaultvalue","column::getdefaultvalue","column::getphpdefaultvalue","column::isautoincrement","column::islazyload","column::getautoincrementstring","column::setautoincrement","column::settypefromstring","column::getphpnative","column::isphpprimitivetype","column::isphpprimitivenumerictype","column::isphpobjecttype","column::getplatform","column::hasplatform","column::getvalidator","column::__clone","column::generatephpname","columndefaultvalue::__construct","columndefaultvalue::gettype","columndefaultvalue::settype","columndefaultvalue::isexpression","columndefaultvalue::getvalue","columndefaultvalue::setvalue","columndefaultvalue::equals","columnmap::__construct","columnmap::getname","columnmap::gettable","columnmap::gettablename","columnmap::getfullyqualifiedname","columnmap::setphpname","columnmap::getphpname","columnmap::settype","columnmap::gettype","columnmap::getpdotype","columnmap::islob","columnmap::istemporal","columnmap::isepochtemporal","columnmap::isnumeric","columnmap::isinteger","columnmap::istext","columnmap::setsize","columnmap::getsize","columnmap::setprimarykey","columnmap::isprimarykey","columnmap::setnotnull","columnmap::isnotnull","columnmap::setdefaultvalue","columnmap::getdefaultvalue","columnmap::setforeignkey","columnmap::isforeignkey","columnmap::getrelation","columnmap::getrelatedname","columnmap::getrelatedtablename","columnmap::getrelatedcolumnname","columnmap::getrelatedtable","columnmap::getrelatedcolumn","columnmap::addvalidator","columnmap::hasvalidators","columnmap::getvalidators","columnmap::setvalueset","columnmap::getvalueset","columnmap::isinvalueset","columnmap::getvaluesetkey","columnmap::ignorecase","columnmap::normalizename","columnmap::setprimarystring","columnmap::isprimarystring","columnmap::getcolumnname","columnvalue::__construct","columnvalue::getcolumn","columnvalue::getvalue","concreteinheritancebehavior::modifytable","concreteinheritancebehavior::parentclass","concreteinheritancebehavior::presave","concreteinheritancebehavior::postdelete","concreteinheritancebehavior::objectmethods","concreteinheritanceparentbehavior::modifytable","concreteinheritanceparentbehavior::objectmethods","constraintnamegenerator::generatename","criteria::__construct","criteria::getiterator","criteria::getmap","criteria::clear","criteria::addascolumn","criteria::getascolumns","criteria::getcolumnforas","criteria::addalias","criteria::removealias","criteria::getaliases","criteria::gettableforalias","criteria::gettablenameandalias","criteria::keys","criteria::containskey","criteria::keycontainsvalue","criteria::haswhereclause","criteria::setusetransaction","criteria::isusetransaction","criteria::getcriterion","criteria::getlastcriterion","criteria::getnewcriterion","criteria::getcolumnname","criteria::gettablescolumns","criteria::getcomparison","criteria::getdbname","criteria::setdbname","criteria::getprimarytablename","criteria::setprimarytablename","criteria::gettablename","criteria::getvalue","criteria::get","criteria::put","criteria::putall","criteria::add","criteria::addcond","criteria::combine","criteria::addjoin","criteria::addmultiplejoin","criteria::addjoinobject","criteria::getjoins","criteria::addselectquery","criteria::hasselectqueries","criteria::getselectqueries","criteria::getselectquery","criteria::hasselectquery","criteria::forgeselectqueryalias","criteria::setall","criteria::setdistinct","criteria::addselectmodifier","criteria::removeselectmodifier","criteria::hasselectmodifier","criteria::setignorecase","criteria::isignorecase","criteria::setsinglerecord","criteria::issinglerecord","criteria::setlimit","criteria::getlimit","criteria::setoffset","criteria::getoffset","criteria::addselectcolumn","criteria::setcomment","criteria::getcomment","criteria::hasselectclause","criteria::getselectcolumns","criteria::clearselectcolumns","criteria::getselectmodifiers","criteria::addgroupbycolumn","criteria::addascendingorderbycolumn","criteria::adddescendingorderbycolumn","criteria::getorderbycolumns","criteria::clearorderbycolumns","criteria::cleargroupbycolumns","criteria::getgroupbycolumns","criteria::gethaving","criteria::remove","criteria::tostring","criteria::size","criteria::equals","criteria::mergewith","criteria::addhaving","criteria::addand","criteria::addor","criteria::addusingoperator","criteria::_or","criteria::_and","criteria::_if","criteria::_elseif","criteria::_else","criteria::_endif","criteria::__clone","criterion::__construct","criterion::init","criterion::getcolumn","criterion::settable","criterion::gettable","criterion::getcomparison","criterion::getvalue","criterion::getdb","criterion::setdb","criterion::setignorecase","criterion::isignorecase","criterion::getconjunctions","criterion::addand","criterion::addor","criterion::appendpsto","criterion::equals","criterion::hashcode","criterion::getalltables","criterion::getattachedcriterion","criterion::__clone","criterioniterator::__construct","criterioniterator::rewind","criterioniterator::valid","criterioniterator::key","criterioniterator::current","criterioniterator::next","dbadapter::factory","dbadapter::prepareparams","dbadapter::initconnection","dbadapter::setcharset","dbadapter::touppercase","dbadapter::getstringdelimiter","dbadapter::ignorecase","dbadapter::ignorecaseinorderby","dbadapter::concatstring","dbadapter::substring","dbadapter::strlength","dbadapter::quoteidentifier","dbadapter::quoteidentifiertable","dbadapter::isgetidbeforeinsert","dbadapter::isgetidafterinsert","dbadapter::getid","dbadapter::formattemporalvalue","dbadapter::gettimestampformatter","dbadapter::getdateformatter","dbadapter::gettimeformatter","dbadapter::usequoteidentifier","dbadapter::cleanupsql","dbadapter::applylimit","dbadapter::random","dbadapter::getdeletefromclause","dbadapter::createselectsqlpart","dbadapter::turnselectcolumnstoaliases","dbadapter::bindvalues","dbadapter::bindvalue","dbadapter::doexplainplan","dbmssql::setcharset","dbmssql::touppercase","dbmssql::ignorecase","dbmssql::concatstring","dbmssql::substring","dbmssql::strlength","dbmssql::quoteidentifier","dbmssql::quoteidentifiertable","dbmssql::random","dbmssql::applylimit","dbmssql::cleanupsql","dbmysql::touppercase","dbmysql::ignorecase","dbmysql::concatstring","dbmysql::substring","dbmysql::strlength","dbmysql::locktable","dbmysql::unlocktable","dbmysql::quoteidentifier","dbmysql::quoteidentifiertable","dbmysql::usequoteidentifier","dbmysql::applylimit","dbmysql::random","dbmysql::bindvalue","dbmysql::prepareparams","dbmysql::doexplainplan","dbnone::initconnection","dbnone::touppercase","dbnone::ignorecase","dbnone::concatstring","dbnone::substring","dbnone::strlength","dbnone::applylimit","dbnone::random","dboracle::initconnection","dboracle::touppercase","dboracle::ignorecase","dboracle::concatstring","dboracle::substring","dboracle::strlength","dboracle::applylimit","dboracle::getid","dboracle::random","dboracle::turnselectcolumnstoaliases","dboracle::bindvalue","dboracle::doexplainplan","dboracle::getexplainplanquery","dboracle::getexplainplanreadquery","dbpostgres::touppercase","dbpostgres::ignorecase","dbpostgres::concatstring","dbpostgres::substring","dbpostgres::strlength","dbpostgres::getid","dbpostgres::gettimestampformatter","dbpostgres::gettimeformatter","dbpostgres::applylimit","dbpostgres::random","dbpostgres::getdeletefromclause","dbpostgres::quoteidentifiertable","dbpostgres::doexplainplan","dbpostgres::getexplainplanquery","dbsqlsrv::initconnection","dbsqlsrv::setcharset","dbsqlsrv::cleanupsql","dbsqlsrv::bindvalue","dbsqlite::setcharset","dbsqlite::touppercase","dbsqlite::ignorecase","dbsqlite::concatstring","dbsqlite::substring","dbsqlite::strlength","dbsqlite::quoteidentifier","dbsqlite::applylimit","dbsqlite::random","datamodelbuilder::__construct","datamodelbuilder::getpeerbuilder","datamodelbuilder::getpluralizer","datamodelbuilder::getstubpeerbuilder","datamodelbuilder::getobjectbuilder","datamodelbuilder::getstubobjectbuilder","datamodelbuilder::getquerybuilder","datamodelbuilder::getstubquerybuilder","datamodelbuilder::gettablemapbuilder","datamodelbuilder::getinterfacebuilder","datamodelbuilder::getmultiextendobjectbuilder","datamodelbuilder::getnodebuilder","datamodelbuilder::getnodepeerbuilder","datamodelbuilder::getstubnodebuilder","datamodelbuilder::getstubnodepeerbuilder","datamodelbuilder::getnestedsetbuilder","datamodelbuilder::getnestedsetpeerbuilder","datamodelbuilder::getdatasqlbuilder","datamodelbuilder::getnewbuilder","datamodelbuilder::getnewpeerbuilder","datamodelbuilder::getnewstubpeerbuilder","datamodelbuilder::getnewobjectbuilder","datamodelbuilder::getnewstubobjectbuilder","datamodelbuilder::getnewquerybuilder","datamodelbuilder::getnewstubquerybuilder","datamodelbuilder::getnewqueryinheritancebuilder","datamodelbuilder::getnewstubqueryinheritancebuilder","datamodelbuilder::getgeneratorconfig","datamodelbuilder::getbuildproperty","datamodelbuilder::setgeneratorconfig","datamodelbuilder::settable","datamodelbuilder::gettable","datamodelbuilder::getplatform","datamodelbuilder::setplatform","datamodelbuilder::getdatabase","datamodelbuilder::getwarnings","datamodelbuilder::quoteidentifier","datamodelbuilder::prefixclassname","datarow::__construct","datarow::gettable","datarow::getcolumnvalues","datasqlbuilder::reset","datasqlbuilder::getdatabasestartsql","datasqlbuilder::getdatabaseendsql","datasqlbuilder::gettablestartsql","datasqlbuilder::gettableendsql","datasqlbuilder::buildrowsql","datasqlbuilder::gettimestampsql","database::__construct","database::getplatform","database::setplatform","database::getname","database::setname","database::getbaseclass","database::setbaseclass","database::getbasepeer","database::setbasepeer","database::getdefaultidmethod","database::setdefaultidmethod","database::getdefaultphpnamingmethod","database::setdefaultphpnamingmethod","database::getdefaulttranslatemethod","database::setdefaultstringformat","database::getdefaultstringformat","database::setdefaulttranslatemethod","database::isheavyindexing","database::getheavyindexing","database::setheavyindexing","database::gettables","database::counttables","database::gettablesforsql","database::hastable","database::gettable","database::hastablebyphpname","database::gettablebyphpname","database::addtable","database::setappdata","database::getappdata","database::adddomain","database::getdomain","database::getgeneratorconfig","database::getbuildproperty","database::addbehavior","database::getbehaviors","database::hasbehavior","database::getbehavior","database::gettableprefix","database::getnexttablebehavior","database::dofinalinitialization","database::appendxml","databasemap::__construct","databasemap::getname","databasemap::addtable","databasemap::addtableobject","databasemap::addtablefrommapclass","databasemap::hastable","databasemap::gettable","databasemap::gettables","databasemap::getcolumn","databasemap::containstable","databasemap::gettablebyphpname","databasemap::getdbadapter","debugpdostatement::getexecutedquerystring","debugpdostatement::execute","debugpdostatement::bindvalue","debugpdostatement::bindparam","defaultenglishpluralizer::getpluralform","defaultplatform::__construct","defaultplatform::setconnection","defaultplatform::getconnection","defaultplatform::setgeneratorconfig","defaultplatform::getdatabasetype","defaultplatform::getmaxcolumnnamelength","defaultplatform::getnativeidmethod","defaultplatform::isnativeidmethodautoincrement","defaultplatform::getdomainfortype","defaultplatform::getnullstring","defaultplatform::getautoincrement","defaultplatform::getsequencename","defaultplatform::getaddtablesddl","defaultplatform::getbeginddl","defaultplatform::getendddl","defaultplatform::getdroptableddl","defaultplatform::getaddtableddl","defaultplatform::getcolumnddl","defaultplatform::getcolumndefaultvalueddl","defaultplatform::getcolumnlistddl","defaultplatform::getprimarykeyname","defaultplatform::getprimarykeyddl","defaultplatform::getdropprimarykeyddl","defaultplatform::getaddprimarykeyddl","defaultplatform::getaddindicesddl","defaultplatform::getaddindexddl","defaultplatform::getdropindexddl","defaultplatform::getindexddl","defaultplatform::getuniqueddl","defaultplatform::getaddforeignkeysddl","defaultplatform::getaddforeignkeyddl","defaultplatform::getdropforeignkeyddl","defaultplatform::getforeignkeyddl","defaultplatform::getcommentlineddl","defaultplatform::getcommentblockddl","defaultplatform::getmodifydatabaseddl","defaultplatform::getrenametableddl","defaultplatform::getmodifytableddl","defaultplatform::getmodifytablecolumnsddl","defaultplatform::getmodifytableprimarykeyddl","defaultplatform::getmodifytableindicesddl","defaultplatform::getmodifytableforeignkeysddl","defaultplatform::getremovecolumnddl","defaultplatform::getrenamecolumnddl","defaultplatform::getmodifycolumnddl","defaultplatform::getmodifycolumnsddl","defaultplatform::getaddcolumnddl","defaultplatform::getaddcolumnsddl","defaultplatform::hassize","defaultplatform::hasscale","defaultplatform::quote","defaultplatform::quoteidentifier","defaultplatform::setidentifierquoting","defaultplatform::getidentifierquoting","defaultplatform::supportsnativedeletetrigger","defaultplatform::supportsinsertnullpk","defaultplatform::hasstreamblobimpl","defaultplatform::supportsschemas","defaultplatform::supportsmigrations","defaultplatform::supportsvarcharwithoutsize","defaultplatform::getbooleanstring","defaultplatform::getphparraystring","defaultplatform::gettimestampformatter","defaultplatform::gettimeformatter","defaultplatform::getdateformatter","defaultplatform::getcolumnbindingphp","defaultplatform::getidentifierphp","defaultplatform::getdefaultfkondeletebehavior","defaultplatform::getdefaultfkonupdatebehavior","delegatebehavior::modifytable","delegatebehavior::objectcall","domain::__construct","domain::copy","domain::setdatabase","domain::getdatabase","domain::getdescription","domain::setdescription","domain::getname","domain::setname","domain::getscale","domain::setscale","domain::replacescale","domain::getsize","domain::setsize","domain::replacesize","domain::gettype","domain::settype","domain::replacetype","domain::getdefaultvalue","domain::getphpdefaultvalue","domain::setdefaultvalue","domain::replacedefaultvalue","domain::getsqltype","domain::setsqltype","domain::replacesqltype","domain::printsize","domain::appendxml","extensionquerybuilder::getunprefixedclassname","extensionquerybuilder::hasbehaviormodifier","extensionquerybuilder::applybehaviormodifier","extensionquerybuilder::getbehaviorcontent","extensionqueryinheritancebuilder::getunprefixedclassname","extensionqueryinheritancebuilder::getpackage","extensionqueryinheritancebuilder::setchild","extensionqueryinheritancebuilder::getchild","foreignkey::__construct","foreignkey::normalizefkey","foreignkey::hasonupdate","foreignkey::hasondelete","foreignkey::getonupdate","foreignkey::getondelete","foreignkey::setondelete","foreignkey::setonupdate","foreignkey::getname","foreignkey::setname","foreignkey::getphpname","foreignkey::setphpname","foreignkey::getrefphpname","foreignkey::setrefphpname","foreignkey::getdefaultjoin","foreignkey::setdefaultjoin","foreignkey::getforeigntablename","foreignkey::getforeigntablecommonname","foreignkey::setforeigntablecommonname","foreignkey::getforeigntable","foreignkey::getforeignschemaname","foreignkey::setforeignschemaname","foreignkey::settable","foreignkey::gettable","foreignkey::gettablename","foreignkey::getschemaname","foreignkey::addreference","foreignkey::clearreferences","foreignkey::getlocalcolumnnames","foreignkey::getforeigncolumnnames","foreignkey::getlocalcolumns","foreignkey::getlocalcolumnobjects","foreignkey::getlocalcolumnname","foreignkey::getlocalcolumn","foreignkey::getlocalforeignmapping","foreignkey::getforeignlocalmapping","foreignkey::getcolumnobjectsmapping","foreignkey::getmappedforeigncolumn","foreignkey::getmappedlocalcolumn","foreignkey::getforeigncolumns","foreignkey::getforeigncolumnobjects","foreignkey::getforeigncolumnname","foreignkey::getforeigncolumn","foreignkey::islocalcolumnsrequired","foreignkey::isforeignprimarykey","foreignkey::isatleastoneforeignprimarykey","foreignkey::getforeignprimarykeys","foreignkey::iscomposite","foreignkey::islocalprimarykey","foreignkey::isatleastonelocalprimarykey","foreignkey::setskipsql","foreignkey::isskipsql","foreignkey::ismatchedbyinversefk","foreignkey::getinversefk","foreignkey::getotherfks","foreignkey::appendxml","generatorconfig::__construct","generatorconfig::getbuildproperties","generatorconfig::setbuildproperties","generatorconfig::getbuildproperty","generatorconfig::setbuildproperty","generatorconfig::getclassname","generatorconfig::getbuilderclassname","generatorconfig::getconfiguredplatform","generatorconfig::getconfiguredschemaparser","generatorconfig::getconfiguredbuilder","generatorconfig::getconfiguredpluralizer","generatorconfig::getconfiguredbehavior","generatorconfig::setbuildconnections","generatorconfig::getbuildconnections","generatorconfig::getbuildconnection","generatorconfig::getbuildpdo","generatorconfiginterface::getconfiguredbuilder","generatorconfiginterface::getconfiguredpluralizer","generatorconfiginterface::getbuildproperty","generatorconfiginterface::setbuildproperty","generatorconfiginterface::getconfiguredplatform","generatorconfiginterface::getconfiguredbehavior","i18nbehavior::modifydatabase","i18nbehavior::modifytable","i18nbehavior::getdefaultlocale","i18nbehavior::geti18ntable","i18nbehavior::geti18nforeignkey","i18nbehavior::getlocalecolumn","i18nbehavior::geti18ncolumns","i18nbehavior::replacetokens","i18nbehavior::getobjectbuildermodifier","i18nbehavior::getquerybuildermodifier","i18nbehavior::getpeerbuildermodifier","i18nbehaviorobjectbuildermodifier::__construct","i18nbehaviorobjectbuildermodifier::postdelete","i18nbehaviorobjectbuildermodifier::objectattributes","i18nbehaviorobjectbuildermodifier::objectclearreferences","i18nbehaviorobjectbuildermodifier::objectmethods","i18nbehaviorobjectbuildermodifier::objectfilter","i18nbehaviorpeerbuildermodifier::__construct","i18nbehaviorpeerbuildermodifier::staticconstants","i18nbehaviorquerybuildermodifier::__construct","i18nbehaviorquerybuildermodifier::querymethods","idmethodparameter::getname","idmethodparameter::setname","idmethodparameter::getvalue","idmethodparameter::setvalue","idmethodparameter::settable","idmethodparameter::gettable","idmethodparameter::gettablename","idmethodparameter::appendxml","index::__construct","index::getisunique","index::isunique","index::getindexname","index::getname","index::setindexname","index::setname","index::settable","index::gettable","index::gettablename","index::addcolumn","index::setcolumns","index::hascolumnsize","index::getcolumnsize","index::resetcolumnsize","index::getindexcolumnlist","index::getcolumnlist","index::getindexcolumns","index::hascolumnatposition","index::hascolumns","index::getcolumns","index::appendxml","inheritance::getkey","inheritance::setkey","inheritance::getcolumn","inheritance::setcolumn","inheritance::getclassname","inheritance::setclassname","inheritance::getpackage","inheritance::setpackage","inheritance::getancestor","inheritance::setancestor","inheritance::appendxml","join::__construct","join::addcondition","join::addconditions","join::addexplicitcondition","join::countconditions","join::getconditions","join::addoperator","join::getoperator","join::getoperators","join::setjointype","join::getjointype","join::addleftcolumnname","join::getleftcolumn","join::getleftcolumnname","join::getleftcolumns","join::setlefttablename","join::getlefttablename","join::setlefttablealias","join::getlefttablealias","join::haslefttablealias","join::getlefttablealiasorname","join::getlefttablewithalias","join::addrightcolumnname","join::getrightcolumn","join::getrightcolumnname","join::getrightcolumns","join::setrighttablename","join::getrighttablename","join::setrighttablealias","join::getrighttablealias","join::hasrighttablealias","join::getrighttablealiasorname","join::getrighttablewithalias","join::getdb","join::setdb","join::setjoincondition","join::getjoincondition","join::buildjoincondition","join::getclause","join::equals","join::tostring","join::__tostring","matchvalidator::isvalid","maxlengthvalidator::isvalid","maxvaluevalidator::isvalid","minlengthvalidator::isvalid","minvaluevalidator::isvalid","modelcriteria::__construct","modelcriteria::getmodelname","modelcriteria::setmodelalias","modelcriteria::getmodelalias","modelcriteria::getmodelaliasorname","modelcriteria::getmodelpeername","modelcriteria::gettablemap","modelcriteria::setformatter","modelcriteria::getformatter","modelcriteria::condition","modelcriteria::filterby","modelcriteria::filterbyarray","modelcriteria::where","modelcriteria::orwhere","modelcriteria::having","modelcriteria::orderby","modelcriteria::groupby","modelcriteria::groupbyclass","modelcriteria::distinct","modelcriteria::limit","modelcriteria::offset","modelcriteria::select","modelcriteria::getselect","modelcriteria::getpreviousjoin","modelcriteria::setpreviousjoin","modelcriteria::getjoin","modelcriteria::join","modelcriteria::addjoincondition","modelcriteria::setjoincondition","modelcriteria::addjoinobject","modelcriteria::joinwith","modelcriteria::with","modelcriteria::getwith","modelcriteria::setwith","modelcriteria::iswithonetomany","modelcriteria::withcolumn","modelcriteria::usequery","modelcriteria::enduse","modelcriteria::mergewith","modelcriteria::clear","modelcriteria::setprimarycriteria","modelcriteria::getprimarycriteria","modelcriteria::addselectquery","modelcriteria::addselfselectcolumns","modelcriteria::addrelationselectcolumns","modelcriteria::getclassandalias","modelcriteria::getrelationname","modelcriteria::keepquery","modelcriteria::iskeepquery","modelcriteria::find","modelcriteria::findone","modelcriteria::findoneorcreate","modelcriteria::findpk","modelcriteria::findpks","modelcriteria::findby","modelcriteria::findbyarray","modelcriteria::findoneby","modelcriteria::findonebyarray","modelcriteria::count","modelcriteria::paginate","modelcriteria::delete","modelcriteria::dodelete","modelcriteria::deleteall","modelcriteria::dodeleteall","modelcriteria::update","modelcriteria::doupdate","modelcriteria::getaliasedcolname","modelcriteria::addusingalias","modelcriteria::getparams","modelcriteria::__call","modelcriteria::__clone","modelcriteria::explain","modelcriteria::exists","modelcriteria::leftjoin","modelcriteria::rightjoin","modelcriteria::innerjoin","modelcriteria::getselectquery","modelcriteria::_or","modelcriterion::__construct","modelcriterion::getclause","modelcriterion::appendmodelclausetops","modelcriterion::appendmodelclauseliketops","modelcriterion::appendmodelclauseseveraltops","modelcriterion::appendmodelclausearraytops","modelcriterion::equals","modelcriterion::hashcode","modeljoin::setrelationmap","modeljoin::getrelationmap","modeljoin::settablemap","modeljoin::gettablemap","modeljoin::setpreviousjoin","modeljoin::getpreviousjoin","modeljoin::isprimary","modeljoin::setrelationalias","modeljoin::getrelationalias","modeljoin::hasrelationalias","modeljoin::getobjecttorelate","modeljoin::equals","modeljoin::__tostring","modelwith::__construct","modelwith::init","modelwith::setmodelname","modelwith::getmodelname","modelwith::setmodelpeername","modelwith::getmodelpeername","modelwith::setissingletableinheritance","modelwith::issingletableinheritance","modelwith::setisadd","modelwith::isadd","modelwith::setiswithonetomany","modelwith::iswithonetomany","modelwith::setrelationname","modelwith::getrelationname","modelwith::setrelationmethod","modelwith::getrelationmethod","modelwith::setinitmethod","modelwith::getinitmethod","modelwith::setresetpartialmethod","modelwith::getresetpartialmethod","modelwith::setleftphpname","modelwith::getleftphpname","modelwith::setrightphpname","modelwith::getrightphpname","modelwith::isprimary","modelwith::__tostring","mojavilogadapter::__construct","mojavilogadapter::alert","mojavilogadapter::crit","mojavilogadapter::err","mojavilogadapter::warning","mojavilogadapter::notice","mojavilogadapter::info","mojavilogadapter::debug","mojavilogadapter::log","mssqlplatform::getmaxcolumnnamelength","mssqlplatform::getnullstring","mssqlplatform::supportsnativedeletetrigger","mssqlplatform::supportsinsertnullpk","mssqlplatform::getdroptableddl","mssqlplatform::getprimarykeyddl","mssqlplatform::getaddforeignkeyddl","mssqlplatform::getforeignkeyddl","mssqlplatform::supportsschemas","mssqlplatform::hassize","mssqlplatform::quoteidentifier","mssqlplatform::gettimestampformatter","mssqlpropelpdo::begintransaction","mssqlpropelpdo::commit","mssqlpropelpdo::rollback","mssqlpropelpdo::forcerollback","mssqlpropelpdo::lastinsertid","mssqlpropelpdo::quoteidentifier","mssqlpropelpdo::usequoteidentifier","mssqlschemaparser::parse","mysqlplatform::setgeneratorconfig","mysqlplatform::settableenginekeyword","mysqlplatform::gettableenginekeyword","mysqlplatform::setdefaulttableengine","mysqlplatform::getdefaulttableengine","mysqlplatform::getautoincrement","mysqlplatform::getmaxcolumnnamelength","mysqlplatform::supportsnativedeletetrigger","mysqlplatform::supportsforeignkeys","mysqlplatform::getaddtablesddl","mysqlplatform::getbeginddl","mysqlplatform::getendddl","mysqlplatform::getprimarykeyddl","mysqlplatform::getaddtableddl","mysqlplatform::getdroptableddl","mysqlplatform::getcolumnddl","mysqlplatform::getdropprimarykeyddl","mysqlplatform::getaddindexddl","mysqlplatform::getdropindexddl","mysqlplatform::getindexddl","mysqlplatform::getuniqueddl","mysqlplatform::getaddforeignkeyddl","mysqlplatform::getforeignkeyddl","mysqlplatform::getdropforeignkeyddl","mysqlplatform::getcommentblockddl","mysqlplatform::getmodifydatabaseddl","mysqlplatform::getrenametableddl","mysqlplatform::getremovecolumnddl","mysqlplatform::getrenamecolumnddl","mysqlplatform::getmodifycolumnddl","mysqlplatform::getchangecolumnddl","mysqlplatform::getmodifycolumnsddl","mysqlplatform::getaddcolumnddlbits","mysqlplatform::getaddcolumnsddl","mysqlplatform::supportsschemas","mysqlplatform::hassize","mysqlplatform::disconnectedescapetext","mysqlplatform::quoteidentifier","mysqlplatform::gettimestampformatter","mysqlplatform::getcolumnbindingphp","mysqlplatform::getdefaultfkondeletebehavior","mysqlplatform::getdefaultfkonupdatebehavior","mysqlschemaparser::parse","mysqlschemaparser::getcolumnfromrow","namefactory::generatename","namegenerator::generatename","nestedsetbehavior::modifytable","nestedsetbehavior::getobjectbuildermodifier","nestedsetbehavior::getquerybuildermodifier","nestedsetbehavior::getpeerbuildermodifier","nestedsetbehavior::usescope","nestedsetbehaviorobjectbuildermodifier::__construct","nestedsetbehaviorobjectbuildermodifier::objectattributes","nestedsetbehaviorobjectbuildermodifier::presave","nestedsetbehaviorobjectbuildermodifier::predelete","nestedsetbehaviorobjectbuildermodifier::postdelete","nestedsetbehaviorobjectbuildermodifier::objectclearreferences","nestedsetbehaviorobjectbuildermodifier::objectmethods","nestedsetbehaviorpeerbuildermodifier::__construct","nestedsetbehaviorpeerbuildermodifier::staticattributes","nestedsetbehaviorpeerbuildermodifier::staticmethods","nestedsetbehaviorquerybuildermodifier::__construct","nestedsetbehaviorquerybuildermodifier::querymethods","nestedsetrecursiveiterator::__construct","nestedsetrecursiveiterator::rewind","nestedsetrecursiveiterator::valid","nestedsetrecursiveiterator::current","nestedsetrecursiveiterator::key","nestedsetrecursiveiterator::next","nestedsetrecursiveiterator::haschildren","nestedsetrecursiveiterator::getchildren","nodeobject::save","nodeobject::delete","nodeobject::makeroot","nodeobject::getlevel","nodeobject::getpath","nodeobject::getnumberofchildren","nodeobject::getnumberofdescendants","nodeobject::getchildren","nodeobject::getdescendants","nodeobject::setlevel","nodeobject::setchildren","nodeobject::setparentnode","nodeobject::setprevsibling","nodeobject::setnextsibling","nodeobject::isroot","nodeobject::isleaf","nodeobject::isequalto","nodeobject::hasparent","nodeobject::haschildren","nodeobject::hasprevsibling","nodeobject::hasnextsibling","nodeobject::retrieveparent","nodeobject::retrievefirstchild","nodeobject::retrievelastchild","nodeobject::retrieveprevsibling","nodeobject::retrievenextsibling","nodeobject::insertasfirstchildof","nodeobject::insertaslastchildof","nodeobject::insertasprevsiblingof","nodeobject::insertasnextsiblingof","nodeobject::movetofirstchildof","nodeobject::movetolastchildof","nodeobject::movetoprevsiblingof","nodeobject::movetonextsiblingof","nodeobject::insertasparentof","nodeobject::getscopeidvalue","nodeobject::setscopeidvalue","nodepeer::createroot","nodepeer::retrieveroot","nodepeer::insertasfirstchildof","nodepeer::insertaslastchildof","nodepeer::insertasprevsiblingof","nodepeer::insertasnextsiblingof","nodepeer::insertasparentof","nodepeer::insertroot","nodepeer::deleteroot","nodepeer::deletenode","nodepeer::movetofirstchildof","nodepeer::movetolastchildof","nodepeer::movetoprevsiblingof","nodepeer::movetonextsiblingof","nodepeer::retrievefirstchild","nodepeer::retrievelastchild","nodepeer::retrieveprevsibling","nodepeer::retrievenextsibling","nodepeer::retrievetree","nodepeer::retrievebranch","nodepeer::retrievechildren","nodepeer::retrievedescendants","nodepeer::retrievesiblings","nodepeer::retrieveparent","nodepeer::getlevel","nodepeer::getnumberofchildren","nodepeer::getnumberofdescendants","nodepeer::getpath","nodepeer::isvalid","nodepeer::isroot","nodepeer::isleaf","nodepeer::ischildof","nodepeer::isequalto","nodepeer::hasparent","nodepeer::hasprevsibling","nodepeer::hasnextsibling","nodepeer::haschildren","nodepeer::deletedescendants","nodepeer::getnode","notmatchvalidator::isvalid","ombuilder::build","ombuilder::buildobjectinstancecreationcode","ombuilder::getunprefixedclassname","ombuilder::getclassname","ombuilder::getfullyqualifiedclassname","ombuilder::getclasspath","ombuilder::getclassfilepath","ombuilder::getpackage","ombuilder::getpackagepath","ombuilder::getnamespace","ombuilder::declareclassnamespace","ombuilder::declareclass","ombuilder::declareclassfrombuilder","ombuilder::declareclasses","ombuilder::getdeclaredclasses","ombuilder::getnamespacestatement","ombuilder::getusestatements","ombuilder::getpeerclassname","ombuilder::getqueryclassname","ombuilder::getobjectclassname","ombuilder::getcolumnconstant","ombuilder::getbasepeer","ombuilder::getfkphpnameaffix","ombuilder::getreffkphpnameaffix","ombuilder::hasbehaviormodifier","ombuilder::applybehaviormodifierbase","ombuilder::getbehaviorcontentbase","ombuilder::fixtrailingwhitespaces","objectbuilder::__construct","objectbuilder::hasbehaviormodifier","objectbuilder::applybehaviormodifier","objectbuilder::getbehaviorcontent","oracleplatform::getmaxcolumnnamelength","oracleplatform::getnativeidmethod","oracleplatform::getautoincrement","oracleplatform::supportsnativedeletetrigger","oracleplatform::getbeginddl","oracleplatform::getaddtablesddl","oracleplatform::getaddtableddl","oracleplatform::getaddprimarykeyddl","oracleplatform::getaddsequencesddl","oracleplatform::getdroptableddl","oracleplatform::getprimarykeyname","oracleplatform::getprimarykeyddl","oracleplatform::getuniqueddl","oracleplatform::getforeignkeyddl","oracleplatform::hasstreamblobimpl","oracleplatform::quoteidentifier","oracleplatform::gettimestampformatter","oracleplatform::supportsschemas","oracleplatform::generateblockstorage","oracleplatform::getaddindexddl","oracleplatform::getcolumnbindingphp","oracleplatform::getidentifierphp","oracleplatform::getdefaultfkondeletebehavior","oracleplatform::getdefaultfkonupdatebehavior","oracleschemaparser::parse","php5extensionnodebuilder::getunprefixedclassname","php5extensionnodepeerbuilder::getunprefixedclassname","php5extensionobjectbuilder::getunprefixedclassname","php5extensionpeerbuilder::getunprefixedclassname","php5interfacebuilder::getunprefixedclassname","php5multiextendobjectbuilder::getunprefixedclassname","php5multiextendobjectbuilder::getpackage","php5multiextendobjectbuilder::setchild","php5multiextendobjectbuilder::getchild","php5nestedsetbuilder::getpackage","php5nestedsetbuilder::getunprefixedclassname","php5nestedsetpeerbuilder::getpackage","php5nestedsetpeerbuilder::getunprefixedclassname","php5nodebuilder::getpackage","php5nodebuilder::getunprefixedclassname","php5nodepeerbuilder::getpackage","php5nodepeerbuilder::getunprefixedclassname","php5objectbuilder::getpackage","php5objectbuilder::getnamespace","php5objectbuilder::getdefaultkeytype","php5objectbuilder::getunprefixedclassname","php5objectbuilder::addtemporalaccessorcomment","php5objectbuilder::addtemporalaccessoropen","php5objectbuilder::adddefaultaccessorcomment","php5objectbuilder::adddefaultaccessoropen","php5objectbuilder::addmutatorcomment","php5objectbuilder::addmutatoropenopen","php5objectbuilder::addtemporalmutatorcomment","php5objectbuilder::addbooleanmutatorcomment","php5objectbuilder::getfkvarname","php5objectbuilder::getreffkcollvarname","php5objectbuilder::getpkreffkvarname","php5peerbuilder::getunprefixedclassname","php5peerbuilder::getpackage","php5peerbuilder::getnamespace","php5peerbuilder::gettablemapclass","php5peerbuilder::gettablephpname","php5peerbuilder::addinheritancecolumnconstants","php5peerbuilder::getinstancepoolkeysnippet","php5peerbuilder::addcriteriajoin","php5tablemapbuilder::getpackage","php5tablemapbuilder::getnamespace","php5tablemapbuilder::getunprefixedclassname","php5tablemapbuilder::hasbehaviormodifier","php5tablemapbuilder::applybehaviormodifier","peerbuilder::__construct","peerbuilder::getretrievemethodname","peerbuilder::getcolumnname","peerbuilder::hasbehaviormodifier","peerbuilder::applybehaviormodifier","peerbuilder::getbehaviorcontent","peerbuilder::getbasepeerclassname","persistent::getprimarykey","persistent::setprimarykey","persistent::ismodified","persistent::iscolumnmodified","persistent::isnew","persistent::setnew","persistent::resetmodified","persistent::isdeleted","persistent::setdeleted","persistent::delete","persistent::save","pgsqldatasqlbuilder::__construct","pgsqldatasqlbuilder::buildrowsql","pgsqldatasqlbuilder::gettableendsql","pgsqlplatform::getnativeidmethod","pgsqlplatform::getautoincrement","pgsqlplatform::getmaxcolumnnamelength","pgsqlplatform::disconnectedescapetext","pgsqlplatform::getbooleanstring","pgsqlplatform::supportsnativedeletetrigger","pgsqlplatform::getsequencename","pgsqlplatform::getaddschemasddl","pgsqlplatform::getaddschemaddl","pgsqlplatform::getuseschemaddl","pgsqlplatform::getresetschemaddl","pgsqlplatform::getaddtablesddl","pgsqlplatform::getaddtableddl","pgsqlplatform::getdroptableddl","pgsqlplatform::getprimarykeyname","pgsqlplatform::getcolumnddl","pgsqlplatform::getuniqueddl","pgsqlplatform::supportsschemas","pgsqlplatform::hassize","pgsqlplatform::hasstreamblobimpl","pgsqlplatform::supportsvarcharwithoutsize","pgsqlplatform::getmodifycolumnddl","pgsqlplatform::getmodifycolumnsddl","pgsqlplatform::getaddcolumnsddl","pgsqlplatform::getdropindexddl","pgsqlplatform::getidentifierphp","pgsqlschemaparser::parse","phpnamegenerator::generatename","pluralizer::getpluralform","preordernodeiterator::__construct","preordernodeiterator::rewind","preordernodeiterator::valid","preordernodeiterator::current","preordernodeiterator::key","preordernodeiterator::next","propel::initialize","propel::configure","propel::init","propel::isinit","propel::setconfiguration","propel::getconfiguration","propel::setlogger","propel::haslogger","propel::logger","propel::log","propel::getdatabasemap","propel::setdatabasemap","propel::setforcemasterconnection","propel::getforcemasterconnection","propel::setconnection","propel::getconnection","propel::getmasterconnection","propel::getslaveconnection","propel::initconnection","propel::getdb","propel::setdb","propel::getdefaultdb","propel::close","propel::autoload","propel::initbasedir","propel::importclass","propel::setdatabasemapclass","propel::disableinstancepooling","propel::enableinstancepooling","propel::isinstancepoolingenabled","propelarraycollection::save","propelarraycollection::delete","propelarraycollection::getprimarykeys","propelarraycollection::fromarray","propelarraycollection::toarray","propelarraycollection::getarraycopy","propelarraycollection::tokeyvalue","propelarrayformatter::format","propelarrayformatter::formatone","propelarrayformatter::formatrecord","propelarrayformatter::isobjectformatter","propelarrayformatter::getstructuredarrayfromrow","propelautoloader::getinstance","propelautoloader::register","propelautoloader::unregister","propelautoloader::addclasspaths","propelautoloader::addclasspath","propelautoloader::getclasspath","propelautoloader::autoload","propelcsvparser::fromarray","propelcsvparser::listfromarray","propelcsvparser::tocsv","propelcsvparser::toarray","propelcsvparser::listtoarray","propelcsvparser::fromcsv","propelcollection::getdata","propelcollection::setdata","propelcollection::getposition","propelcollection::getfirst","propelcollection::isfirst","propelcollection::getprevious","propelcollection::getcurrent","propelcollection::getnext","propelcollection::getlast","propelcollection::islast","propelcollection::isempty","propelcollection::isodd","propelcollection::iseven","propelcollection::get","propelcollection::pop","propelcollection::shift","propelcollection::prepend","propelcollection::set","propelcollection::remove","propelcollection::clear","propelcollection::contains","propelcollection::search","propelcollection::diff","propelcollection::serialize","propelcollection::unserialize","propelcollection::getiterator","propelcollection::getinternaliterator","propelcollection::cleariterator","propelcollection::setmodel","propelcollection::getmodel","propelcollection::getpeerclass","propelcollection::setformatter","propelcollection::getformatter","propelcollection::getconnection","propelcollection::importfrom","propelcollection::exportto","propelcollection::__call","propelcollection::__tostring","propelcollection::__clone","propelcollection::toarray","propelcollection::fromxml","propelcollection::fromyaml","propelcollection::fromjson","propelcollection::fromcsv","propelcollection::toxml","propelcollection::toyaml","propelcollection::tojson","propelcollection::tocsv","propelcolumncomparator::computediff","propelcolumncomparator::comparecolumns","propelcolumndiff::setchangedproperties","propelcolumndiff::getchangedproperties","propelcolumndiff::setfromcolumn","propelcolumndiff::getfromcolumn","propelcolumndiff::settocolumn","propelcolumndiff::gettocolumn","propelcolumndiff::getreversediff","propelcolumndiff::__tostring","propelcolumntypes::getpdotype","propelconditionalproxy::__construct","propelconditionalproxy::_if","propelconditionalproxy::_elseif","propelconditionalproxy::_else","propelconditionalproxy::_endif","propelconditionalproxy::getparentproxy","propelconditionalproxy::getcriteriaorproxy","propelconditionalproxy::__call","propelconfiguration::__construct","propelconfiguration::offsetexists","propelconfiguration::offsetset","propelconfiguration::offsetget","propelconfiguration::offsetunset","propelconfiguration::getparameter","propelconfiguration::setparameter","propelconfiguration::getparameters","propelconfiguration::getflattenedparameters","propelconfigurationiterator::getnamespace","propelconfigurationiterator::getnodetype","propelconfigurationiterator::current","propelconfigurationiterator::endchildren","propelconvertconftask::setxmlconffile","propelconvertconftask::setoutputfile","propelconvertconftask::setoutputclassmapfile","propelconvertconftask::main","propeldatadumptask::setdatadbmap","propeldatadumptask::getdatadbmap","propeldatadumptask::getdatabasename","propeldatadumptask::setdatabasename","propeldatadumptask::getdatabaseurl","propeldatadumptask::setdatabaseurl","propeldatadumptask::getdatabaseuser","propeldatadumptask::setdatabaseuser","propeldatadumptask::getdatabasepassword","propeldatadumptask::setdatabasepassword","propeldatadumptask::getdatabasedriver","propeldatadumptask::setdatabasedriver","propeldatadumptask::main","propeldatasqltask::setsqldbmap","propeldatasqltask::getsqldbmap","propeldatasqltask::setdatadbmap","propeldatasqltask::getdatadbmap","propeldatasqltask::setsrcdir","propeldatasqltask::getsrcdir","propeldatasqltask::main","propeldatabasecomparator::__construct","propeldatabasecomparator::getdatabasediff","propeldatabasecomparator::setfromdatabase","propeldatabasecomparator::getfromdatabase","propeldatabasecomparator::settodatabase","propeldatabasecomparator::gettodatabase","propeldatabasecomparator::computediff","propeldatabasecomparator::comparetables","propeldatabasediff::setaddedtables","propeldatabasediff::addaddedtable","propeldatabasediff::removeaddedtable","propeldatabasediff::getaddedtables","propeldatabasediff::countaddedtables","propeldatabasediff::getaddedtable","propeldatabasediff::setremovedtables","propeldatabasediff::addremovedtable","propeldatabasediff::removeremovedtable","propeldatabasediff::getremovedtables","propeldatabasediff::countremovedtables","propeldatabasediff::getremovedtable","propeldatabasediff::setmodifiedtables","propeldatabasediff::addmodifiedtable","propeldatabasediff::countmodifiedtables","propeldatabasediff::getmodifiedtables","propeldatabasediff::setrenamedtables","propeldatabasediff::addrenamedtable","propeldatabasediff::getrenamedtables","propeldatabasediff::countrenamedtables","propeldatabasediff::getreversediff","propeldatabasediff::getdescription","propeldatabasediff::__tostring","propeldatetime::newinstance","propeldatetime::istimestamp","propeldatetime::__sleep","propeldatetime::__wakeup","propeldotgenerator::create","propelexception::__construct","propelexception::getcause","propelforeignkeycomparator::computediff","propelformatter::__construct","propelformatter::init","propelformatter::setdbname","propelformatter::getdbname","propelformatter::setclass","propelformatter::getclass","propelformatter::setpeer","propelformatter::getpeer","propelformatter::setwith","propelformatter::getwith","propelformatter::setascolumns","propelformatter::getascolumns","propelformatter::sethaslimit","propelformatter::haslimit","propelformatter::formatrecord","propelformatter::format","propelformatter::formatone","propelformatter::isobjectformatter","propelformatter::checkinit","propelformatter::gettablemap","propelformatter::getsingleobjectfromrow","propelgraphviztask::setoutputdirectory","propelgraphviztask::setsqldbmap","propelgraphviztask::getsqldbmap","propelgraphviztask::setdatabase","propelgraphviztask::getdatabase","propelgraphviztask::main","propelgraphviztask::writedot","propelindexcomparator::computediff","propeljsonparser::fromarray","propeljsonparser::tojson","propeljsonparser::toarray","propeljsonparser::fromjson","propelmigrationdowntask::main","propelmigrationmanager::setconnections","propelmigrationmanager::getconnections","propelmigrationmanager::getconnection","propelmigrationmanager::getpdoconnection","propelmigrationmanager::getplatform","propelmigrationmanager::setmigrationtable","propelmigrationmanager::getmigrationtable","propelmigrationmanager::setmigrationdir","propelmigrationmanager::getmigrationdir","propelmigrationmanager::getoldestdatabaseversion","propelmigrationmanager::migrationtableexists","propelmigrationmanager::createmigrationtable","propelmigrationmanager::updatelatestmigrationtimestamp","propelmigrationmanager::getmigrationtimestamps","propelmigrationmanager::getvalidmigrationtimestamps","propelmigrationmanager::haspendingmigrations","propelmigrationmanager::getalreadyexecutedmigrationtimestamps","propelmigrationmanager::getfirstupmigrationtimestamp","propelmigrationmanager::getfirstdownmigrationtimestamp","propelmigrationmanager::getmigrationclassname","propelmigrationmanager::getmigrationobject","propelmigrationmanager::getmigrationclassbody","propelmigrationmanager::getmigrationfilename","propelmigrationmanager::getuser","propelmigrationstatustask::main","propelmigrationtask::main","propelmigrationuptask::main","propelmodelpager::__construct","propelmodelpager::setquery","propelmodelpager::getquery","propelmodelpager::init","propelmodelpager::getresults","propelmodelpager::getcurrentmaxlink","propelmodelpager::getmaxrecordlimit","propelmodelpager::setmaxrecordlimit","propelmodelpager::getlinks","propelmodelpager::havetopaginate","propelmodelpager::getfirstindex","propelmodelpager::getlastindex","propelmodelpager::getnbresults","propelmodelpager::isfirstpage","propelmodelpager::getfirstpage","propelmodelpager::islastpage","propelmodelpager::getlastpage","propelmodelpager::getpage","propelmodelpager::setpage","propelmodelpager::getnextpage","propelmodelpager::getpreviouspage","propelmodelpager::getmaxperpage","propelmodelpager::setmaxperpage","propelmodelpager::isfirst","propelmodelpager::islast","propelmodelpager::isempty","propelmodelpager::isodd","propelmodelpager::iseven","propelmodelpager::getiterator","propelmodelpager::count","propelomtask::settargetplatform","propelomtask::gettargetplatform","propelomtask::main","propelobjectcollection::save","propelobjectcollection::delete","propelobjectcollection::getprimarykeys","propelobjectcollection::fromarray","propelobjectcollection::getarraycopy","propelobjectcollection::tokeyvalue","propelobjectcollection::populaterelation","propelobjectcollection::search","propelobjectcollection::contains","propelobjectformatter::format","propelobjectformatter::formatone","propelobjectformatter::isobjectformatter","propelobjectformatter::getallobjectsfromrow","propelondemandcollection::inititerator","propelondemandcollection::fromarray","propelondemandcollection::getiterator","propelondemandcollection::offsetexists","propelondemandcollection::offsetget","propelondemandcollection::offsetset","propelondemandcollection::offsetunset","propelondemandcollection::serialize","propelondemandcollection::unserialize","propelondemandcollection::count","propelondemandcollection::append","propelondemandcollection::prepend","propelondemandcollection::asort","propelondemandcollection::exchangearray","propelondemandcollection::getarraycopy","propelondemandcollection::getflags","propelondemandcollection::ksort","propelondemandcollection::natcasesort","propelondemandcollection::natsort","propelondemandcollection::setflags","propelondemandcollection::uasort","propelondemandcollection::uksort","propelondemandcollection::exportto","propelondemandformatter::init","propelondemandformatter::format","propelondemandformatter::getallobjectsfromrow","propelondemanditerator::__construct","propelondemanditerator::closecursor","propelondemanditerator::count","propelondemanditerator::current","propelondemanditerator::key","propelondemanditerator::next","propelondemanditerator::rewind","propelondemanditerator::valid","propelpdo::__construct","propelpdo::setconfiguration","propelpdo::getconfiguration","propelpdo::getnestedtransactioncount","propelpdo::isintransaction","propelpdo::iscommitable","propelpdo::begintransaction","propelpdo::commit","propelpdo::rollback","propelpdo::forcerollback","propelpdo::setattribute","propelpdo::getattribute","propelpdo::prepare","propelpdo::exec","propelpdo::query","propelpdo::clearstatementcache","propelpdo::getquerycount","propelpdo::incrementquerycount","propelpdo::getlastexecutedquery","propelpdo::setlastexecutedquery","propelpdo::usedebug","propelpdo::setloglevel","propelpdo::setlogger","propelpdo::getlogger","propelpdo::log","propelpdo::getdebugsnapshot","propelpdo::__destruct","propelphpparser::__construct","propelphpparser::getcode","propelphpparser::findmethod","propelphpparser::removemethod","propelphpparser::replacemethod","propelphpparser::addmethodafter","propelphpparser::addmethodbefore","propelpager::__construct","propelpager::setcriteria","propelpager::getcriteria","propelpager::setpeerclass","propelpager::getpeerclass","propelpager::setpeermethod","propelpager::getpeermethod","propelpager::setpeerselectmethod","propelpager::getpeerselectmethod","propelpager::setpeercountmethod","propelpager::getpeercountmethod","propelpager::getresult","propelpager::getfirstpage","propelpager::atfirstpage","propelpager::getlastpage","propelpager::atlastpage","propelpager::gettotalpages","propelpager::getprevlinks","propelpager::getnextlinks","propelpager::islastpagecomplete","propelpager::getprev","propelpager::getnext","propelpager::setpage","propelpager::getpage","propelpager::setrowsperpage","propelpager::getrowsperpage","propelpager::gettotalrecordcount","propelpager::setstart","propelpager::setmax","propelpager::count","propelpager::current","propelpager::key","propelpager::next","propelpager::rewind","propelpager::valid","propelparser::fromarray","propelparser::toarray","propelparser::listfromarray","propelparser::listtoarray","propelparser::load","propelparser::dump","propelparser::getparser","propelplatforminterface::setconnection","propelplatforminterface::getconnection","propelplatforminterface::setgeneratorconfig","propelplatforminterface::getdatabasetype","propelplatforminterface::getnativeidmethod","propelplatforminterface::getmaxcolumnnamelength","propelplatforminterface::getdomainfortype","propelplatforminterface::getnullstring","propelplatforminterface::getautoincrement","propelplatforminterface::getcolumnddl","propelplatforminterface::getcolumndefaultvalueddl","propelplatforminterface::getcolumnlistddl","propelplatforminterface::getprimarykeyddl","propelplatforminterface::hassize","propelplatforminterface::hasscale","propelplatforminterface::quote","propelplatforminterface::quoteidentifier","propelplatforminterface::supportsnativedeletetrigger","propelplatforminterface::supportsinsertnullpk","propelplatforminterface::supportsschemas","propelplatforminterface::supportsmigrations","propelplatforminterface::supportsvarcharwithoutsize","propelplatforminterface::getbooleanstring","propelplatforminterface::hasstreamblobimpl","propelplatforminterface::gettimestampformatter","propelplatforminterface::getdateformatter","propelplatforminterface::gettimeformatter","propelquery::from","propelquickbuilder::setclasstargets","propelquickbuilder::setschema","propelquickbuilder::setplatform","propelquickbuilder::getplatform","propelquickbuilder::setconfig","propelquickbuilder::getconfig","propelquickbuilder::buildschema","propelquickbuilder::build","propelquickbuilder::getdatabase","propelquickbuilder::buildsql","propelquickbuilder::getsql","propelquickbuilder::buildclasses","propelquickbuilder::getclasses","propelquickbuilder::getclassesfortable","propelquickbuilder::debugclassesfortable","propelsqldifftask::setdatabasename","propelsqldifftask::getdatabasename","propelsqldifftask::seteditorcmd","propelsqldifftask::geteditorcmd","propelsqldifftask::setcaseinsensitive","propelsqldifftask::iscaseinsensitive","propelsqldifftask::main","propelsqlexec::setsqldbmap","propelsqlexec::getsqldbmap","propelsqlexec::setbuildconnections","propelsqlexec::getbuildconnections","propelsqlexec::getbuildconnection","propelsqlexec::setsrcdir","propelsqlexec::getsrcdir","propelsqlexec::seturl","propelsqlexec::setuserid","propelsqlexec::setpassword","propelsqlexec::setautocommit","propelsqlexec::setonerror","propelsqlexec::main","propelsqlparser::setsql","propelsqlparser::getsql","propelsqlparser::executestring","propelsqlparser::executefile","propelsqlparser::parsestring","propelsqlparser::parsefile","propelsqlparser::convertlinefeedstounixstyle","propelsqlparser::stripsqlcommentlines","propelsqlparser::explodeintostatements","propelsqlparser::getnextstatement","propelsqltask::setsqldbmap","propelsqltask::getsqldbmap","propelsqltask::setdatabase","propelsqltask::getdatabase","propelsqltask::main","propelsqltask::getwarnings","propelschemareversetask::getdbschema","propelschemareversetask::setdbschema","propelschemareversetask::getdbencoding","propelschemareversetask::setdbencoding","propelschemareversetask::getdatabasename","propelschemareversetask::setdatabasename","propelschemareversetask::setoutputfile","propelschemareversetask::setsamephpname","propelschemareversetask::setaddvendorinfo","propelschemareversetask::setaddvalidators","propelschemareversetask::issamephpname","propelschemareversetask::main","propelschemareverse_validatorset::getvalidator","propelschemareverse_validatorset::getvalidators","propelschemavalidator::__construct","propelschemavalidator::validate","propelschemavalidator::geterrors","propelsimplearrayformatter::format","propelsimplearrayformatter::formatone","propelsimplearrayformatter::isobjectformatter","propelsimplearrayformatter::getstructuredarrayfromrow","propelsqlbuildtask::main","propelsqlmanager::setconnections","propelsqlmanager::getconnections","propelsqlmanager::hasconnection","propelsqlmanager::getconnection","propelsqlmanager::setgeneratorconfig","propelsqlmanager::getgeneratorconfig","propelsqlmanager::setdatamodels","propelsqlmanager::getdatamodels","propelsqlmanager::setworkingdirectory","propelsqlmanager::getworkingdirectory","propelsqlmanager::getdatabases","propelsqlmanager::getsqldbmapfilename","propelsqlmanager::buildsql","propelsqlmanager::insertsql","propelstatementformatter::format","propelstatementformatter::formatone","propelstatementformatter::formatrecord","propelstatementformatter::isobjectformatter","propelstringreader::__construct","propelstringreader::skip","propelstringreader::eof","propelstringreader::read","propelstringreader::mark","propelstringreader::reset","propelstringreader::close","propelstringreader::open","propelstringreader::ready","propelstringreader::marksupported","propelstringreader::getresource","propeltablecomparator::__construct","propeltablecomparator::gettablediff","propeltablecomparator::setfromtable","propeltablecomparator::getfromtable","propeltablecomparator::settotable","propeltablecomparator::gettotable","propeltablecomparator::computediff","propeltablecomparator::comparecolumns","propeltablecomparator::compareprimarykeys","propeltablecomparator::compareindices","propeltablecomparator::compareforeignkeys","propeltablediff::setfromtable","propeltablediff::getfromtable","propeltablediff::settotable","propeltablediff::gettotable","propeltablediff::setaddedcolumns","propeltablediff::addaddedcolumn","propeltablediff::removeaddedcolumn","propeltablediff::getaddedcolumns","propeltablediff::getaddedcolumn","propeltablediff::setremovedcolumns","propeltablediff::addremovedcolumn","propeltablediff::removeremovedcolumn","propeltablediff::getremovedcolumns","propeltablediff::getremovedcolumn","propeltablediff::setmodifiedcolumns","propeltablediff::addmodifiedcolumn","propeltablediff::getmodifiedcolumns","propeltablediff::setrenamedcolumns","propeltablediff::addrenamedcolumn","propeltablediff::getrenamedcolumns","propeltablediff::setaddedpkcolumns","propeltablediff::addaddedpkcolumn","propeltablediff::removeaddedpkcolumn","propeltablediff::getaddedpkcolumns","propeltablediff::setremovedpkcolumns","propeltablediff::addremovedpkcolumn","propeltablediff::removeremovedpkcolumn","propeltablediff::getremovedpkcolumns","propeltablediff::setrenamedpkcolumns","propeltablediff::addrenamedpkcolumn","propeltablediff::getrenamedpkcolumns","propeltablediff::hasmodifiedpk","propeltablediff::setaddedindices","propeltablediff::addaddedindex","propeltablediff::getaddedindices","propeltablediff::setremovedindices","propeltablediff::addremovedindex","propeltablediff::getremovedindices","propeltablediff::setmodifiedindices","propeltablediff::addmodifiedindex","propeltablediff::getmodifiedindices","propeltablediff::setaddedfks","propeltablediff::addaddedfk","propeltablediff::removeaddedfk","propeltablediff::getaddedfks","propeltablediff::setremovedfks","propeltablediff::addremovedfk","propeltablediff::removeremovedfk","propeltablediff::getremovedfks","propeltablediff::setmodifiedfks","propeltablediff::addmodifiedfk","propeltablediff::getmodifiedfks","propeltablediff::getreversediff","propeltablediff::__tostring","propeltemplate::settemplate","propeltemplate::settemplatefile","propeltemplate::render","propeltypes::getphpnative","propeltypes::getcreoletype","propeltypes::getpdotype","propeltypes::getpdotypestring","propeltypes::getpropeltype","propeltypes::getpropeltypes","propeltypes::istemporaltype","propeltypes::istexttype","propeltypes::isnumerictype","propeltypes::isbooleantype","propeltypes::islobtype","propeltypes::isphpprimitivetype","propeltypes::isphpprimitivenumerictype","propeltypes::isphpobjecttype","propeltypes::isphparraytype","propelxmlparser::fromarray","propelxmlparser::listfromarray","propelxmlparser::toxml","propelxmlparser::listtoxml","propelxmlparser::toarray","propelxmlparser::fromxml","propelyamlparser::fromarray","propelyamlparser::toyaml","propelyamlparser::toarray","propelyamlparser::fromyaml","querybuilder::getpackage","querybuilder::getnamespace","querybuilder::getunprefixedclassname","querybuilder::hasbehaviormodifier","querybuilder::applybehaviormodifier","querybuilder::getbehaviorcontent","querycachebehavior::queryattributes","querycachebehavior::querymethods","queryinheritancebuilder::getunprefixedclassname","queryinheritancebuilder::getpackage","queryinheritancebuilder::getnamespace","queryinheritancebuilder::setchild","queryinheritancebuilder::getchild","quickgeneratorconfig::__construct","quickgeneratorconfig::getconfiguredbuilder","quickgeneratorconfig::getconfiguredpluralizer","quickgeneratorconfig::setbuildproperties","quickgeneratorconfig::getbuildproperty","quickgeneratorconfig::setbuildproperty","quickgeneratorconfig::getconfiguredplatform","quickgeneratorconfig::getconfiguredbehavior","relationmap::__construct","relationmap::getname","relationmap::setpluralname","relationmap::getpluralname","relationmap::settype","relationmap::gettype","relationmap::setlocaltable","relationmap::getlocaltable","relationmap::setforeigntable","relationmap::getforeigntable","relationmap::getlefttable","relationmap::getrighttable","relationmap::addcolumnmapping","relationmap::getcolumnmappings","relationmap::iscomposite","relationmap::countcolumnmappings","relationmap::getlocalcolumns","relationmap::getforeigncolumns","relationmap::getleftcolumns","relationmap::getrightcolumns","relationmap::setonupdate","relationmap::getonupdate","relationmap::setondelete","relationmap::getondelete","relationmap::getsymmetricalrelation","requiredvalidator::isvalid","rule::setvalidator","rule::getvalidator","rule::setclass","rule::getclass","rule::setname","rule::getname","rule::setvalue","rule::getvalue","rule::setmessage","rule::getmessage","rule::appendxml","schemaparser::getconnection","schemaparser::setconnection","schemaparser::setgeneratorconfig","schemaparser::getbuildproperty","schemaparser::getwarnings","schemaparser::parse","scopedelement::getnamespace","scopedelement::setnamespace","scopedelement::getpackage","scopedelement::setpackage","scopedelement::getschema","scopedelement::setschema","sluggablebehavior::modifytable","sluggablebehavior::presave","sluggablebehavior::objectmethods","sluggablebehavior::addcleanupslugpart","sluggablebehavior::addlimitslugsize","sluggablebehavior::addmakeslugunique","sluggablebehavior::querymethods","softdeletebehavior::modifytable","softdeletebehavior::objectmethods","softdeletebehavior::addobjectforcedelete","softdeletebehavior::addobjectundelete","softdeletebehavior::predelete","softdeletebehavior::queryattributes","softdeletebehavior::querymethods","softdeletebehavior::addqueryincludedeleted","softdeletebehavior::addquerysoftdelete","softdeletebehavior::addqueryforcedelete","softdeletebehavior::addqueryforcedeleteall","softdeletebehavior::addqueryundelete","softdeletebehavior::addqueryenablesoftdelete","softdeletebehavior::addquerydisablesoftdelete","softdeletebehavior::addqueryissoftdeleteenabled","softdeletebehavior::preselectquery","softdeletebehavior::predeletequery","softdeletebehavior::staticmethods","softdeletebehavior::addpeerenablesoftdelete","softdeletebehavior::addpeerdisablesoftdelete","softdeletebehavior::addpeerissoftdeleteenabled","softdeletebehavior::addpeerdosoftdelete","softdeletebehavior::addpeerdodelete2","softdeletebehavior::addpeerdosoftdeleteall","softdeletebehavior::addpeerdodeleteall2","softdeletebehavior::preselect","softdeletebehavior::peerfilter","sortablebehavior::modifytable","sortablebehavior::generatescopephp","sortablebehavior::getcolumngetter","sortablebehavior::getcolumnsetter","sortablebehavior::addparameter","sortablebehavior::getscopes","sortablebehavior::hasmultiplescopes","sortablebehavior::getobjectbuildermodifier","sortablebehavior::getquerybuildermodifier","sortablebehavior::getpeerbuildermodifier","sortablebehavior::usescope","sortablebehaviorobjectbuildermodifier::__construct","sortablebehaviorobjectbuildermodifier::presave","sortablebehaviorobjectbuildermodifier::preinsert","sortablebehaviorobjectbuildermodifier::preupdate","sortablebehaviorobjectbuildermodifier::predelete","sortablebehaviorobjectbuildermodifier::objectattributes","sortablebehaviorobjectbuildermodifier::objectmethods","sortablebehaviorobjectbuildermodifier::objectfilter","sortablebehaviorpeerbuildermodifier::__construct","sortablebehaviorpeerbuildermodifier::staticattributes","sortablebehaviorpeerbuildermodifier::staticmethods","sortablebehaviorpeerbuildermodifier::addsortableapplyscopecriteria","sortablebehaviorquerybuildermodifier::__construct","sortablebehaviorquerybuildermodifier::querymethods","sortablerelationbehavior::objectmethods","sortablerelationbehavior::predelete","sqliteplatform::getautoincrement","sqliteplatform::getmaxcolumnnamelength","sqliteplatform::getaddtableddl","sqliteplatform::getdropprimarykeyddl","sqliteplatform::getaddprimarykeyddl","sqliteplatform::getaddforeignkeyddl","sqliteplatform::getdropforeignkeyddl","sqliteplatform::getdroptableddl","sqliteplatform::getforeignkeyddl","sqliteplatform::hassize","sqliteplatform::disconnectedescapetext","sqliteplatform::quoteidentifier","sqliteplatform::supportsmigrations","sqliteschemaparser::parse","sqlsrvplatform::getmaxcolumnnamelength","standardenglishpluralizer::getpluralform","table::__construct","table::setupobject","table::getbuildproperty","table::applybehaviors","table::dofinalinitialization","table::addextraindices","table::getcolumnlist","table::donaming","table::getbaseclass","table::setbaseclass","table::getbasepeer","table::setbasepeer","table::addcolumn","table::removecolumn","table::adjustcolumnpositions","table::addvalidator","table::removevalidatorforcolumn","table::addforeignkey","table::getchildrencolumn","table::getchildrennames","table::addreferrer","table::getreferrers","table::setupreferrers","table::getcrossfks","table::setcontainsforeignpk","table::getcontainsforeignpk","table::getforeigntablenames","table::requirestransactioninpostgres","table::addidmethodparameter","table::removeindex","table::hasindex","table::addindex","table::addunique","table::getgeneratorconfig","table::addbehavior","table::getbehaviors","table::getearlybehaviors","table::hasbehavior","table::getbehavior","table::hasadditionalbuilders","table::getadditionalbuilders","table::getname","table::getdescription","table::hasdescription","table::setdescription","table::getphpname","table::setphpname","table::buildphpname","table::getstudlyphpname","table::getcommonname","table::setcommonname","table::setdefaultstringformat","table::getdefaultstringformat","table::getidmethod","table::isallowpkinsert","table::setidmethod","table::isskipsql","table::isreadonly","table::setskipsql","table::isreloadoninsert","table::isreloadonupdate","table::getalias","table::isalias","table::setalias","table::getinterface","table::setinterface","table::isabstract","table::setabstract","table::getcolumns","table::getnumcolumns","table::getnumlazyloadcolumns","table::hasenumcolumns","table::getvalidators","table::getforeignkeys","table::getidmethodparameters","table::getindices","table::getunices","table::hascolumn","table::getcolumn","table::getcolumnbyphpname","table::getforeignkeysreferencingtable","table::getcolumnforeignkeys","table::containscolumn","table::setdatabase","table::getdatabase","table::isforreferenceonly","table::setforreferenceonly","table::treemode","table::settreemode","table::appendxml","table::getprimarykey","table::hasprimarykey","table::hascompositeprimarykey","table::getfirstprimarykeycolumn","table::hasautoincrementprimarykey","table::getautoincrementprimarykey","table::printprimarykey","table::getiscrossref","table::setiscrossref","table::hasforeignkeys","table::hascrossforeignkeys","table::getnonprefixedname","tablemap::__construct","tablemap::initialize","tablemap::setdatabasemap","tablemap::getdatabasemap","tablemap::setname","tablemap::getname","tablemap::setphpname","tablemap::getphpname","tablemap::setclassname","tablemap::getclassname","tablemap::getpeerclassname","tablemap::setpackage","tablemap::getpackage","tablemap::setuseidgenerator","tablemap::isuseidgenerator","tablemap::setsingletableinheritance","tablemap::issingletableinheritance","tablemap::setprimarykeymethodinfo","tablemap::getprimarykeymethodinfo","tablemap::addcolumn","tablemap::addconfiguredcolumn","tablemap::hascolumn","tablemap::getcolumn","tablemap::hascolumnbyphpname","tablemap::getcolumnbyphpname","tablemap::hascolumnbyinsensitivecase","tablemap::getcolumnbyinsensitivecase","tablemap::getcolumns","tablemap::addprimarykey","tablemap::addforeignkey","tablemap::addforeignprimarykey","tablemap::iscrossref","tablemap::setiscrossref","tablemap::getprimarykeys","tablemap::getforeignkeys","tablemap::addvalidator","tablemap::buildrelations","tablemap::addrelation","tablemap::hasrelation","tablemap::getrelation","tablemap::getrelations","tablemap::getbehaviors","tablemap::hasprimarystringcolumn","tablemap::getprimarystringcolumn","tablemap::containscolumn","tablemap::getprimarykeycolumns","tablemap::getprefix","tablemap::setprefix","tablemap::removeunderscores","timestampablebehavior::modifytable","timestampablebehavior::preupdate","timestampablebehavior::preinsert","timestampablebehavior::objectmethods","timestampablebehavior::querymethods","typevalidator::isvalid","unique::isunique","unique::appendxml","uniquevalidator::isvalid","validvaluesvalidator::isvalid","validationfailed::__construct","validationfailed::setcolumn","validationfailed::getcolumn","validationfailed::setmessage","validationfailed::getmessage","validationfailed::setvalidator","validationfailed::getvalidator","validationfailed::__tostring","validator::addrule","validator::getrules","validator::getcolumnname","validator::setcolumn","validator::getcolumn","validator::settable","validator::gettable","validator::settranslate","validator::gettranslate","validator::appendxml","validatormap::__construct","validatormap::getcolumn","validatormap::getcolumnname","validatormap::setname","validatormap::setclass","validatormap::setvalue","validatormap::setmessage","validatormap::getname","validatormap::getclass","validatormap::getvalue","validatormap::getmessage","vendorinfo::__construct","vendorinfo::settype","vendorinfo::gettype","vendorinfo::addparameter","vendorinfo::setparameter","vendorinfo::getparameter","vendorinfo::hasparameter","vendorinfo::setparameters","vendorinfo::getparameters","vendorinfo::isempty","vendorinfo::getmergedvendorinfo","vendorinfo::appendxml","versionablebehavior::modifydatabase","versionablebehavior::modifytable","versionablebehavior::addforeignkeyversioncolumns","versionablebehavior::getversiontable","versionablebehavior::getversiontablephpname","versionablebehavior::getversionablefks","versionablebehavior::getversionablereferrers","versionablebehavior::getreferreridscolumn","versionablebehavior::getreferrerversionscolumn","versionablebehavior::getobjectbuildermodifier","versionablebehavior::getquerybuildermodifier","versionablebehavior::getpeerbuildermodifier","versionablebehaviorobjectbuildermodifier::__construct","versionablebehaviorobjectbuildermodifier::presave","versionablebehaviorobjectbuildermodifier::postsave","versionablebehaviorobjectbuildermodifier::postdelete","versionablebehaviorobjectbuildermodifier::objectattributes","versionablebehaviorobjectbuildermodifier::objectmethods","versionablebehaviorpeerbuildermodifier::staticattributes","versionablebehaviorpeerbuildermodifier::staticmethods","versionablebehaviorpeerbuildermodifier::addisversioningenabled","versionablebehaviorpeerbuildermodifier::addenableversioning","versionablebehaviorpeerbuildermodifier::adddisableversioning","versionablebehaviorquerybuildermodifier::__construct","versionablebehaviorquerybuildermodifier::querymethods","xmlelement::loadfromxml","xmlelement::getattributes","xmlelement::getattribute","xmlelement::appendxml","xmlelement::addvendorinfo","xmlelement::getvendorinfofortype","xmlelement::getconfiguredbehavior","xmlelement::tostring","xmlelement::__tostring","xmltoappdata::__construct","xmltoappdata::setgeneratorconfig","xmltoappdata::parsefile","xmltoappdata::parsestring","xmltoappdata::startelement","xmltoappdata::_throwinvalidtagexception","xmltoappdata::endelement","xmltodatasql::__construct","xmltodatasql::transform","xmltodatasql::startelement","xmltodatasql::endelement","sfyaml::setspecversion","sfyaml::getspecversion","sfyaml::load","sfyaml::dump","sfyamldumper::dump","sfyamlinline::load","sfyamlinline::dump","sfyamlinline::parsescalar","sfyamlparser::__construct","sfyamlparser::parse"],
        'info': [["","",".html","","",3],["AbstractPropelDataModelTask","","AbstractPropelDataModelTask.html"," < AbstractPropelTask","An abstract base Propel task to perform work related",1],["AbstractPropelTask","","AbstractPropelTask.html"," < Task","",1],["AggregateColumnBehavior","","AggregateColumnBehavior.html"," < Behavior","Keeps an aggregate column updated with related table",1],["AggregateColumnRelationBehavior","","AggregateColumnRelationBehavior.html"," < Behavior","Keeps an aggregate column updated with related table",1],["AlternativeCodingStandardsBehavior","","AlternativeCodingStandardsBehavior.html"," < Behavior","Changes the coding standard of Propel generated Model",1],["AppData","","AppData.html","","A class for holding application data structures.",1],["ArchivableBehavior","","ArchivableBehavior.html"," < Behavior","Keeps tracks of an ActiveRecord object, even after",1],["ArchivableBehaviorObjectBuilderModifier","","ArchivableBehaviorObjectBuilderModifier.html","","Keeps tracks of an ActiveRecord object, even after",1],["ArchivableBehaviorQueryBuilderModifier","","ArchivableBehaviorQueryBuilderModifier.html","","Keeps tracks of an ActiveRecord object, even after",1],["AutoAddPkBehavior","","AutoAddPkBehavior.html"," < Behavior","Adds a primary key to models defined without one",1],["BaseObject","","BaseObject.html","","This class contains attributes and methods that are",1],["BasePeer","","BasePeer.html","","This is a utility class for all generated Peer classes",1],["BasePropelMigrationTask","","BasePropelMigrationTask.html"," < AbstractPropelTask","This Task lists the migrations yet to be executed",1],["BaseSchemaParser","","BaseSchemaParser.html","","Base class for reverse engineering a database schema.",1],["BasicLogger","","BasicLogger.html","","This is a minimalistic interface that any logging class",1],["BasicValidator","","BasicValidator.html","","Basic Validator interface.",1],["Behavior","","Behavior.html"," < XMLElement","Information about behaviors of a table.",1],["BuildPropelGenPEARPackageTask","","BuildPropelGenPEARPackageTask.html"," < MatchingTask","",1],["BuildPropelPEARPackageTask","","BuildPropelPEARPackageTask.html"," < MatchingTask","",1],["ClassTools","","ClassTools.html","","Tools to support class & package inclusion and referencing.",1],["Column","","Column.html"," < XMLElement","A Class for holding data about a column used in an",1],["ColumnDefaultValue","","ColumnDefaultValue.html","","A class for holding a column default value.",1],["ColumnMap","","ColumnMap.html","","ColumnMap is used to model a column of a table in a",1],["ColumnValue","","ColumnValue.html","","\"inner\" class",1],["ConcreteInheritanceBehavior","","ConcreteInheritanceBehavior.html"," < Behavior","Makes a model inherit another one.",1],["ConcreteInheritanceParentBehavior","","ConcreteInheritanceParentBehavior.html"," < Behavior","Symmetrical behavior of the concrete_inheritance.",1],["ConstraintNameGenerator","","ConstraintNameGenerator.html","","A NameGenerator implementation for table-specific",1],["Criteria","","Criteria.html","","This is a utility class for holding criteria information",1],["Criterion","","Criterion.html","","This is an \"inner\" class that describes an object in",1],["CriterionIterator","","CriterionIterator.html","","Class that implements SPL Iterator interface.",1],["DBAdapter","","DBAdapter.html","","DBAdapter defines the interface for a Propel",1],["DBMSSQL","","DBMSSQL.html"," < DBAdapter","This is used to connect to a MSSQL database.",1],["DBMySQL","","DBMySQL.html"," < DBAdapter","This is used in order to connect to a MySQL database.",1],["DBNone","","DBNone.html"," < DBAdapter","This adapter  is used when you do not have a database",1],["DBOracle","","DBOracle.html"," < DBAdapter","Oracle adapter.",1],["DBPostgres","","DBPostgres.html"," < DBAdapter","This is used to connect to PostgresQL databases.",1],["DBSQLSRV","","DBSQLSRV.html"," < DBMSSQL","This is used to connect to a MSSQL database using pdo_sqlsrv",1],["DBSQLite","","DBSQLite.html"," < DBAdapter","This is used in order to connect to a SQLite database.",1],["DataModelBuilder","","DataModelBuilder.html","","This is the base class for any builder class that is",1],["DataRow","","DataRow.html","","\"inner class\"",1],["DataSQLBuilder","","DataSQLBuilder.html"," < DataModelBuilder","Baseclass for SQL data dump SQL building classes.",1],["Database","","Database.html"," < ScopedElement","A class for holding application data structures.",1],["DatabaseMap","","DatabaseMap.html","","DatabaseMap is used to model a database.",1],["DebugPDO","","DebugPDO.html"," < PropelPDO","PDO connection subclass that provides some basic support",1],["DebugPDOStatement","","DebugPDOStatement.html"," < PDOStatement","PDOStatement that provides some enhanced functionality",1],["DefaultEnglishPluralizer","","DefaultEnglishPluralizer.html","","The default English pluralizer class.",1],["DefaultPlatform","","DefaultPlatform.html","","Default implementation for the Platform interface.",1],["DelegateBehavior","","DelegateBehavior.html"," < Behavior","Gives a model class the ability to delegate methods",1],["Domain","","Domain.html"," < XMLElement","A class for holding data about a domain used in the",1],["EngineException","","EngineException.html"," < BuildException","The base class of all exceptions thrown by the engine.",1],["ExtensionQueryBuilder","","ExtensionQueryBuilder.html"," < OMBuilder","Generates the empty PHP5 stub class for object query",1],["ExtensionQueryInheritanceBuilder","","ExtensionQueryInheritanceBuilder.html"," < OMBuilder","Generates the empty PHP5 stub query class for use with",1],["ForeignKey","","ForeignKey.html"," < XMLElement","A Class for information about foreign keys of a table.",1],["GeneratorConfig","","GeneratorConfig.html","","A class that holds build properties and provide a class",1],["GeneratorConfigInterface","","GeneratorConfigInterface.html","","",1],["I18nBehavior","","I18nBehavior.html"," < Behavior","Allows translation of text columns through transparent",1],["I18nBehaviorObjectBuilderModifier","","I18nBehaviorObjectBuilderModifier.html","","Allows translation of text columns through transparent",1],["I18nBehaviorPeerBuilderModifier","","I18nBehaviorPeerBuilderModifier.html","","Allows translation of text columns through transparent",1],["I18nBehaviorQueryBuilderModifier","","I18nBehaviorQueryBuilderModifier.html","","Allows translation of text columns through transparent",1],["IDMethod","","IDMethod.html","","Interface for various ID retrieval method types (i.e.",1],["IdMethodParameter","","IdMethodParameter.html"," < XMLElement","Information related to an ID method.",1],["Index","","Index.html"," < XMLElement","Information about indices of a table.",1],["Inheritance","","Inheritance.html"," < XMLElement","A Class for information regarding possible objects",1],["Join","","Join.html","","Data object to describe a join between two tables,",1],["MatchValidator","","MatchValidator.html","","A validator for regular expressions.",1],["MaxLengthValidator","","MaxLengthValidator.html","","A validator for maximum string length.",1],["MaxValueValidator","","MaxValueValidator.html","","A validator for maximum values.",1],["MinLengthValidator","","MinLengthValidator.html","","A validator for minimum string length.",1],["MinValueValidator","","MinValueValidator.html","","A validator for minimum values.",1],["ModelCriteria","","ModelCriteria.html"," < Criteria","This class extends the Criteria by adding runtime introspection",1],["ModelCriterion","","ModelCriterion.html"," < Criterion","This is an \"inner\" class that describes an object in",1],["ModelJoin","","ModelJoin.html"," < Join","A ModelJoin is a Join object tied to a RelationMap",1],["ModelWith","","ModelWith.html","","Data object to describe a joined hydration in a Model",1],["MojaviLogAdapter","","MojaviLogAdapter.html","","Mojavi logging adapter for propel",1],["MssqlDataSQLBuilder","","MssqlDataSQLBuilder.html"," < DataSQLBuilder","MS SQL Server class for building data dump SQL.",1],["MssqlDebugPDO","","MssqlDebugPDO.html"," < MssqlPropelPDO","dblib doesn't support transactions so we need to add",1],["MssqlPlatform","","MssqlPlatform.html"," < DefaultPlatform","MS SQL PropelPlatformInterface implementation.",1],["MssqlPropelPDO","","MssqlPropelPDO.html"," < PropelPDO","dblib doesn't support transactions so we need to add",1],["MssqlSchemaParser","","MssqlSchemaParser.html"," < BaseSchemaParser","Microsoft SQL Server database schema parser.",1],["MysqlDataSQLBuilder","","MysqlDataSQLBuilder.html"," < DataSQLBuilder","MySQL class for building data dump SQL.",1],["MysqlPlatform","","MysqlPlatform.html"," < DefaultPlatform","MySql PropelPlatformInterface implementation.",1],["MysqlSchemaParser","","MysqlSchemaParser.html"," < BaseSchemaParser","Mysql database schema parser.",1],["NameFactory","","NameFactory.html","","A name generation factory.",1],["NameGenerator","","NameGenerator.html","","The generic interface to a name generation algorithm.",1],["NestedSetBehavior","","NestedSetBehavior.html"," < Behavior","Behavior to adds nested set tree structure columns",1],["NestedSetBehaviorObjectBuilderModifier","","NestedSetBehaviorObjectBuilderModifier.html","","Behavior to adds nested set tree structure columns",1],["NestedSetBehaviorPeerBuilderModifier","","NestedSetBehaviorPeerBuilderModifier.html","","Behavior to adds nested set tree structure columns",1],["NestedSetBehaviorQueryBuilderModifier","","NestedSetBehaviorQueryBuilderModifier.html","","Behavior to adds nested set tree structure columns",1],["NestedSetRecursiveIterator","","NestedSetRecursiveIterator.html","","Pre-order node iterator for Node objects.",1],["NodeObject","","NodeObject.html","","This interface defines methods that must be implemented",1],["NodePeer","","NodePeer.html","","This is a utility interface for all generated NodePeer",1],["NotMatchValidator","","NotMatchValidator.html","","A validator for regular expressions.",1],["OMBuilder","","OMBuilder.html"," < DataModelBuilder","Baseclass for OM-building classes.",1],["ObjectBuilder","","ObjectBuilder.html"," < OMBuilder","Base class for Peer-building classes.",1],["OracleDataSQLBuilder","","OracleDataSQLBuilder.html"," < DataSQLBuilder","Oracle class for building data dump SQL.",1],["OraclePlatform","","OraclePlatform.html"," < DefaultPlatform","Oracle PropelPlatformInterface implementation.",1],["OracleSchemaParser","","OracleSchemaParser.html"," < BaseSchemaParser","Oracle database schema parser.",1],["PHP5ExtensionNodeBuilder","","PHP5ExtensionNodeBuilder.html"," < ObjectBuilder","Generates the empty PHP5 stub node object class for",1],["PHP5ExtensionNodePeerBuilder","","PHP5ExtensionNodePeerBuilder.html"," < PeerBuilder","Generates the empty PHP5 stub node peer class for user",1],["PHP5ExtensionObjectBuilder","","PHP5ExtensionObjectBuilder.html"," < ObjectBuilder","Generates the empty PHP5 stub object class for user",1],["PHP5ExtensionPeerBuilder","","PHP5ExtensionPeerBuilder.html"," < PeerBuilder","Generates the empty PHP5 stub peer class for user object",1],["PHP5InterfaceBuilder","","PHP5InterfaceBuilder.html"," < ObjectBuilder","Generates the empty PHP5 stub interface for user object",1],["PHP5MultiExtendObjectBuilder","","PHP5MultiExtendObjectBuilder.html"," < ObjectBuilder","Generates the empty PHP5 stub object class for use",1],["PHP5NestedSetBuilder","","PHP5NestedSetBuilder.html"," < ObjectBuilder","Generates a PHP5 tree node Object class for user object",1],["PHP5NestedSetPeerBuilder","","PHP5NestedSetPeerBuilder.html"," < PeerBuilder","Generates a PHP5 tree nested set Peer class for user",1],["PHP5NodeBuilder","","PHP5NodeBuilder.html"," < ObjectBuilder","Generates a PHP5 tree node Object class for user object",1],["PHP5NodePeerBuilder","","PHP5NodePeerBuilder.html"," < PeerBuilder","Generates a PHP5 tree node Peer class for user object",1],["PHP5ObjectBuilder","","PHP5ObjectBuilder.html"," < ObjectBuilder","Generates a PHP5 base Object class for user object",1],["PHP5ObjectNoCollectionBuilder","","PHP5ObjectNoCollectionBuilder.html"," < PHP5ObjectBuilder","Generates a PHP5 base Object class for user object",1],["PHP5PeerBuilder","","PHP5PeerBuilder.html"," < PeerBuilder","Generates a PHP5 base Peer class for user object model",1],["PHP5TableMapBuilder","","PHP5TableMapBuilder.html"," < OMBuilder","Generates the PHP5 table map class for user object",1],["PeerBuilder","","PeerBuilder.html"," < OMBuilder","Base class for Peer-building classes.",1],["Persistent","","Persistent.html","","This interface defines methods related to saving an",1],["PgsqlDataSQLBuilder","","PgsqlDataSQLBuilder.html"," < DataSQLBuilder","PostgreSQL class for building data dump SQL.",1],["PgsqlPlatform","","PgsqlPlatform.html"," < DefaultPlatform","Postgresql PropelPlatformInterface implementation.",1],["PgsqlSchemaParser","","PgsqlSchemaParser.html"," < BaseSchemaParser","Postgresql database schema parser.",1],["PhpNameGenerator","","PhpNameGenerator.html","","A NameGenerator implementation for PHP-esque",1],["Pluralizer","","Pluralizer.html","","The generic interface to create a plural form of a",1],["PreOrderNodeIterator","","PreOrderNodeIterator.html","","Pre-order node iterator for Node objects.",1],["Propel","","Propel.html","","Propel's main resource pool and initialization & configuration",1],["PropelArrayCollection","","PropelArrayCollection.html"," < PropelCollection","Class for iterating over a list of Propel objects stored",1],["PropelArrayFormatter","","PropelArrayFormatter.html"," < PropelFormatter","Array formatter for Propel query format() returns a",1],["PropelAutoloader","","PropelAutoloader.html","","Simple autoloader for Propel generated model classes.",1],["PropelCSVParser","","PropelCSVParser.html"," < PropelParser","CSV parser.",1],["PropelCollection","","PropelCollection.html"," < ArrayObject","Class for iterating over a list of Propel elements",1],["PropelColumnComparator","","PropelColumnComparator.html","","Service class for comparing Column objects.",1],["PropelColumnDiff","","PropelColumnDiff.html","","Value object for storing Column object diffs.",1],["PropelColumnTypes","","PropelColumnTypes.html","","Enumeration of Propel types.",1],["PropelConditionalProxy","","PropelConditionalProxy.html","","Proxy for conditional statements in a fluid interface.",1],["PropelConfiguration","","PropelConfiguration.html","","PropelConfiguration is a container for all Propel's",1],["PropelConfigurationIterator","","PropelConfigurationIterator.html"," < RecursiveIteratorIterator","PropelConfigurationIterator is used internally by PropelConfiguration",1],["PropelConvertConfTask","","PropelConvertConfTask.html"," < AbstractPropelDataModelTask","This Task converts the XML runtime configuration file",1],["PropelDataDumpTask","","PropelDataDumpTask.html"," < AbstractPropelDataModelTask","Dumps the content of selected databases to XML data",1],["PropelDataSQLTask","","PropelDataSQLTask.html"," < AbstractPropelDataModelTask","Task that transforms XML datadump files into files",1],["PropelDatabaseComparator","","PropelDatabaseComparator.html","","Service class for comparing Database objects Heavily",1],["PropelDatabaseDiff","","PropelDatabaseDiff.html","","Value object for storing Database object diffs Heavily",1],["PropelDateTime","","PropelDateTime.html"," < DateTime","DateTime subclass which supports serialization.",1],["PropelDotGenerator","","PropelDotGenerator.html","","A generator for DOT graph information.",1],["PropelException","","PropelException.html"," < Exception","The base class of all exceptions thrown by Propel.",1],["PropelForeignKeyComparator","","PropelForeignKeyComparator.html","","Service class for comparing ForeignKey objects Heavily",1],["PropelFormatter","","PropelFormatter.html","","Abstract class for query formatter",1],["PropelGraphvizTask","","PropelGraphvizTask.html"," < AbstractPropelDataModelTask","A task to generate Graphviz dot files from Propel datamodel.",1],["PropelIndexComparator","","PropelIndexComparator.html","","Service class for comparing Index objects Heavily inspired",1],["PropelJSONParser","","PropelJSONParser.html"," < PropelParser","JSON parser.",1],["PropelMigrationDownTask","","PropelMigrationDownTask.html"," < BasePropelMigrationTask","This Task executes the next migration down",1],["PropelMigrationManager","","PropelMigrationManager.html","","Service class for preparing and executing migrations",1],["PropelMigrationStatusTask","","PropelMigrationStatusTask.html"," < BasePropelMigrationTask","This Task lists the migrations yet to be executed",1],["PropelMigrationTask","","PropelMigrationTask.html"," < BasePropelMigrationTask","This Task executes the next migrations up",1],["PropelMigrationUpTask","","PropelMigrationUpTask.html"," < BasePropelMigrationTask","This Task executes the next migration up",1],["PropelModelPager","","PropelModelPager.html","","Implements a pager based on a ModelCriteria The code",1],["PropelOMTask","","PropelOMTask.html"," < AbstractPropelDataModelTask","This Task creates the OM classes based on the XML schema",1],["PropelObjectCollection","","PropelObjectCollection.html"," < PropelCollection","Class for iterating over a list of Propel objects",1],["PropelObjectFormatter","","PropelObjectFormatter.html"," < PropelFormatter","Object formatter for Propel query format() returns",1],["PropelOnDemandCollection","","PropelOnDemandCollection.html"," < PropelCollection","Class for iterating over a statement and returning",1],["PropelOnDemandFormatter","","PropelOnDemandFormatter.html"," < PropelObjectFormatter","Object formatter for Propel query format() returns",1],["PropelOnDemandIterator","","PropelOnDemandIterator.html","","Class for iterating over a statement and returning",1],["PropelPDO","","PropelPDO.html"," < PDO","PDO connection subclass that provides the basic fixes",1],["PropelPHPParser","","PropelPHPParser.html","","Service class for parsing PHP code strings and editing",1],["PropelPager","","PropelPager.html","","PropelPager",1],["PropelParser","","PropelParser.html","","Base class for all parsers.",1],["PropelPlatformInterface","","PropelPlatformInterface.html","","Interface for RDBMS platform specific behaviour.",1],["PropelQuery","","PropelQuery.html","","Factory for model queries",1],["PropelQuickBuilder","","PropelQuickBuilder.html","","",1],["PropelSQLDiffTask","","PropelSQLDiffTask.html"," < AbstractPropelDataModelTask","This Task creates the OM classes based on the XML schema",1],["PropelSQLExec","","PropelSQLExec.html"," < AbstractPropelTask","Executes all SQL files referenced in the sqldbmap file",1],["PropelSQLParser","","PropelSQLParser.html","","Service class for parsing a large SQL string into an",1],["PropelSQLTask","","PropelSQLTask.html"," < AbstractPropelDataModelTask","The task for building SQL DDL based on the XML datamodel.",1],["PropelSchemaReverseTask","","PropelSchemaReverseTask.html"," < PDOTask","This class generates an XML schema of an existing database",1],["PropelSchemaReverse_ValidatorSet","","PropelSchemaReverse_ValidatorSet.html","","A helper class to store validator sets indexed by column.",1],["PropelSchemaValidator","","PropelSchemaValidator.html","","Service class for validating XML schemas.",1],["PropelSimpleArrayFormatter","","PropelSimpleArrayFormatter.html"," < PropelFormatter","Array formatter for Propel select query format() returns",1],["PropelSqlBuildTask","","PropelSqlBuildTask.html"," < AbstractPropelDataModelTask","The new task for building SQL DDL based on the XML",1],["PropelSqlManager","","PropelSqlManager.html","","Service class for managing SQL.",1],["PropelStatementFormatter","","PropelStatementFormatter.html"," < PropelFormatter","statement formatter for Propel query format() returns",1],["PropelStringReader","","PropelStringReader.html"," < Reader","Overrides Phing's StringReader to allow inclusion inside",1],["PropelTableComparator","","PropelTableComparator.html","","Service class for comparing Table objects Heavily inspired",1],["PropelTableDiff","","PropelTableDiff.html","","Value object for storing Table object diffs Heavily",1],["PropelTemplate","","PropelTemplate.html","","Simple templating system to ease behavior writing",1],["PropelTypes","","PropelTypes.html","","A class that maps PropelTypes to PHP native types,",1],["PropelXMLParser","","PropelXMLParser.html"," < PropelParser","XML parser.",1],["PropelYAMLParser","","PropelYAMLParser.html"," < PropelParser","YAML parser.",1],["QueryBuilder","","QueryBuilder.html"," < OMBuilder","Generates a PHP5 base Query class for user object model",1],["QueryCacheBehavior","","QueryCacheBehavior.html"," < Behavior","Speeds up queries on a model by caching the query",1],["QueryInheritanceBuilder","","QueryInheritanceBuilder.html"," < OMBuilder","Generates the empty PHP5 stub query class for use with",1],["QuickGeneratorConfig","","QuickGeneratorConfig.html","","",1],["RelationMap","","RelationMap.html","","RelationMap is used to model a database relationship.",1],["RequiredValidator","","RequiredValidator.html","","A validator for required fields.",1],["Rule","","Rule.html"," < XMLElement","Data about a validation rule used in an application.",1],["SchemaException","","SchemaException.html"," < Exception","Class for exceptions thrown during schema parsing",1],["SchemaParser","","SchemaParser.html","","Interface for reverse engineering schema parsers.",1],["ScopedElement","","ScopedElement.html"," < XMLElement","Data about an element with a name and optional namespace\/schema\/package",1],["SluggableBehavior","","SluggableBehavior.html"," < Behavior","Adds a slug column",1],["SoftDeleteBehavior","","SoftDeleteBehavior.html"," < Behavior","Gives a model class the ability to remain in database",1],["SortableBehavior","","SortableBehavior.html"," < Behavior","Gives a model class the ability to be ordered Uses",1],["SortableBehaviorObjectBuilderModifier","","SortableBehaviorObjectBuilderModifier.html","","Behavior to add sortable columns and abilities",1],["SortableBehaviorPeerBuilderModifier","","SortableBehaviorPeerBuilderModifier.html","","Behavior to add sortable peer methods",1],["SortableBehaviorQueryBuilderModifier","","SortableBehaviorQueryBuilderModifier.html","","Behavior to add sortable query methods",1],["SortableRelationBehavior","","SortableRelationBehavior.html"," < Behavior","Moves objects to the end of null scope of related table",1],["SqliteDataSQLBuilder","","SqliteDataSQLBuilder.html"," < DataSQLBuilder","SQLite class for building data dump SQL.",1],["SqlitePlatform","","SqlitePlatform.html"," < DefaultPlatform","SQLite PropelPlatformInterface implementation.",1],["SqliteSchemaParser","","SqliteSchemaParser.html"," < BaseSchemaParser","SQLite database schema parser.",1],["SqlsrvDataSQLBuilder","","SqlsrvDataSQLBuilder.html"," < DataSQLBuilder","MS SQL Server using pdo_sqlsrv driver class for building",1],["SqlsrvPlatform","","SqlsrvPlatform.html"," < MssqlPlatform","MS SQL Server using pdo_sqlsrv implementation.",1],["SqlsrvSchemaParser","","SqlsrvSchemaParser.html"," < MssqlSchemaParser","Microsoft SQL Server database schema parser.",1],["StandardEnglishPluralizer","","StandardEnglishPluralizer.html","","Standard replacement English pluralizer class.",1],["Table","","Table.html"," < ScopedElement","Data about a table used in an application.",1],["TableMap","","TableMap.html","","TableMap is used to model a table in a database.",1],["TimestampableBehavior","","TimestampableBehavior.html"," < Behavior","Gives a model class the ability to track creation and",1],["TypeValidator","","TypeValidator.html","","A validator for validating the (PHP) type of the value",1],["Unique","","Unique.html"," < Index","Information about unique columns of a table.",1],["UniqueValidator","","UniqueValidator.html","","A validator for unique column names.",1],["ValidValuesValidator","","ValidValuesValidator.html","","A validator for valid values (e.g.",1],["ValidationFailed","","ValidationFailed.html","","Simple class that serves as a container for any information",1],["Validator","","Validator.html"," < XMLElement","Validator.",1],["ValidatorMap","","ValidatorMap.html","","ValidatorMap is used to model a column validator.",1],["VendorInfo","","VendorInfo.html"," < XMLElement","Object to hold vendor-specific info.",1],["VersionableBehavior","","VersionableBehavior.html"," < Behavior","Keeps tracks of all the modifications in an ActiveRecord",1],["VersionableBehaviorObjectBuilderModifier","","VersionableBehaviorObjectBuilderModifier.html","","Behavior to add versionable columns and abilities",1],["VersionableBehaviorPeerBuilderModifier","","VersionableBehaviorPeerBuilderModifier.html","","Behavior to add versionable columns and abilities",1],["VersionableBehaviorQueryBuilderModifier","","VersionableBehaviorQueryBuilderModifier.html","","Behavior to add versionable columns and abilities",1],["XMLElement","","XMLElement.html","","An abstract class for elements represented by XML tags",1],["XmlToAppData","","XmlToAppData.html","","A class that is used to parse an input xml schema file",1],["XmlToDataSQL","","XmlToDataSQL.html"," < AbstractHandler","A Class that is used to parse an data dump XML file",1],["sfYaml","","sfYaml.html","","sfYaml offers convenience methods to load and dump",1],["sfYamlDumper","","sfYamlDumper.html","","sfYamlDumper dumps PHP variables to YAML strings.",1],["sfYamlInline","","sfYamlInline.html","","sfYamlInline implements a YAML parser\/dumper for the",1],["sfYamlParser","","sfYamlParser.html","","sfYamlParser parses YAML strings to convert them to",1],["AbstractPropelDataModelTask::getDataModels","AbstractPropelDataModelTask","AbstractPropelDataModelTask.html#method_getDataModels","()","Return the data models that have been processed.",2],["AbstractPropelDataModelTask::getDataModelDbMap","AbstractPropelDataModelTask","AbstractPropelDataModelTask.html#method_getDataModelDbMap","()","Return the data model to database name map.",2],["AbstractPropelDataModelTask::addSchemaFileset","AbstractPropelDataModelTask","AbstractPropelDataModelTask.html#method_addSchemaFileset","(<abbr title=\"Fileset\">Fileset<\/abbr> $set)","Adds a set of xml schema files (nested fileset attribute).",2],["AbstractPropelDataModelTask::getTargetDatabase","AbstractPropelDataModelTask","AbstractPropelDataModelTask.html#method_getTargetDatabase","()","Get the current target database.",2],["AbstractPropelDataModelTask::setTargetDatabase","AbstractPropelDataModelTask","AbstractPropelDataModelTask.html#method_setTargetDatabase","(<abbr title=\"$v\">$v<\/abbr> $v)","Set the current target database.",2],["AbstractPropelDataModelTask::getTargetPackage","AbstractPropelDataModelTask","AbstractPropelDataModelTask.html#method_getTargetPackage","()","Get the current target package.",2],["AbstractPropelDataModelTask::setTargetPackage","AbstractPropelDataModelTask","AbstractPropelDataModelTask.html#method_setTargetPackage","(string $v)","Set the current target package.",2],["AbstractPropelDataModelTask::setPackageObjectModel","AbstractPropelDataModelTask","AbstractPropelDataModelTask.html#method_setPackageObjectModel","(boolean $v)","Set the packageObjectModel switch on\/off",2],["AbstractPropelDataModelTask::setValidate","AbstractPropelDataModelTask","AbstractPropelDataModelTask.html#method_setValidate","(boolean $v)","Set whether to perform validation on the datamodel",2],["AbstractPropelDataModelTask::setXsd","AbstractPropelDataModelTask","AbstractPropelDataModelTask.html#method_setXsd","(<abbr title=\"PhingFile\">PhingFile<\/abbr> $v)","Set the XSD schema to use for validation of any datamodel",2],["AbstractPropelDataModelTask::setXsl","AbstractPropelDataModelTask","AbstractPropelDataModelTask.html#method_setXsl","(<abbr title=\"PhingFile\">PhingFile<\/abbr> $v)","Set the normalization XSLT to use to transform datamodel",2],["AbstractPropelDataModelTask::setOutputDirectory","AbstractPropelDataModelTask","AbstractPropelDataModelTask.html#method_setOutputDirectory","(<abbr title=\"PhingFile\">PhingFile<\/abbr> $outputDirectory)","[REQUIRED] Set the output directory.",2],["AbstractPropelDataModelTask::setDbEncoding","AbstractPropelDataModelTask","AbstractPropelDataModelTask.html#method_setDbEncoding","(<abbr title=\"$v\">$v<\/abbr> $v)","Set the current target database encoding.",2],["AbstractPropelDataModelTask::setUrl","AbstractPropelDataModelTask","AbstractPropelDataModelTask.html#method_setUrl","(string $url)","Set the DB connection url.",2],["AbstractPropelDataModelTask::setUserid","AbstractPropelDataModelTask","AbstractPropelDataModelTask.html#method_setUserid","(string $userId)","Set the user name for the DB connection.",2],["AbstractPropelDataModelTask::setPassword","AbstractPropelDataModelTask","AbstractPropelDataModelTask.html#method_setPassword","(string $password)","Set the password for the DB connection.",2],["AbstractPropelDataModelTask::getOutputDirectory","AbstractPropelDataModelTask","AbstractPropelDataModelTask.html#method_getOutputDirectory","()","Get the output directory.",2],["AbstractPropelDataModelTask::createMapper","AbstractPropelDataModelTask","AbstractPropelDataModelTask.html#method_createMapper","()","Nested creator, creates one Mapper for this task.",2],["AbstractPropelDataModelTask::getConnection","AbstractPropelDataModelTask","AbstractPropelDataModelTask.html#method_getConnection","()","Gets the PDO connection, if URL specified.",2],["AggregateColumnBehavior::modifyTable","AggregateColumnBehavior","AggregateColumnBehavior.html#method_modifyTable","()","Add the aggregate key to the current table",2],["AggregateColumnBehavior::objectMethods","AggregateColumnBehavior","AggregateColumnBehavior.html#method_objectMethods","($builder)","",2],["AggregateColumnBehavior::postSave","AggregateColumnBehavior","AggregateColumnBehavior.html#method_postSave","($builder)","",2],["AggregateColumnRelationBehavior::postSave","AggregateColumnRelationBehavior","AggregateColumnRelationBehavior.html#method_postSave","($builder)","",2],["AggregateColumnRelationBehavior::objectAttributes","AggregateColumnRelationBehavior","AggregateColumnRelationBehavior.html#method_objectAttributes","($builder)","",2],["AggregateColumnRelationBehavior::objectMethods","AggregateColumnRelationBehavior","AggregateColumnRelationBehavior.html#method_objectMethods","($builder)","",2],["AggregateColumnRelationBehavior::objectFilter","AggregateColumnRelationBehavior","AggregateColumnRelationBehavior.html#method_objectFilter","($script, $builder)","",2],["AggregateColumnRelationBehavior::preUpdateQuery","AggregateColumnRelationBehavior","AggregateColumnRelationBehavior.html#method_preUpdateQuery","($builder)","",2],["AggregateColumnRelationBehavior::preDeleteQuery","AggregateColumnRelationBehavior","AggregateColumnRelationBehavior.html#method_preDeleteQuery","($builder)","",2],["AggregateColumnRelationBehavior::postUpdateQuery","AggregateColumnRelationBehavior","AggregateColumnRelationBehavior.html#method_postUpdateQuery","($builder)","",2],["AggregateColumnRelationBehavior::postDeleteQuery","AggregateColumnRelationBehavior","AggregateColumnRelationBehavior.html#method_postDeleteQuery","($builder)","",2],["AggregateColumnRelationBehavior::queryMethods","AggregateColumnRelationBehavior","AggregateColumnRelationBehavior.html#method_queryMethods","($builder)","",2],["AlternativeCodingStandardsBehavior::objectFilter","AlternativeCodingStandardsBehavior","AlternativeCodingStandardsBehavior.html#method_objectFilter","($script)","",2],["AlternativeCodingStandardsBehavior::extensionObjectFilter","AlternativeCodingStandardsBehavior","AlternativeCodingStandardsBehavior.html#method_extensionObjectFilter","($script)","",2],["AlternativeCodingStandardsBehavior::queryFilter","AlternativeCodingStandardsBehavior","AlternativeCodingStandardsBehavior.html#method_queryFilter","($script)","",2],["AlternativeCodingStandardsBehavior::extensionQueryFilter","AlternativeCodingStandardsBehavior","AlternativeCodingStandardsBehavior.html#method_extensionQueryFilter","($script)","",2],["AlternativeCodingStandardsBehavior::peerFilter","AlternativeCodingStandardsBehavior","AlternativeCodingStandardsBehavior.html#method_peerFilter","($script)","",2],["AlternativeCodingStandardsBehavior::extensionPeerFilter","AlternativeCodingStandardsBehavior","AlternativeCodingStandardsBehavior.html#method_extensionPeerFilter","($script)","",2],["AlternativeCodingStandardsBehavior::tableMapFilter","AlternativeCodingStandardsBehavior","AlternativeCodingStandardsBehavior.html#method_tableMapFilter","($script)","",2],["AlternativeCodingStandardsBehavior::stripComments","AlternativeCodingStandardsBehavior","AlternativeCodingStandardsBehavior.html#method_stripComments","(string $code)","Remove inline and codeblock comments from a PHP code",2],["AppData::__construct","AppData","AppData.html#method___construct","(<a href=\"PropelPlatformInterface.html\"><abbr title=\"PropelPlatformInterface\">PropelPlatformInterface<\/abbr><\/a> $defaultPlatform = null)","Creates a new instance for the specified database type.",2],["AppData::setPlatform","AppData","AppData.html#method_setPlatform","(<a href=\"PropelPlatformInterface.html\"><abbr title=\"PropelPlatformInterface\">PropelPlatformInterface<\/abbr><\/a> $defaultPlatform)","Sets the platform object to use for any databases added",2],["AppData::getPlatform","AppData","AppData.html#method_getPlatform","()","Gets the platform object to use for any databases added",2],["AppData::setGeneratorConfig","AppData","AppData.html#method_setGeneratorConfig","(<a href=\"GeneratorConfigInterface.html\"><abbr title=\"GeneratorConfigInterface\">GeneratorConfigInterface<\/abbr><\/a> $generatorConfig)","Set the generator configuration",2],["AppData::getGeneratorConfig","AppData","AppData.html#method_getGeneratorConfig","()","Get the generator configuration",2],["AppData::setName","AppData","AppData.html#method_setName","(string $name)","Set the name of the database.",2],["AppData::getName","AppData","AppData.html#method_getName","()","Get the name of the database.",2],["AppData::getShortName","AppData","AppData.html#method_getShortName","()","Get the short name of the database (without the '-schema'",2],["AppData::getDatabases","AppData","AppData.html#method_getDatabases","($doFinalInit = true)","Return an array of all databases",2],["AppData::hasMultipleDatabases","AppData","AppData.html#method_hasMultipleDatabases","()","Returns whether this application has multiple databases.",2],["AppData::getDatabase","AppData","AppData.html#method_getDatabase","(string $name = null, bool $doFinalInit = true)","Return the database with the specified name.",2],["AppData::hasDatabase","AppData","AppData.html#method_hasDatabase","(string $name)","Checks whether a database with the specified nam exists",2],["AppData::addDatabase","AppData","AppData.html#method_addDatabase","(<a href=\"Database.html\"><abbr title=\"Database\">Database<\/abbr><\/a>|string $db)","Add a database to the list and sets the AppData property",2],["AppData::doFinalInitialization","AppData","AppData.html#method_doFinalInitialization","()","",2],["AppData::joinAppDatas","AppData","AppData.html#method_joinAppDatas","(<a href=\"AppData.html\"><abbr title=\"AppData\">AppData<\/abbr><\/a>[] $ads)","Merge other appData objects into this object",2],["AppData::countTables","AppData","AppData.html#method_countTables","()","Returns the number of tables in all the databases of",2],["AppData::toString","AppData","AppData.html#method_toString","()","Creates a string representation of this AppData.",2],["AppData::__toString","AppData","AppData.html#method___toString","()","Magic string method",2],["ArchivableBehavior::modifyDatabase","ArchivableBehavior","ArchivableBehavior.html#method_modifyDatabase","()","This method is automatically called on database behaviors",2],["ArchivableBehavior::modifyTable","ArchivableBehavior","ArchivableBehavior.html#method_modifyTable","()","This method is automatically called on table behaviors",2],["ArchivableBehavior::getArchiveTable","ArchivableBehavior","ArchivableBehavior.html#method_getArchiveTable","()","",2],["ArchivableBehavior::getArchiveTablePhpName","ArchivableBehavior","ArchivableBehavior.html#method_getArchiveTablePhpName","($builder)","",2],["ArchivableBehavior::getArchiveTableQueryName","ArchivableBehavior","ArchivableBehavior.html#method_getArchiveTableQueryName","($builder)","",2],["ArchivableBehavior::hasArchiveClass","ArchivableBehavior","ArchivableBehavior.html#method_hasArchiveClass","()","",2],["ArchivableBehavior::getArchivedAtColumn","ArchivableBehavior","ArchivableBehavior.html#method_getArchivedAtColumn","()","",2],["ArchivableBehavior::isArchiveOnInsert","ArchivableBehavior","ArchivableBehavior.html#method_isArchiveOnInsert","()","",2],["ArchivableBehavior::isArchiveOnUpdate","ArchivableBehavior","ArchivableBehavior.html#method_isArchiveOnUpdate","()","",2],["ArchivableBehavior::isArchiveOnDelete","ArchivableBehavior","ArchivableBehavior.html#method_isArchiveOnDelete","()","",2],["ArchivableBehavior::getObjectBuilderModifier","ArchivableBehavior","ArchivableBehavior.html#method_getObjectBuilderModifier","()","",2],["ArchivableBehavior::getQueryBuilderModifier","ArchivableBehavior","ArchivableBehavior.html#method_getQueryBuilderModifier","()","",2],["ArchivableBehaviorObjectBuilderModifier::__construct","ArchivableBehaviorObjectBuilderModifier","ArchivableBehaviorObjectBuilderModifier.html#method___construct","(<a href=\"ArchivableBehavior.html\"><abbr title=\"ArchivableBehavior\">ArchivableBehavior<\/abbr><\/a> $behavior)","",2],["ArchivableBehaviorObjectBuilderModifier::objectAttributes","ArchivableBehaviorObjectBuilderModifier","ArchivableBehaviorObjectBuilderModifier.html#method_objectAttributes","(<a href=\"PHP5ObjectBuilder.html\"><abbr title=\"PHP5ObjectBuilder\">PHP5ObjectBuilder<\/abbr><\/a> $builder)","Add object attributes to the built class.",2],["ArchivableBehaviorObjectBuilderModifier::postInsert","ArchivableBehaviorObjectBuilderModifier","ArchivableBehaviorObjectBuilderModifier.html#method_postInsert","(<a href=\"PHP5ObjectBuilder.html\"><abbr title=\"PHP5ObjectBuilder\">PHP5ObjectBuilder<\/abbr><\/a> $builder)","Add code to the postInsert hook.",2],["ArchivableBehaviorObjectBuilderModifier::postUpdate","ArchivableBehaviorObjectBuilderModifier","ArchivableBehaviorObjectBuilderModifier.html#method_postUpdate","(<a href=\"PHP5ObjectBuilder.html\"><abbr title=\"PHP5ObjectBuilder\">PHP5ObjectBuilder<\/abbr><\/a> $builder)","Add code to the postUpdate hoook.",2],["ArchivableBehaviorObjectBuilderModifier::preDelete","ArchivableBehaviorObjectBuilderModifier","ArchivableBehaviorObjectBuilderModifier.html#method_preDelete","($builder)","Using preDelete rather than postDelete to allow user",2],["ArchivableBehaviorObjectBuilderModifier::objectMethods","ArchivableBehaviorObjectBuilderModifier","ArchivableBehaviorObjectBuilderModifier.html#method_objectMethods","($builder)","",2],["ArchivableBehaviorObjectBuilderModifier::addGetArchive","ArchivableBehaviorObjectBuilderModifier","ArchivableBehaviorObjectBuilderModifier.html#method_addGetArchive","($builder)","",2],["ArchivableBehaviorObjectBuilderModifier::addArchive","ArchivableBehaviorObjectBuilderModifier","ArchivableBehaviorObjectBuilderModifier.html#method_addArchive","($builder)","",2],["ArchivableBehaviorObjectBuilderModifier::addRestoreFromArchive","ArchivableBehaviorObjectBuilderModifier","ArchivableBehaviorObjectBuilderModifier.html#method_addRestoreFromArchive","($builder)","",2],["ArchivableBehaviorObjectBuilderModifier::addPopulateFromArchive","ArchivableBehaviorObjectBuilderModifier","ArchivableBehaviorObjectBuilderModifier.html#method_addPopulateFromArchive","($builder)","Generates a method to populate the current AR object",2],["ArchivableBehaviorObjectBuilderModifier::fakeAutoIncrementPrimaryKeyForConcreteInheritance","ArchivableBehaviorObjectBuilderModifier","ArchivableBehaviorObjectBuilderModifier.html#method_fakeAutoIncrementPrimaryKeyForConcreteInheritance","()","Checks if the current table uses concrete_inheritance,",2],["ArchivableBehaviorObjectBuilderModifier::addSaveWithoutArchive","ArchivableBehaviorObjectBuilderModifier","ArchivableBehaviorObjectBuilderModifier.html#method_addSaveWithoutArchive","($builder)","",2],["ArchivableBehaviorObjectBuilderModifier::addDeleteWithoutArchive","ArchivableBehaviorObjectBuilderModifier","ArchivableBehaviorObjectBuilderModifier.html#method_addDeleteWithoutArchive","($builder)","",2],["ArchivableBehaviorQueryBuilderModifier::__construct","ArchivableBehaviorQueryBuilderModifier","ArchivableBehaviorQueryBuilderModifier.html#method___construct","(<a href=\"ArchivableBehavior.html\"><abbr title=\"ArchivableBehavior\">ArchivableBehavior<\/abbr><\/a> $behavior)","",2],["ArchivableBehaviorQueryBuilderModifier::queryAttributes","ArchivableBehaviorQueryBuilderModifier","ArchivableBehaviorQueryBuilderModifier.html#method_queryAttributes","(<a href=\"QueryBuilder.html\"><abbr title=\"QueryBuilder\">QueryBuilder<\/abbr><\/a> $builder)","Add attributes to the",2],["ArchivableBehaviorQueryBuilderModifier::preDeleteQuery","ArchivableBehaviorQueryBuilderModifier","ArchivableBehaviorQueryBuilderModifier.html#method_preDeleteQuery","(<a href=\"QueryBuilder.html\"><abbr title=\"QueryBuilder\">QueryBuilder<\/abbr><\/a> $builder)","",2],["ArchivableBehaviorQueryBuilderModifier::postUpdateQuery","ArchivableBehaviorQueryBuilderModifier","ArchivableBehaviorQueryBuilderModifier.html#method_postUpdateQuery","(<a href=\"QueryBuilder.html\"><abbr title=\"QueryBuilder\">QueryBuilder<\/abbr><\/a> $builder)","",2],["ArchivableBehaviorQueryBuilderModifier::queryMethods","ArchivableBehaviorQueryBuilderModifier","ArchivableBehaviorQueryBuilderModifier.html#method_queryMethods","(<a href=\"QueryBuilder.html\"><abbr title=\"QueryBuilder\">QueryBuilder<\/abbr><\/a> $builder)","",2],["ArchivableBehaviorQueryBuilderModifier::addSetArchiveOnUpdate","ArchivableBehaviorQueryBuilderModifier","ArchivableBehaviorQueryBuilderModifier.html#method_addSetArchiveOnUpdate","(<a href=\"QueryBuilder.html\"><abbr title=\"QueryBuilder\">QueryBuilder<\/abbr><\/a> $builder)","",2],["ArchivableBehaviorQueryBuilderModifier::addUpdateWithoutArchive","ArchivableBehaviorQueryBuilderModifier","ArchivableBehaviorQueryBuilderModifier.html#method_addUpdateWithoutArchive","(<a href=\"QueryBuilder.html\"><abbr title=\"QueryBuilder\">QueryBuilder<\/abbr><\/a> $builder)","",2],["ArchivableBehaviorQueryBuilderModifier::addSetArchiveOnDelete","ArchivableBehaviorQueryBuilderModifier","ArchivableBehaviorQueryBuilderModifier.html#method_addSetArchiveOnDelete","(<a href=\"QueryBuilder.html\"><abbr title=\"QueryBuilder\">QueryBuilder<\/abbr><\/a> $builder)","",2],["ArchivableBehaviorQueryBuilderModifier::addDeleteWithoutArchive","ArchivableBehaviorQueryBuilderModifier","ArchivableBehaviorQueryBuilderModifier.html#method_addDeleteWithoutArchive","(<a href=\"QueryBuilder.html\"><abbr title=\"QueryBuilder\">QueryBuilder<\/abbr><\/a> $builder)","",2],["AutoAddPkBehavior::modifyDatabase","AutoAddPkBehavior","AutoAddPkBehavior.html#method_modifyDatabase","()","Copy the behavior to the database tables Only for tables",2],["AutoAddPkBehavior::modifyTable","AutoAddPkBehavior","AutoAddPkBehavior.html#method_modifyTable","()","Add the primary key to the current table",2],["BaseObject::__construct","BaseObject","BaseObject.html#method___construct","()","Empty constructor (this allows people with their own",2],["BaseObject::isModified","BaseObject","BaseObject.html#method_isModified","()","Returns whether the object has been modified.",2],["BaseObject::isColumnModified","BaseObject","BaseObject.html#method_isColumnModified","(string $col)","Has specified column been modified?",2],["BaseObject::getModifiedColumns","BaseObject","BaseObject.html#method_getModifiedColumns","()","Get the columns that have been modified in this object.",2],["BaseObject::isNew","BaseObject","BaseObject.html#method_isNew","()","Returns whether the object has ever been saved.",2],["BaseObject::setNew","BaseObject","BaseObject.html#method_setNew","(boolean $b)","Setter for the isNew attribute.",2],["BaseObject::isDeleted","BaseObject","BaseObject.html#method_isDeleted","()","Whether this object has been deleted.",2],["BaseObject::setDeleted","BaseObject","BaseObject.html#method_setDeleted","(boolean $b)","Specify whether this object has been deleted.",2],["BaseObject::preSave","BaseObject","BaseObject.html#method_preSave","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Code to be run before persisting the object",2],["BaseObject::postSave","BaseObject","BaseObject.html#method_postSave","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Code to be run after persisting the object",2],["BaseObject::preInsert","BaseObject","BaseObject.html#method_preInsert","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Code to be run before inserting to database",2],["BaseObject::postInsert","BaseObject","BaseObject.html#method_postInsert","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Code to be run after inserting to database",2],["BaseObject::preUpdate","BaseObject","BaseObject.html#method_preUpdate","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Code to be run before updating the object in database",2],["BaseObject::postUpdate","BaseObject","BaseObject.html#method_postUpdate","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Code to be run after updating the object in database",2],["BaseObject::preDelete","BaseObject","BaseObject.html#method_preDelete","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Code to be run before deleting the object in database",2],["BaseObject::postDelete","BaseObject","BaseObject.html#method_postDelete","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Code to be run after deleting the object in database",2],["BaseObject::postHydrate","BaseObject","BaseObject.html#method_postHydrate","($row, $startcol, $rehydrate = false)","Code to be run after object hydration",2],["BaseObject::resetModified","BaseObject","BaseObject.html#method_resetModified","(string $col = null)","Sets the modified state for the object to be false.",2],["BaseObject::equals","BaseObject","BaseObject.html#method_equals","(<abbr title=\"obj\">obj<\/abbr> $obj)","Compares this with another BaseObject",2],["BaseObject::hashCode","BaseObject","BaseObject.html#method_hashCode","()","If the primary key is not null, return the hashcode",2],["BaseObject::getVirtualColumns","BaseObject","BaseObject.html#method_getVirtualColumns","()","Get the associative array of the virtual columns in",2],["BaseObject::hasVirtualColumn","BaseObject","BaseObject.html#method_hasVirtualColumn","($name)","Checks the existence of a virtual column in this object",2],["BaseObject::getVirtualColumn","BaseObject","BaseObject.html#method_getVirtualColumn","($name)","Get the value of a virtual column in this object",2],["BaseObject::setVirtualColumn","BaseObject","BaseObject.html#method_setVirtualColumn","(string $name, mixed $value)","Set the value of a virtual column in this object",2],["BaseObject::importFrom","BaseObject","BaseObject.html#method_importFrom","(mixed $parser, string $data)","Populate the current object from a string, using a",2],["BaseObject::exportTo","BaseObject","BaseObject.html#method_exportTo","(mixed $parser, boolean $includeLazyLoadColumns = true)","Export the current object properties to a string, using",2],["BaseObject::__sleep","BaseObject","BaseObject.html#method___sleep","()","Clean up internal collections prior to serializing",2],["BaseObject::__call","BaseObject","BaseObject.html#method___call","(string $name, mixed $params)","Catches calls to undefined methods.",2],["BaseObject::fromXML","BaseObject","BaseObject.html#method_fromXML","(<abbr title=\"string \">string <\/abbr> $data)","Populate the object from an XML string",2],["BaseObject::fromYAML","BaseObject","BaseObject.html#method_fromYAML","(<abbr title=\"string \">string <\/abbr> $data)","Populate the object from a YAML string",2],["BaseObject::fromJSON","BaseObject","BaseObject.html#method_fromJSON","(<abbr title=\"string \">string <\/abbr> $data)","Populate the object from a JSON string",2],["BaseObject::fromCSV","BaseObject","BaseObject.html#method_fromCSV","(<abbr title=\"string \">string <\/abbr> $data)","Populate the object from a CSV string",2],["BaseObject::toXML","BaseObject","BaseObject.html#method_toXML","(<abbr title=\"boolean \">boolean <\/abbr> $includeLazyLoadColumns)","Export the object to an XML string",2],["BaseObject::toYAML","BaseObject","BaseObject.html#method_toYAML","(<abbr title=\"boolean \">boolean <\/abbr> $includeLazyLoadColumns)","Export the object to a YAML string",2],["BaseObject::toJSON","BaseObject","BaseObject.html#method_toJSON","(<abbr title=\"boolean \">boolean <\/abbr> $includeLazyLoadColumns)","Export the object to a JSON string",2],["BaseObject::toCSV","BaseObject","BaseObject.html#method_toCSV","(<abbr title=\"boolean \">boolean <\/abbr> $includeLazyLoadColumns)","Export the object to a CSV string",2],["BasePeer::getFieldnames","BasePeer","BasePeer.html#method_getFieldnames","($classname, $type = self::TYPE_PHPNAME)","",2],["BasePeer::translateFieldname","BasePeer","BasePeer.html#method_translateFieldname","($classname, $fieldname, $fromType, $toType)","",2],["BasePeer::doDelete","BasePeer","BasePeer.html#method_doDelete","(<a href=\"Criteria.html\"><abbr title=\"Criteria\">Criteria<\/abbr><\/a> $criteria, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con)","Method to perform deletes based on values and keys",2],["BasePeer::doDeleteAll","BasePeer","BasePeer.html#method_doDeleteAll","(string $tableName, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con, string $databaseName = null)","Method to deletes all contents of specified table.",2],["BasePeer::doInsert","BasePeer","BasePeer.html#method_doInsert","(<a href=\"Criteria.html\"><abbr title=\"Criteria\">Criteria<\/abbr><\/a> $criteria, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con)","Method to perform inserts based on values and keys",2],["BasePeer::doUpdate","BasePeer","BasePeer.html#method_doUpdate","(<a href=\"Criteria.html\"><abbr title=\"Criteria\">Criteria<\/abbr><\/a> $selectCriteria, <a href=\"Criteria.html\"><abbr title=\"Criteria\">Criteria<\/abbr><\/a> $updateValues, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con)","Method used to update rows in the DB.",2],["BasePeer::doSelect","BasePeer","BasePeer.html#method_doSelect","(<a href=\"Criteria.html\"><abbr title=\"Criteria\">Criteria<\/abbr><\/a> $criteria, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Executes query build by createSelectSql() and returns",2],["BasePeer::doCount","BasePeer","BasePeer.html#method_doCount","(<a href=\"Criteria.html\"><abbr title=\"Criteria\">Criteria<\/abbr><\/a> $criteria, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Executes a COUNT query using either a simple SQL rewrite",2],["BasePeer::doValidate","BasePeer","BasePeer.html#method_doValidate","(string $dbName, string $tableName, array $columns)","Applies any validators that were defined in the schema",2],["BasePeer::needsSelectAliases","BasePeer","BasePeer.html#method_needsSelectAliases","(<a href=\"Criteria.html\"><abbr title=\"Criteria\">Criteria<\/abbr><\/a> $criteria)","Checks whether the Criteria needs to use column aliasing",2],["BasePeer::createSelectSql","BasePeer","BasePeer.html#method_createSelectSql","(<a href=\"Criteria.html\"><abbr title=\"Criteria\">Criteria<\/abbr><\/a> $criteria, array $params)","Method to create an SQL query based on values in a",2],["BasePeer::getValidator","BasePeer","BasePeer.html#method_getValidator","(string $classname)","This function searches for the given validator $name",2],["BasePropelMigrationTask::setMigrationTable","BasePropelMigrationTask","BasePropelMigrationTask.html#method_setMigrationTable","(string $migrationTable)","Set the migration Table name",2],["BasePropelMigrationTask::getMigrationTable","BasePropelMigrationTask","BasePropelMigrationTask.html#method_getMigrationTable","()","Get the migration Table name",2],["BasePropelMigrationTask::setOutputDirectory","BasePropelMigrationTask","BasePropelMigrationTask.html#method_setOutputDirectory","(<abbr title=\"PhingFile\">PhingFile<\/abbr> $outputDirectory)","[REQUIRED] Set the output directory.",2],["BasePropelMigrationTask::getOutputDirectory","BasePropelMigrationTask","BasePropelMigrationTask.html#method_getOutputDirectory","()","Get the output directory.",2],["BaseSchemaParser::__construct","BaseSchemaParser","BaseSchemaParser.html#method___construct","(<a href=\"http:\/\/php.net\/PDO\"><abbr title=\"PDO\">PDO<\/abbr><\/a> $dbh = null)","",2],["BaseSchemaParser::setConnection","BaseSchemaParser","BaseSchemaParser.html#method_setConnection","(<a href=\"http:\/\/php.net\/PDO\"><abbr title=\"PDO\">PDO<\/abbr><\/a> $dbh)","Sets the database connection.",2],["BaseSchemaParser::getConnection","BaseSchemaParser","BaseSchemaParser.html#method_getConnection","()","Gets the database connection.",2],["BaseSchemaParser::setMigrationTable","BaseSchemaParser","BaseSchemaParser.html#method_setMigrationTable","(string $migrationTable)","Setter for the migrationTable property",2],["BaseSchemaParser::getMigrationTable","BaseSchemaParser","BaseSchemaParser.html#method_getMigrationTable","()","Getter for the migrationTable property",2],["BaseSchemaParser::getWarnings","BaseSchemaParser","BaseSchemaParser.html#method_getWarnings","()","Gets array of warning messages.",2],["BaseSchemaParser::setGeneratorConfig","BaseSchemaParser","BaseSchemaParser.html#method_setGeneratorConfig","(<a href=\"GeneratorConfigInterface.html\"><abbr title=\"GeneratorConfigInterface\">GeneratorConfigInterface<\/abbr><\/a> $config)","Sets the GeneratorConfig to use in the parsing.",2],["BaseSchemaParser::getGeneratorConfig","BaseSchemaParser","BaseSchemaParser.html#method_getGeneratorConfig","()","Gets the GeneratorConfig option.",2],["BaseSchemaParser::getBuildProperty","BaseSchemaParser","BaseSchemaParser.html#method_getBuildProperty","(string $name)","Gets a specific propel (renamed) property from the",2],["BaseSchemaParser::setPlatform","BaseSchemaParser","BaseSchemaParser.html#method_setPlatform","($platform)","",2],["BaseSchemaParser::getPlatform","BaseSchemaParser","BaseSchemaParser.html#method_getPlatform","()","",2],["BasicLogger::alert","BasicLogger","BasicLogger.html#method_alert","(mixed $message)","A convenience function for logging an alert event.",2],["BasicLogger::crit","BasicLogger","BasicLogger.html#method_crit","(mixed $message)","A convenience function for logging a critical event.",2],["BasicLogger::err","BasicLogger","BasicLogger.html#method_err","(mixed $message)","A convenience function for logging an error event.",2],["BasicLogger::warning","BasicLogger","BasicLogger.html#method_warning","(mixed $message)","A convenience function for logging a warning event.",2],["BasicLogger::notice","BasicLogger","BasicLogger.html#method_notice","(mixed $message)","A convenience function for logging an critical event.",2],["BasicLogger::info","BasicLogger","BasicLogger.html#method_info","(mixed $message)","A convenience function for logging an critical event.",2],["BasicLogger::debug","BasicLogger","BasicLogger.html#method_debug","(mixed $message)","A convenience function for logging a debug event.",2],["BasicLogger::log","BasicLogger","BasicLogger.html#method_log","(mixed $message, int $severity = null)","Primary method to handle logging.",2],["BasicValidator::isValid","BasicValidator","BasicValidator.html#method_isValid","(<a href=\"ValidatorMap.html\"><abbr title=\"ValidatorMap\">ValidatorMap<\/abbr><\/a> $map, string $str)","Determine whether a value meets the criteria specified",2],["Behavior::setName","Behavior","Behavior.html#method_setName","(string $name)","Sets the name of the Behavior",2],["Behavior::getName","Behavior","Behavior.html#method_getName","()","Returns the name of the Behavior",2],["Behavior::setTable","Behavior","Behavior.html#method_setTable","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Sets the table this behavior is applied to",2],["Behavior::getTable","Behavior","Behavior.html#method_getTable","()","Returns the table this behavior is applied to",2],["Behavior::setDatabase","Behavior","Behavior.html#method_setDatabase","(<a href=\"Database.html\"><abbr title=\"Database\">Database<\/abbr><\/a> $database)","Sets the database this behavior is applied to",2],["Behavior::getDatabase","Behavior","Behavior.html#method_getDatabase","()","Returns the table this behavior is applied to if behavior",2],["Behavior::addParameter","Behavior","Behavior.html#method_addParameter","(array $attribute)","Add a parameter Expects an associative array looking",2],["Behavior::setParameters","Behavior","Behavior.html#method_setParameters","(array $parameters)","Overrides the behavior parameters Expects an associative",2],["Behavior::getParameters","Behavior","Behavior.html#method_getParameters","()","Get the associative array of parameters",2],["Behavior::getParameter","Behavior","Behavior.html#method_getParameter","($name)","",2],["Behavior::setTableModificationOrder","Behavior","Behavior.html#method_setTableModificationOrder","(<abbr title=\"$tableModificationOrder\">$tableModificationOrder<\/abbr> $tableModificationOrder)","Define when this behavior must execute its modifyTable()",2],["Behavior::getTableModificationOrder","Behavior","Behavior.html#method_getTableModificationOrder","()","Get when this behavior must execute its modifyTable()",2],["Behavior::modifyDatabase","Behavior","Behavior.html#method_modifyDatabase","()","This method is automatically called on database behaviors",2],["Behavior::modifyTable","Behavior","Behavior.html#method_modifyTable","()","This method is automatically called on table behaviors",2],["Behavior::setTableModified","Behavior","Behavior.html#method_setTableModified","($bool)","",2],["Behavior::isTableModified","Behavior","Behavior.html#method_isTableModified","()","",2],["Behavior::renderTemplate","Behavior","Behavior.html#method_renderTemplate","(string $filename, array $vars = array(), string $templateDir = &#039;\/templates\/&#039;)","Use Propel's simple templating system to render a PHP",2],["Behavior::getColumnForParameter","Behavior","Behavior.html#method_getColumnForParameter","(string $param)","Retrieve a column object using a name stored in the",2],["Behavior::appendXml","Behavior","Behavior.html#method_appendXml","(<a href=\"http:\/\/php.net\/DOMNode\"><abbr title=\"DOMNode\">DOMNode<\/abbr><\/a> $node)","",2],["Behavior::getTableModifier","Behavior","Behavior.html#method_getTableModifier","()","",2],["Behavior::getObjectBuilderModifier","Behavior","Behavior.html#method_getObjectBuilderModifier","()","",2],["Behavior::getQueryBuilderModifier","Behavior","Behavior.html#method_getQueryBuilderModifier","()","",2],["Behavior::getPeerBuilderModifier","Behavior","Behavior.html#method_getPeerBuilderModifier","()","",2],["Behavior::getTableMapBuilderModifier","Behavior","Behavior.html#method_getTableMapBuilderModifier","()","",2],["Behavior::hasAdditionalBuilders","Behavior","Behavior.html#method_hasAdditionalBuilders","()","",2],["Behavior::getAdditionalBuilders","Behavior","Behavior.html#method_getAdditionalBuilders","()","",2],["BuildPropelGenPEARPackageTask::init","BuildPropelGenPEARPackageTask","BuildPropelGenPEARPackageTask.html#method_init","()","",2],["BuildPropelGenPEARPackageTask::main","BuildPropelGenPEARPackageTask","BuildPropelGenPEARPackageTask.html#method_main","()","Main entry point.",2],["BuildPropelGenPEARPackageTask::getFileSets","BuildPropelGenPEARPackageTask","BuildPropelGenPEARPackageTask.html#method_getFileSets","()","Used by the PEAR_PackageFileManager_PhingFileSet lister.",2],["BuildPropelGenPEARPackageTask::createFileSet","BuildPropelGenPEARPackageTask","BuildPropelGenPEARPackageTask.html#method_createFileSet","()","Nested creator, creates a FileSet for this task",2],["BuildPropelGenPEARPackageTask::setVersion","BuildPropelGenPEARPackageTask","BuildPropelGenPEARPackageTask.html#method_setVersion","(string $v)","Set the version we are building.",2],["BuildPropelGenPEARPackageTask::setState","BuildPropelGenPEARPackageTask","BuildPropelGenPEARPackageTask.html#method_setState","(string $v)","Set the state we are building.",2],["BuildPropelGenPEARPackageTask::setNotes","BuildPropelGenPEARPackageTask","BuildPropelGenPEARPackageTask.html#method_setNotes","(string $v)","Sets release notes field.",2],["BuildPropelGenPEARPackageTask::setDir","BuildPropelGenPEARPackageTask","BuildPropelGenPEARPackageTask.html#method_setDir","(<abbr title=\"PhingFile\">PhingFile<\/abbr> $f)","Sets \"dir\" property from XML.",2],["BuildPropelGenPEARPackageTask::setDestFile","BuildPropelGenPEARPackageTask","BuildPropelGenPEARPackageTask.html#method_setDestFile","(<abbr title=\"PhingFile\">PhingFile<\/abbr> $f)","Sets the file to use for generated package.xml",2],["BuildPropelPEARPackageTask::init","BuildPropelPEARPackageTask","BuildPropelPEARPackageTask.html#method_init","()","",2],["BuildPropelPEARPackageTask::main","BuildPropelPEARPackageTask","BuildPropelPEARPackageTask.html#method_main","()","Main entry point.",2],["BuildPropelPEARPackageTask::getFileSets","BuildPropelPEARPackageTask","BuildPropelPEARPackageTask.html#method_getFileSets","()","Used by the PEAR_PackageFileManager_PhingFileSet lister.",2],["BuildPropelPEARPackageTask::createFileSet","BuildPropelPEARPackageTask","BuildPropelPEARPackageTask.html#method_createFileSet","()","Nested creator, creates a FileSet for this task",2],["BuildPropelPEARPackageTask::setVersion","BuildPropelPEARPackageTask","BuildPropelPEARPackageTask.html#method_setVersion","(string $v)","Set the version we are building.",2],["BuildPropelPEARPackageTask::setState","BuildPropelPEARPackageTask","BuildPropelPEARPackageTask.html#method_setState","(string $v)","Set the state we are building.",2],["BuildPropelPEARPackageTask::setNotes","BuildPropelPEARPackageTask","BuildPropelPEARPackageTask.html#method_setNotes","(string $v)","Sets release notes field.",2],["BuildPropelPEARPackageTask::setDir","BuildPropelPEARPackageTask","BuildPropelPEARPackageTask.html#method_setDir","(<abbr title=\"PhingFile\">PhingFile<\/abbr> $f)","Sets \"dir\" property from XML.",2],["BuildPropelPEARPackageTask::setDestFile","BuildPropelPEARPackageTask","BuildPropelPEARPackageTask.html#method_setDestFile","(<abbr title=\"PhingFile\">PhingFile<\/abbr> $f)","Sets the file to use for generated package.xml",2],["ClassTools::classname","ClassTools","ClassTools.html#method_classname","(string $qualifiedName)","Gets just classname, given a dot-path to class.",2],["ClassTools::getFilePath","ClassTools","ClassTools.html#method_getFilePath","(string $path, string $classname = null, string $extension = &#039;.php&#039;)","Gets the path to be used in include()\/require() statement.",2],["ClassTools::createFilePath","ClassTools","ClassTools.html#method_createFilePath","(string $path, string $classname = null, string $extension = &#039;.php&#039;)","This method replaces the `getFilePath()` method in",2],["ClassTools::getBasePeer","ClassTools","ClassTools.html#method_getBasePeer","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Gets the basePeer path if specified for table\/db.",2],["ClassTools::getBaseClass","ClassTools","ClassTools.html#method_getBaseClass","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Gets the baseClass path if specified for table\/db.",2],["ClassTools::getInterface","ClassTools","ClassTools.html#method_getInterface","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Gets the interface path if specified for table.",2],["ClassTools::getPhpReservedWords","ClassTools","ClassTools.html#method_getPhpReservedWords","()","Gets a list of PHP reserved words.",2],["Column::__construct","Column","Column.html#method___construct","(string $name = null)","Creates a new column and set the name",2],["Column::makeList","Column","Column.html#method_makeList","($columns, <a href=\"PropelPlatformInterface.html\"><abbr title=\"PropelPlatformInterface\">PropelPlatformInterface<\/abbr><\/a> $platform)","Return a comma delimited string listing the specified",2],["Column::getDomain","Column","Column.html#method_getDomain","()","Gets domain for this column, creating a new empty domain",2],["Column::setDomain","Column","Column.html#method_setDomain","(<a href=\"Domain.html\"><abbr title=\"Domain\">Domain<\/abbr><\/a> $domain)","Sets domain for this column",2],["Column::getFullyQualifiedName","Column","Column.html#method_getFullyQualifiedName","()","Returns table.column",2],["Column::getName","Column","Column.html#method_getName","()","Get the name of the column",2],["Column::setName","Column","Column.html#method_setName","($newName)","Set the name of the column",2],["Column::isNamePlural","Column","Column.html#method_isNamePlural","()","Determines whether a column name is plural",2],["Column::getSingularName","Column","Column.html#method_getSingularName","()","Gets the singular name for the column",2],["Column::getDescription","Column","Column.html#method_getDescription","()","Get the description for the Table",2],["Column::setDescription","Column","Column.html#method_setDescription","(<abbr title=\"newDescription\">newDescription<\/abbr> $newDescription)","Set the description for the Table",2],["Column::getPhpName","Column","Column.html#method_getPhpName","()","Get name to use in PHP sources.",2],["Column::setPhpName","Column","Column.html#method_setPhpName","(String $phpName = null)","Set name to use in PHP sources.",2],["Column::getStudlyPhpName","Column","Column.html#method_getStudlyPhpName","()","Get studly version of PHP name.",2],["Column::getAccessorVisibility","Column","Column.html#method_getAccessorVisibility","()","Get the visibility of the accessors of this column",2],["Column::setAccessorVisibility","Column","Column.html#method_setAccessorVisibility","(<abbr title=\"$newVisibility\">$newVisibility<\/abbr> $newVisibility)","Set the visibility of the accessor methods for this",2],["Column::getMutatorVisibility","Column","Column.html#method_getMutatorVisibility","()","Get the visibility of the mutator of this column \/",2],["Column::setMutatorVisibility","Column","Column.html#method_setMutatorVisibility","(<abbr title=\"$newVisibility\">$newVisibility<\/abbr> $newVisibility)","Set the visibility of the mutator methods for this",2],["Column::getConstantName","Column","Column.html#method_getConstantName","()","Get the column constant name (e.g.",2],["Column::getConstantColumnName","Column","Column.html#method_getConstantColumnName","()","",2],["Column::getPeerName","Column","Column.html#method_getPeerName","()","Get the Peer constant name that will identify this",2],["Column::setPeerName","Column","Column.html#method_setPeerName","(<abbr title=\"$name\">$name<\/abbr> $name)","Set the Peer constant name that will identify this",2],["Column::getPhpType","Column","Column.html#method_getPhpType","()","Get type to use in PHP sources.",2],["Column::getPosition","Column","Column.html#method_getPosition","()","Get the location of this column within the table (one-based).",2],["Column::setPosition","Column","Column.html#method_setPosition","(int $v)","Get the location of this column within the table (one-based).",2],["Column::setTable","Column","Column.html#method_setTable","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $parent)","Set the parent Table of the column",2],["Column::getTable","Column","Column.html#method_getTable","()","Get the parent Table of the column",2],["Column::getTableName","Column","Column.html#method_getTableName","()","Returns the Name of the table the column is in",2],["Column::addInheritance","Column","Column.html#method_addInheritance","(<a href=\"Inheritance.html\"><abbr title=\"Inheritance\">Inheritance<\/abbr><\/a>|string $inhdata)","Adds a new inheritance definition to the inheritance",2],["Column::getChildren","Column","Column.html#method_getChildren","()","Get the inheritance definitions.",2],["Column::isInheritance","Column","Column.html#method_isInheritance","()","Determine if this column is a normal property or specifies",2],["Column::isEnumeratedClasses","Column","Column.html#method_isEnumeratedClasses","()","Determine if possible classes have been enumerated",2],["Column::isNotNull","Column","Column.html#method_isNotNull","()","Return the isNotNull property of the column",2],["Column::setNotNull","Column","Column.html#method_setNotNull","($status)","Set the isNotNull property of the column",2],["Column::getNotNullString","Column","Column.html#method_getNotNullString","()","Return NOT NULL String for this column",2],["Column::setPrimaryString","Column","Column.html#method_setPrimaryString","(boolean $v)","Set whether the column is the primary string, i.e.",2],["Column::isPrimaryString","Column","Column.html#method_isPrimaryString","()","Return true if the column is the primary string, i.e.",2],["Column::setPrimaryKey","Column","Column.html#method_setPrimaryKey","(boolean $v)","Set whether the column is a primary key or not.",2],["Column::isPrimaryKey","Column","Column.html#method_isPrimaryKey","()","Return true if the column is a primary key",2],["Column::setNodeKey","Column","Column.html#method_setNodeKey","($nk)","Set if the column is the node key of a tree",2],["Column::isNodeKey","Column","Column.html#method_isNodeKey","()","Return true if the column is a node key of a tree",2],["Column::setNodeKeySep","Column","Column.html#method_setNodeKeySep","($sep)","Set if the column is the node key of a tree",2],["Column::getNodeKeySep","Column","Column.html#method_getNodeKeySep","()","Return true if the column is a node key of a tree",2],["Column::setNestedSetLeftKey","Column","Column.html#method_setNestedSetLeftKey","($nslk)","Set if the column is the nested set left key of a tree",2],["Column::isNestedSetLeftKey","Column","Column.html#method_isNestedSetLeftKey","()","Return true if the column is a nested set key of a",2],["Column::setNestedSetRightKey","Column","Column.html#method_setNestedSetRightKey","($nsrk)","Set if the column is the nested set right key of a",2],["Column::isNestedSetRightKey","Column","Column.html#method_isNestedSetRightKey","()","Return true if the column is a nested set right key",2],["Column::setTreeScopeKey","Column","Column.html#method_setTreeScopeKey","($tsk)","Set if the column is the scope key of a tree",2],["Column::isTreeScopeKey","Column","Column.html#method_isTreeScopeKey","()","Return true if the column is a scope key of a tree",2],["Column::setUnique","Column","Column.html#method_setUnique","(boolean $u)","Set true if the column is UNIQUE",2],["Column::isUnique","Column","Column.html#method_isUnique","()","Get the UNIQUE property.",2],["Column::requiresTransactionInPostgres","Column","Column.html#method_requiresTransactionInPostgres","()","Return true if the column requires a transaction in",2],["Column::isForeignKey","Column","Column.html#method_isForeignKey","()","Utility method to determine if this column is a foreign",2],["Column::hasMultipleFK","Column","Column.html#method_hasMultipleFK","()","Whether this column is a part of more than one foreign",2],["Column::getForeignKeys","Column","Column.html#method_getForeignKeys","()","Get the foreign key objects for this column (if it",2],["Column::addReferrer","Column","Column.html#method_addReferrer","(<a href=\"ForeignKey.html\"><abbr title=\"ForeignKey\">ForeignKey<\/abbr><\/a> $fk)","Adds the foreign key from another table that refers",2],["Column::getReferrers","Column","Column.html#method_getReferrers","()","Get list of references to this column.",2],["Column::hasReferrers","Column","Column.html#method_hasReferrers","()","",2],["Column::hasReferrer","Column","Column.html#method_hasReferrer","(<a href=\"ForeignKey.html\"><abbr title=\"ForeignKey\">ForeignKey<\/abbr><\/a> $fk)","",2],["Column::clearReferrers","Column","Column.html#method_clearReferrers","()","",2],["Column::clearInheritanceList","Column","Column.html#method_clearInheritanceList","()","",2],["Column::setDomainForType","Column","Column.html#method_setDomainForType","(string $propelType)","Sets the domain up for specified Propel type.",2],["Column::setType","Column","Column.html#method_setType","(string $propelType)","Sets the propel colunm type.",2],["Column::getType","Column","Column.html#method_getType","()","Returns the Propel column type as a string.",2],["Column::getPDOType","Column","Column.html#method_getPDOType","()","Returns the column PDO type integer for this column's",2],["Column::getPropelType","Column","Column.html#method_getPropelType","()","Returns the column type as given in the schema as an",2],["Column::isDefaultSqlType","Column","Column.html#method_isDefaultSqlType","(<a href=\"PropelPlatformInterface.html\"><abbr title=\"PropelPlatformInterface\">PropelPlatformInterface<\/abbr><\/a> $platform = null)","",2],["Column::isLobType","Column","Column.html#method_isLobType","()","Utility method to know whether column needs Blob\/Lob",2],["Column::isTextType","Column","Column.html#method_isTextType","()","Utility method to see if the column is text type.",2],["Column::isNumericType","Column","Column.html#method_isNumericType","()","Utility method to see if the column is numeric type.",2],["Column::isBooleanType","Column","Column.html#method_isBooleanType","()","Utility method to see if the column is boolean type.",2],["Column::isTemporalType","Column","Column.html#method_isTemporalType","()","Utility method to know whether column is a temporal",2],["Column::isPhpArrayType","Column","Column.html#method_isPhpArrayType","()","Utility method to know whether column is an array column.",2],["Column::isEnumType","Column","Column.html#method_isEnumType","()","Utility method to know whether column is an ENUM column.",2],["Column::setValueSet","Column","Column.html#method_setValueSet","(array $valueSet)","Sets the list of possible values for an ENUM column",2],["Column::getValueSet","Column","Column.html#method_getValueSet","()","Returns the list of possible values for an ENUM column",2],["Column::appendXml","Column","Column.html#method_appendXml","(<a href=\"http:\/\/php.net\/DOMNode\"><abbr title=\"DOMNode\">DOMNode<\/abbr><\/a> $node)","",2],["Column::getSize","Column","Column.html#method_getSize","()","Returns the size of the column",2],["Column::setSize","Column","Column.html#method_setSize","(string $newSize)","Set the size of the column",2],["Column::getScale","Column","Column.html#method_getScale","()","Returns the scale of the column",2],["Column::setScale","Column","Column.html#method_setScale","(string $newScale)","Set the scale of the column",2],["Column::printSize","Column","Column.html#method_printSize","()","Return the size in brackets for use in an sql schema",2],["Column::getDefaultSetting","Column","Column.html#method_getDefaultSetting","()","Return a string that will give this column a default",2],["Column::getDefaultValueString","Column","Column.html#method_getDefaultValueString","()","Return a string that will give this column a default",2],["Column::setDefaultValue","Column","Column.html#method_setDefaultValue","(<a href=\"ColumnDefaultValue.html\"><abbr title=\"ColumnDefaultValue\">ColumnDefaultValue<\/abbr><\/a>|int|float|bool|string $def)","Set a string that will give this column a default value.",2],["Column::getDefaultValue","Column","Column.html#method_getDefaultValue","()","Get the default value object for this column.",2],["Column::getPhpDefaultValue","Column","Column.html#method_getPhpDefaultValue","()","Get the default value suitable for use in PHP.",2],["Column::isAutoIncrement","Column","Column.html#method_isAutoIncrement","()","Return auto increment\/sequence string for the target",2],["Column::isLazyLoad","Column","Column.html#method_isLazyLoad","()","Return true if the columns has to be lazy loaded, i.e.",2],["Column::getAutoIncrementString","Column","Column.html#method_getAutoIncrementString","()","Gets the auto-increment string.",2],["Column::setAutoIncrement","Column","Column.html#method_setAutoIncrement","($value)","Set the auto increment value.",2],["Column::setTypeFromString","Column","Column.html#method_setTypeFromString","($typeName, $size)","Set the column type from a string property (normally",2],["Column::getPhpNative","Column","Column.html#method_getPhpNative","()","Return a string representation of the native PHP type",2],["Column::isPhpPrimitiveType","Column","Column.html#method_isPhpPrimitiveType","()","Returns true if the column's PHP native type is an",2],["Column::isPhpPrimitiveNumericType","Column","Column.html#method_isPhpPrimitiveNumericType","()","Return true if column's PHP native type is an boolean,",2],["Column::isPhpObjectType","Column","Column.html#method_isPhpObjectType","()","Returns true if the column's PHP native type is a class",2],["Column::getPlatform","Column","Column.html#method_getPlatform","()","Get the platform\/adapter impl.",2],["Column::hasPlatform","Column","Column.html#method_hasPlatform","()","",2],["Column::getValidator","Column","Column.html#method_getValidator","()","",2],["Column::__clone","Column","Column.html#method___clone","()","",2],["Column::generatePhpName","Column","Column.html#method_generatePhpName","($name, $phpNamingMethod = PhpNameGenerator::CONV_METHOD_CLEAN, $namePrefix = null)","",2],["ColumnDefaultValue::__construct","ColumnDefaultValue","ColumnDefaultValue.html#method___construct","(string $value, string $type = null)","Creates a new DefaultValue object.",2],["ColumnDefaultValue::getType","ColumnDefaultValue","ColumnDefaultValue.html#method_getType","()","",2],["ColumnDefaultValue::setType","ColumnDefaultValue","ColumnDefaultValue.html#method_setType","(string $type)","",2],["ColumnDefaultValue::isExpression","ColumnDefaultValue","ColumnDefaultValue.html#method_isExpression","()","Convenience method to indicate whether the value in",2],["ColumnDefaultValue::getValue","ColumnDefaultValue","ColumnDefaultValue.html#method_getValue","()","",2],["ColumnDefaultValue::setValue","ColumnDefaultValue","ColumnDefaultValue.html#method_setValue","(string $value)","",2],["ColumnDefaultValue::equals","ColumnDefaultValue","ColumnDefaultValue.html#method_equals","(<a href=\"ColumnDefaultValue.html\"><abbr title=\"ColumnDefaultValue\">ColumnDefaultValue<\/abbr><\/a> $other)","A method to compare if two Default values match",2],["ColumnMap::__construct","ColumnMap","ColumnMap.html#method___construct","(string $name, <a href=\"TableMap.html\"><abbr title=\"TableMap\">TableMap<\/abbr><\/a> $containingTable)","Constructor.",2],["ColumnMap::getName","ColumnMap","ColumnMap.html#method_getName","()","Get the name of a column.",2],["ColumnMap::getTable","ColumnMap","ColumnMap.html#method_getTable","()","Get the table map this column belongs to.",2],["ColumnMap::getTableName","ColumnMap","ColumnMap.html#method_getTableName","()","Get the name of the table this column is in.",2],["ColumnMap::getFullyQualifiedName","ColumnMap","ColumnMap.html#method_getFullyQualifiedName","()","Get the table name + column name.",2],["ColumnMap::setPhpName","ColumnMap","ColumnMap.html#method_setPhpName","(string $phpName)","Set the php name of this column.",2],["ColumnMap::getPhpName","ColumnMap","ColumnMap.html#method_getPhpName","()","Get the name of a column.",2],["ColumnMap::setType","ColumnMap","ColumnMap.html#method_setType","(string $type)","Set the Propel type of this column.",2],["ColumnMap::getType","ColumnMap","ColumnMap.html#method_getType","()","Get the Propel type of this column.",2],["ColumnMap::getPdoType","ColumnMap","ColumnMap.html#method_getPdoType","()","Get the PDO type of this column.",2],["ColumnMap::isLob","ColumnMap","ColumnMap.html#method_isLob","()","Whether this is a BLOB, LONGVARBINARY, or VARBINARY.",2],["ColumnMap::isTemporal","ColumnMap","ColumnMap.html#method_isTemporal","()","Whether this is a DATE\/TIME\/TIMESTAMP column.",2],["ColumnMap::isEpochTemporal","ColumnMap","ColumnMap.html#method_isEpochTemporal","()","Whether this is a DATE\/TIME\/TIMESTAMP column that is",2],["ColumnMap::isNumeric","ColumnMap","ColumnMap.html#method_isNumeric","()","Whether this column is numeric (int, decimal, bigint",2],["ColumnMap::isInteger","ColumnMap","ColumnMap.html#method_isInteger","()","Whether this column is an integer",2],["ColumnMap::isText","ColumnMap","ColumnMap.html#method_isText","()","Whether this column is a text column (varchar, char,",2],["ColumnMap::setSize","ColumnMap","ColumnMap.html#method_setSize","(int $size)","Set the size of this column.",2],["ColumnMap::getSize","ColumnMap","ColumnMap.html#method_getSize","()","Get the size of this column.",2],["ColumnMap::setPrimaryKey","ColumnMap","ColumnMap.html#method_setPrimaryKey","(boolean $pk)","Set if this column is a primary key or not.",2],["ColumnMap::isPrimaryKey","ColumnMap","ColumnMap.html#method_isPrimaryKey","()","Is this column a primary key?",2],["ColumnMap::setNotNull","ColumnMap","ColumnMap.html#method_setNotNull","(boolean $nn)","Set if this column may be null.",2],["ColumnMap::isNotNull","ColumnMap","ColumnMap.html#method_isNotNull","()","Is null value allowed ?",2],["ColumnMap::setDefaultValue","ColumnMap","ColumnMap.html#method_setDefaultValue","(mixed $defaultValue)","Sets the default value for this column.",2],["ColumnMap::getDefaultValue","ColumnMap","ColumnMap.html#method_getDefaultValue","()","Gets the default value for this column.",2],["ColumnMap::setForeignKey","ColumnMap","ColumnMap.html#method_setForeignKey","(string $tableName, string $columnName)","Set the foreign key for this column.",2],["ColumnMap::isForeignKey","ColumnMap","ColumnMap.html#method_isForeignKey","()","Is this column a foreign key?",2],["ColumnMap::getRelation","ColumnMap","ColumnMap.html#method_getRelation","()","Get the RelationMap object for this foreign key",2],["ColumnMap::getRelatedName","ColumnMap","ColumnMap.html#method_getRelatedName","()","Get the table.column that this column is related to.",2],["ColumnMap::getRelatedTableName","ColumnMap","ColumnMap.html#method_getRelatedTableName","()","Get the table name that this column is related to.",2],["ColumnMap::getRelatedColumnName","ColumnMap","ColumnMap.html#method_getRelatedColumnName","()","Get the column name that this column is related to.",2],["ColumnMap::getRelatedTable","ColumnMap","ColumnMap.html#method_getRelatedTable","()","Get the TableMap object that this column is related",2],["ColumnMap::getRelatedColumn","ColumnMap","ColumnMap.html#method_getRelatedColumn","()","Get the TableMap object that this column is related",2],["ColumnMap::addValidator","ColumnMap","ColumnMap.html#method_addValidator","($validator)","",2],["ColumnMap::hasValidators","ColumnMap","ColumnMap.html#method_hasValidators","()","",2],["ColumnMap::getValidators","ColumnMap","ColumnMap.html#method_getValidators","()","",2],["ColumnMap::setValueSet","ColumnMap","ColumnMap.html#method_setValueSet","(array $values)","Set the valueSet of this column (only valid for ENUM",2],["ColumnMap::getValueSet","ColumnMap","ColumnMap.html#method_getValueSet","()","Get the valueSet of this column (only valid for ENUM",2],["ColumnMap::isInValueSet","ColumnMap","ColumnMap.html#method_isInValueSet","($value)","",2],["ColumnMap::getValueSetKey","ColumnMap","ColumnMap.html#method_getValueSetKey","($value)","",2],["ColumnMap::ignoreCase","ColumnMap","ColumnMap.html#method_ignoreCase","(string $str, <a href=\"DBAdapter.html\"><abbr title=\"DBAdapter\">DBAdapter<\/abbr><\/a> $db)","Performs DB-specific ignore case, but only if the column",2],["ColumnMap::normalizeName","ColumnMap","ColumnMap.html#method_normalizeName","(string $name)","Normalizes the column name, removing table prefix and",2],["ColumnMap::setPrimaryString","ColumnMap","ColumnMap.html#method_setPrimaryString","(boolean $pkString)","Set this column to be a primaryString column.",2],["ColumnMap::isPrimaryString","ColumnMap","ColumnMap.html#method_isPrimaryString","()","Is this column a primaryString column?",2],["ColumnMap::getColumnName","ColumnMap","ColumnMap.html#method_getColumnName","()","Gets column name",2],["ColumnValue::__construct","ColumnValue","ColumnValue.html#method___construct","(<a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $col, $val)","",2],["ColumnValue::getColumn","ColumnValue","ColumnValue.html#method_getColumn","()","",2],["ColumnValue::getValue","ColumnValue","ColumnValue.html#method_getValue","()","",2],["ConcreteInheritanceBehavior::modifyTable","ConcreteInheritanceBehavior","ConcreteInheritanceBehavior.html#method_modifyTable","()","This method is automatically called on table behaviors",2],["ConcreteInheritanceBehavior::parentClass","ConcreteInheritanceBehavior","ConcreteInheritanceBehavior.html#method_parentClass","($builder)","",2],["ConcreteInheritanceBehavior::preSave","ConcreteInheritanceBehavior","ConcreteInheritanceBehavior.html#method_preSave","($script)","",2],["ConcreteInheritanceBehavior::postDelete","ConcreteInheritanceBehavior","ConcreteInheritanceBehavior.html#method_postDelete","($script)","",2],["ConcreteInheritanceBehavior::objectMethods","ConcreteInheritanceBehavior","ConcreteInheritanceBehavior.html#method_objectMethods","($builder)","",2],["ConcreteInheritanceParentBehavior::modifyTable","ConcreteInheritanceParentBehavior","ConcreteInheritanceParentBehavior.html#method_modifyTable","()","This method is automatically called on table behaviors",2],["ConcreteInheritanceParentBehavior::objectMethods","ConcreteInheritanceParentBehavior","ConcreteInheritanceParentBehavior.html#method_objectMethods","($builder)","",2],["ConstraintNameGenerator::generateName","ConstraintNameGenerator","ConstraintNameGenerator.html#method_generateName","(string[] $inputs)","First element of inputs should be of type",2],["Criteria::__construct","Criteria","Criteria.html#method___construct","(string $dbName = null)","Creates a new instance with the default capacity which",2],["Criteria::getIterator","Criteria","Criteria.html#method_getIterator","()","Implementing SPL IteratorAggregate interface.",2],["Criteria::getMap","Criteria","Criteria.html#method_getMap","()","Get the criteria map, i.e.",2],["Criteria::clear","Criteria","Criteria.html#method_clear","()","Brings this criteria back to its initial state, so",2],["Criteria::addAsColumn","Criteria","Criteria.html#method_addAsColumn","(string $name, string $clause)","Add an AS clause to the select columns.",2],["Criteria::getAsColumns","Criteria","Criteria.html#method_getAsColumns","()","Get the column aliases.",2],["Criteria::getColumnForAs","Criteria","Criteria.html#method_getColumnForAs","(string $as)","Returns the column name associated with an alias (AS-column).",2],["Criteria::addAlias","Criteria","Criteria.html#method_addAlias","(string $alias, string $table)","Allows one to specify an alias for a table that can",2],["Criteria::removeAlias","Criteria","Criteria.html#method_removeAlias","(string $alias)","Remove an alias for a table (useful when merging Criterias).",2],["Criteria::getAliases","Criteria","Criteria.html#method_getAliases","()","Returns the aliases for this Criteria",2],["Criteria::getTableForAlias","Criteria","Criteria.html#method_getTableForAlias","(string $alias)","Returns the table name associated with an alias.",2],["Criteria::getTableNameAndAlias","Criteria","Criteria.html#method_getTableNameAndAlias","(string $tableAliasOrName)","Returns the table name and alias based on a table alias",2],["Criteria::keys","Criteria","Criteria.html#method_keys","()","Get the keys of the criteria map, i.e.",2],["Criteria::containsKey","Criteria","Criteria.html#method_containsKey","(string $column)","Does this Criteria object contain the specified key?",2],["Criteria::keyContainsValue","Criteria","Criteria.html#method_keyContainsValue","(string $column)","Does this Criteria object contain the specified key",2],["Criteria::hasWhereClause","Criteria","Criteria.html#method_hasWhereClause","()","Whether this Criteria has any where columns.",2],["Criteria::setUseTransaction","Criteria","Criteria.html#method_setUseTransaction","(bool $v)","Will force the sql represented by this criteria to",2],["Criteria::isUseTransaction","Criteria","Criteria.html#method_isUseTransaction","()","Whether the sql command specified by this criteria",2],["Criteria::getCriterion","Criteria","Criteria.html#method_getCriterion","(string $column)","Method to return criteria related to columns in a table.",2],["Criteria::getLastCriterion","Criteria","Criteria.html#method_getLastCriterion","()","Method to return the latest Criterion in a table.",2],["Criteria::getNewCriterion","Criteria","Criteria.html#method_getNewCriterion","(string $column, mixed $value = null, string $comparison = self::EQUAL)","Method to return criterion that is not added automatically",2],["Criteria::getColumnName","Criteria","Criteria.html#method_getColumnName","(string $name)","Method to return a String table name.",2],["Criteria::getTablesColumns","Criteria","Criteria.html#method_getTablesColumns","()","Shortcut method to get an array of columns indexed",2],["Criteria::getComparison","Criteria","Criteria.html#method_getComparison","(string $key)","Method to return a comparison String.",2],["Criteria::getDbName","Criteria","Criteria.html#method_getDbName","()","Get the Database(Map) name.",2],["Criteria::setDbName","Criteria","Criteria.html#method_setDbName","(string $dbName = null)","Set the DatabaseMap name.",2],["Criteria::getPrimaryTableName","Criteria","Criteria.html#method_getPrimaryTableName","()","Get the primary table for this Criteria.",2],["Criteria::setPrimaryTableName","Criteria","Criteria.html#method_setPrimaryTableName","(string $tableName)","Sets the primary table for this Criteria.",2],["Criteria::getTableName","Criteria","Criteria.html#method_getTableName","(string $name)","Method to return a String table name.",2],["Criteria::getValue","Criteria","Criteria.html#method_getValue","(string $name)","Method to return the value that was added to Criteria.",2],["Criteria::get","Criteria","Criteria.html#method_get","(string $key)","An alias to getValue() -- exposing a Hashtable-like",2],["Criteria::put","Criteria","Criteria.html#method_put","(string $key, mixed $value)","Overrides Hashtable put, so that this object is returned",2],["Criteria::putAll","Criteria","Criteria.html#method_putAll","(mixed $t)","Copies all of the mappings from the specified Map to",2],["Criteria::add","Criteria","Criteria.html#method_add","(string $critOrColumn, mixed $value = null, string $comparison = null)","This method adds a new criterion to the list of criterias.",2],["Criteria::addCond","Criteria","Criteria.html#method_addCond","(string $name, string $p1, mixed $value = null, string $comparison = null)","This method creates a new criterion but keeps it for",2],["Criteria::combine","Criteria","Criteria.html#method_combine","(array $criterions = array(), string $operator = self::LOGICAL_AND, string $name = null)","Combine several named criterions with a logical operator",2],["Criteria::addJoin","Criteria","Criteria.html#method_addJoin","(mixed $left, mixed $right, mixed $joinType = null)","This is the way that you should add a join of two tables.",2],["Criteria::addMultipleJoin","Criteria","Criteria.html#method_addMultipleJoin","(array $conditions, string $joinType = null)","Add a join with multiple conditions",2],["Criteria::addJoinObject","Criteria","Criteria.html#method_addJoinObject","(<a href=\"Join.html\"><abbr title=\"Join\">Join<\/abbr><\/a> $join)","Add a join object to the Criteria",2],["Criteria::getJoins","Criteria","Criteria.html#method_getJoins","()","Get the array of Joins.",2],["Criteria::addSelectQuery","Criteria","Criteria.html#method_addSelectQuery","(<a href=\"Criteria.html\"><abbr title=\"Criteria\">Criteria<\/abbr><\/a> $subQueryCriteria, string $alias = null)","Adds a Criteria as subQuery in the From Clause.",2],["Criteria::hasSelectQueries","Criteria","Criteria.html#method_hasSelectQueries","()","Checks whether this Criteria has a subquery.",2],["Criteria::getSelectQueries","Criteria","Criteria.html#method_getSelectQueries","()","Get the associative array of Criteria for the subQueries",2],["Criteria::getSelectQuery","Criteria","Criteria.html#method_getSelectQuery","(string $alias)","Get the Criteria for a specific subQuery.",2],["Criteria::hasSelectQuery","Criteria","Criteria.html#method_hasSelectQuery","(string $alias)","checks if the Criteria for a specific subQuery is set.",2],["Criteria::forgeSelectQueryAlias","Criteria","Criteria.html#method_forgeSelectQueryAlias","()","",2],["Criteria::setAll","Criteria","Criteria.html#method_setAll","()","Adds \"ALL\" modifier to the SQL statement.",2],["Criteria::setDistinct","Criteria","Criteria.html#method_setDistinct","()","Adds \"DISTINCT\" modifier to the SQL statement.",2],["Criteria::addSelectModifier","Criteria","Criteria.html#method_addSelectModifier","(string $modifier)","Adds a modifier to the SQL statement.",2],["Criteria::removeSelectModifier","Criteria","Criteria.html#method_removeSelectModifier","(string $modifier)","Removes a modifier to the SQL statement.",2],["Criteria::hasSelectModifier","Criteria","Criteria.html#method_hasSelectModifier","(string $modifier)","Checks the existence of a SQL select modifier",2],["Criteria::setIgnoreCase","Criteria","Criteria.html#method_setIgnoreCase","(boolean $b)","Sets ignore case.",2],["Criteria::isIgnoreCase","Criteria","Criteria.html#method_isIgnoreCase","()","Is ignore case on or off?",2],["Criteria::setSingleRecord","Criteria","Criteria.html#method_setSingleRecord","(boolean $b)","Set single record?  Set this to true if",2],["Criteria::isSingleRecord","Criteria","Criteria.html#method_isSingleRecord","()","Is single record?",2],["Criteria::setLimit","Criteria","Criteria.html#method_setLimit","(int $limit)","Set limit.",2],["Criteria::getLimit","Criteria","Criteria.html#method_getLimit","()","Get limit.",2],["Criteria::setOffset","Criteria","Criteria.html#method_setOffset","(int $offset)","Set offset.",2],["Criteria::getOffset","Criteria","Criteria.html#method_getOffset","()","Get offset.",2],["Criteria::addSelectColumn","Criteria","Criteria.html#method_addSelectColumn","(string $name)","Add select column.",2],["Criteria::setComment","Criteria","Criteria.html#method_setComment","(string $comment = null)","Set the query comment, that appears after the first",2],["Criteria::getComment","Criteria","Criteria.html#method_getComment","()","Get the query comment, that appears after the first",2],["Criteria::hasSelectClause","Criteria","Criteria.html#method_hasSelectClause","()","Whether this Criteria has any select columns.",2],["Criteria::getSelectColumns","Criteria","Criteria.html#method_getSelectColumns","()","Get select columns.",2],["Criteria::clearSelectColumns","Criteria","Criteria.html#method_clearSelectColumns","()","Clears current select columns.",2],["Criteria::getSelectModifiers","Criteria","Criteria.html#method_getSelectModifiers","()","Get select modifiers.",2],["Criteria::addGroupByColumn","Criteria","Criteria.html#method_addGroupByColumn","(string $groupBy)","Add group by column name.",2],["Criteria::addAscendingOrderByColumn","Criteria","Criteria.html#method_addAscendingOrderByColumn","(string $name)","Add order by column name, explicitly specifying ascending.",2],["Criteria::addDescendingOrderByColumn","Criteria","Criteria.html#method_addDescendingOrderByColumn","(string $name)","Add order by column name, explicitly specifying descending.",2],["Criteria::getOrderByColumns","Criteria","Criteria.html#method_getOrderByColumns","()","Get order by columns.",2],["Criteria::clearOrderByColumns","Criteria","Criteria.html#method_clearOrderByColumns","()","Clear the order-by columns.",2],["Criteria::clearGroupByColumns","Criteria","Criteria.html#method_clearGroupByColumns","()","Clear the group-by columns.",2],["Criteria::getGroupByColumns","Criteria","Criteria.html#method_getGroupByColumns","()","Get group by columns.",2],["Criteria::getHaving","Criteria","Criteria.html#method_getHaving","()","Get Having Criterion.",2],["Criteria::remove","Criteria","Criteria.html#method_remove","(string $key)","Remove an object from the criteria.",2],["Criteria::toString","Criteria","Criteria.html#method_toString","()","Build a string representation of the Criteria.",2],["Criteria::size","Criteria","Criteria.html#method_size","()","Returns the size (count) of this criteria.",2],["Criteria::equals","Criteria","Criteria.html#method_equals","(<a href=\"Criteria.html\"><abbr title=\"Criteria\">Criteria<\/abbr><\/a>|null $crit)","This method checks another Criteria to see if they",2],["Criteria::mergeWith","Criteria","Criteria.html#method_mergeWith","(<a href=\"Criteria.html\"><abbr title=\"Criteria\">Criteria<\/abbr><\/a> $criteria, string $operator = null)","Add the content of a Criteria to the current Criteria",2],["Criteria::addHaving","Criteria","Criteria.html#method_addHaving","(mixed $p1, mixed $value = null, mixed $comparison = null)","This method adds a prepared Criterion object to the",2],["Criteria::addAnd","Criteria","Criteria.html#method_addAnd","(mixed $p1, mixed $value = null, mixed $comparison = null, bool $preferColumnCondition = true)","If a criterion for the requested column already exists,",2],["Criteria::addOr","Criteria","Criteria.html#method_addOr","(mixed $p1, mixed $value = null, mixed $comparison = null, bool $preferColumnCondition = true)","If a criterion for the requested column already exists,",2],["Criteria::addUsingOperator","Criteria","Criteria.html#method_addUsingOperator","(string|<a href=\"Criterion.html\"><abbr title=\"Criterion\">Criterion<\/abbr><\/a> $p1, mixed $value = null, string $operator = null, boolean $preferColumnCondition = true)","Overrides Criteria::add() to use the default combine",2],["Criteria::_or","Criteria","Criteria.html#method__or","()","",2],["Criteria::_and","Criteria","Criteria.html#method__and","()","",2],["Criteria::_if","Criteria","Criteria.html#method__if","(bool $cond)","Returns the current object if the condition is true,",2],["Criteria::_elseif","Criteria","Criteria.html#method__elseif","(bool $cond)","Returns a PropelConditionalProxy instance.",2],["Criteria::_else","Criteria","Criteria.html#method__else","()","Returns a PropelConditionalProxy instance.",2],["Criteria::_endif","Criteria","Criteria.html#method__endif","()","Returns the current object Allows for conditional statements",2],["Criteria::__clone","Criteria","Criteria.html#method___clone","()","Ensures deep cloning of attached objects",2],["Criterion::__construct","Criterion","Criterion.html#method___construct","(<a href=\"Criteria.html\"><abbr title=\"Criteria\">Criteria<\/abbr><\/a> $outer, string $column, mixed $value, string $comparison = null, string $type = null)","Create a new instance.",2],["Criterion::init","Criterion","Criterion.html#method_init","(<a href=\"Criteria.html\"><abbr title=\"Criteria\">Criteria<\/abbr><\/a> $criteria)","Init some properties with the help of outer class",2],["Criterion::getColumn","Criterion","Criterion.html#method_getColumn","()","Get the column name.",2],["Criterion::setTable","Criterion","Criterion.html#method_setTable","(string $name)","Set the table name.",2],["Criterion::getTable","Criterion","Criterion.html#method_getTable","()","Get the table name.",2],["Criterion::getComparison","Criterion","Criterion.html#method_getComparison","()","Get the comparison.",2],["Criterion::getValue","Criterion","Criterion.html#method_getValue","()","Get the value.",2],["Criterion::getDB","Criterion","Criterion.html#method_getDB","()","Get the value of db.",2],["Criterion::setDB","Criterion","Criterion.html#method_setDB","(<a href=\"DBAdapter.html\"><abbr title=\"DBAdapter\">DBAdapter<\/abbr><\/a> $v)","Set the value of db.",2],["Criterion::setIgnoreCase","Criterion","Criterion.html#method_setIgnoreCase","(boolean $b)","Sets ignore case.",2],["Criterion::isIgnoreCase","Criterion","Criterion.html#method_isIgnoreCase","()","Is ignore case on or off?",2],["Criterion::getConjunctions","Criterion","Criterion.html#method_getConjunctions","()","Get the list of conjunctions in this Criterion",2],["Criterion::addAnd","Criterion","Criterion.html#method_addAnd","(<a href=\"Criterion.html\"><abbr title=\"Criterion\">Criterion<\/abbr><\/a> $criterion)","Append an AND Criterion onto this Criterion's list.",2],["Criterion::addOr","Criterion","Criterion.html#method_addOr","(<a href=\"Criterion.html\"><abbr title=\"Criterion\">Criterion<\/abbr><\/a> $criterion)","Append an OR Criterion onto this Criterion's list.",2],["Criterion::appendPsTo","Criterion","Criterion.html#method_appendPsTo","(string $sb, array $params)","Appends a Prepared Statement representation of the",2],["Criterion::equals","Criterion","Criterion.html#method_equals","(<a href=\"Criterion.html\"><abbr title=\"Criterion\">Criterion<\/abbr><\/a>|null $obj)","This method checks another Criteria to see if they",2],["Criterion::hashCode","Criterion","Criterion.html#method_hashCode","()","Returns a hash code value for the object.",2],["Criterion::getAllTables","Criterion","Criterion.html#method_getAllTables","()","Get all tables from nested criterion objects",2],["Criterion::getAttachedCriterion","Criterion","Criterion.html#method_getAttachedCriterion","()","get an array of all criterion attached to this recursing",2],["Criterion::__clone","Criterion","Criterion.html#method___clone","()","Ensures deep cloning of attached objects",2],["CriterionIterator::__construct","CriterionIterator","CriterionIterator.html#method___construct","(<a href=\"Criteria.html\"><abbr title=\"Criteria\">Criteria<\/abbr><\/a> $criteria)","",2],["CriterionIterator::rewind","CriterionIterator","CriterionIterator.html#method_rewind","()","",2],["CriterionIterator::valid","CriterionIterator","CriterionIterator.html#method_valid","()","",2],["CriterionIterator::key","CriterionIterator","CriterionIterator.html#method_key","()","",2],["CriterionIterator::current","CriterionIterator","CriterionIterator.html#method_current","()","",2],["CriterionIterator::next","CriterionIterator","CriterionIterator.html#method_next","()","",2],["DBAdapter::factory","DBAdapter","DBAdapter.html#method_factory","(string $driver)","Creates a new instance of the database adapter associated",2],["DBAdapter::prepareParams","DBAdapter","DBAdapter.html#method_prepareParams","(array $settings)","Prepare connection parameters.",2],["DBAdapter::initConnection","DBAdapter","DBAdapter.html#method_initConnection","(<a href=\"http:\/\/php.net\/PDO\"><abbr title=\"PDO\">PDO<\/abbr><\/a> $con, array $settings)","This method is called after a connection was created",2],["DBAdapter::setCharset","DBAdapter","DBAdapter.html#method_setCharset","(<a href=\"http:\/\/php.net\/PDO\"><abbr title=\"PDO\">PDO<\/abbr><\/a> $con, string $charset)","Sets the character encoding using SQL standard SET",2],["DBAdapter::toUpperCase","DBAdapter","DBAdapter.html#method_toUpperCase","(string $in)","This method is used to ignore case.",2],["DBAdapter::getStringDelimiter","DBAdapter","DBAdapter.html#method_getStringDelimiter","()","Returns the character used to indicate the beginning",2],["DBAdapter::ignoreCase","DBAdapter","DBAdapter.html#method_ignoreCase","(string $in)","This method is used to ignore case.",2],["DBAdapter::ignoreCaseInOrderBy","DBAdapter","DBAdapter.html#method_ignoreCaseInOrderBy","(string $in)","This method is used to ignore case in an ORDER BY clause.",2],["DBAdapter::concatString","DBAdapter","DBAdapter.html#method_concatString","(string $s1, string $s2)","Returns SQL which concatenates the second string to",2],["DBAdapter::subString","DBAdapter","DBAdapter.html#method_subString","(string $s, integer $pos, integer $len)","Returns SQL which extracts a substring.",2],["DBAdapter::strLength","DBAdapter","DBAdapter.html#method_strLength","(string $s)","Returns SQL which calculates the length (in chars)",2],["DBAdapter::quoteIdentifier","DBAdapter","DBAdapter.html#method_quoteIdentifier","(string $text)","Quotes database objec identifiers (table names, col",2],["DBAdapter::quoteIdentifierTable","DBAdapter","DBAdapter.html#method_quoteIdentifierTable","(string $table)","Quotes a database table which could have space separating",2],["DBAdapter::isGetIdBeforeInsert","DBAdapter","DBAdapter.html#method_isGetIdBeforeInsert","()","Whether this adapter uses an ID generation system that",2],["DBAdapter::isGetIdAfterInsert","DBAdapter","DBAdapter.html#method_isGetIdAfterInsert","()","Whether this adapter uses an ID generation system that",2],["DBAdapter::getId","DBAdapter","DBAdapter.html#method_getId","(<a href=\"http:\/\/php.net\/PDO\"><abbr title=\"PDO\">PDO<\/abbr><\/a> $con, string $name = null)","Gets the generated ID (either last ID for autoincrement",2],["DBAdapter::formatTemporalValue","DBAdapter","DBAdapter.html#method_formatTemporalValue","(mixed $value, mixed $type)","Formats a temporal value before binding, given a ColumnMap",2],["DBAdapter::getTimestampFormatter","DBAdapter","DBAdapter.html#method_getTimestampFormatter","()","Returns timestamp formatter string for use in date()",2],["DBAdapter::getDateFormatter","DBAdapter","DBAdapter.html#method_getDateFormatter","()","Returns date formatter string for use in date() function.",2],["DBAdapter::getTimeFormatter","DBAdapter","DBAdapter.html#method_getTimeFormatter","()","Returns time formatter string for use in date() function.",2],["DBAdapter::useQuoteIdentifier","DBAdapter","DBAdapter.html#method_useQuoteIdentifier","()","Should Column-Names get identifiers for inserts or",2],["DBAdapter::cleanupSQL","DBAdapter","DBAdapter.html#method_cleanupSQL","(string $sql, array $params, <a href=\"Criteria.html\"><abbr title=\"Criteria\">Criteria<\/abbr><\/a> $values, <a href=\"DatabaseMap.html\"><abbr title=\"DatabaseMap\">DatabaseMap<\/abbr><\/a> $dbMap)","Allows manipulation of the query string before PDOStatement",2],["DBAdapter::applyLimit","DBAdapter","DBAdapter.html#method_applyLimit","(string $sql, integer $offset, integer $limit)","Modifies the passed-in SQL to add LIMIT and\/or OFFSET.",2],["DBAdapter::random","DBAdapter","DBAdapter.html#method_random","(mixed $seed = null)","Gets the SQL string that this adapter uses for getting",2],["DBAdapter::getDeleteFromClause","DBAdapter","DBAdapter.html#method_getDeleteFromClause","(<a href=\"Criteria.html\"><abbr title=\"Criteria\">Criteria<\/abbr><\/a> $criteria, string $tableName)","Returns the \"DELETE FROM  [AS ]\" part",2],["DBAdapter::createSelectSqlPart","DBAdapter","DBAdapter.html#method_createSelectSqlPart","(<a href=\"Criteria.html\"><abbr title=\"Criteria\">Criteria<\/abbr><\/a> $criteria, array $fromClause, boolean $aliasAll = false)","Builds the SELECT part of a SQL statement based on",2],["DBAdapter::turnSelectColumnsToAliases","DBAdapter","DBAdapter.html#method_turnSelectColumnsToAliases","(<a href=\"Criteria.html\"><abbr title=\"Criteria\">Criteria<\/abbr><\/a> $criteria)","Ensures uniqueness of select column names by turning",2],["DBAdapter::bindValues","DBAdapter","DBAdapter.html#method_bindValues","(<a href=\"http:\/\/php.net\/PDOStatement\"><abbr title=\"PDOStatement\">PDOStatement<\/abbr><\/a> $stmt, array $params, <a href=\"DatabaseMap.html\"><abbr title=\"DatabaseMap\">DatabaseMap<\/abbr><\/a> $dbMap)","Binds values in a prepared statement.",2],["DBAdapter::bindValue","DBAdapter","DBAdapter.html#method_bindValue","(<a href=\"http:\/\/php.net\/PDOStatement\"><abbr title=\"PDOStatement\">PDOStatement<\/abbr><\/a> $stmt, string $parameter, mixed $value, <a href=\"ColumnMap.html\"><abbr title=\"ColumnMap\">ColumnMap<\/abbr><\/a> $cMap, null|integer $position = null)","Binds a value to a positioned parameted in a statement,",2],["DBAdapter::doExplainPlan","DBAdapter","DBAdapter.html#method_doExplainPlan","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con, <a href=\"ModelCriteria.html\"><abbr title=\"ModelCriteria\">ModelCriteria<\/abbr><\/a>|string $query)","Do Explain Plan for query object or query string",2],["DBMSSQL::setCharset","DBMSSQL","DBMSSQL.html#method_setCharset","(<a href=\"http:\/\/php.net\/PDO\"><abbr title=\"PDO\">PDO<\/abbr><\/a> $con, string $charset)","MS SQL Server does not support SET NAMES",2],["DBMSSQL::toUpperCase","DBMSSQL","DBMSSQL.html#method_toUpperCase","(string $in)","This method is used to ignore case.",2],["DBMSSQL::ignoreCase","DBMSSQL","DBMSSQL.html#method_ignoreCase","(string $in)","This method is used to ignore case.",2],["DBMSSQL::concatString","DBMSSQL","DBMSSQL.html#method_concatString","(string $s1, string $s2)","Returns SQL which concatenates the second string to",2],["DBMSSQL::subString","DBMSSQL","DBMSSQL.html#method_subString","(string $s, integer $pos, integer $len)","Returns SQL which extracts a substring.",2],["DBMSSQL::strLength","DBMSSQL","DBMSSQL.html#method_strLength","(string $s)","Returns SQL which calculates the length (in chars)",2],["DBMSSQL::quoteIdentifier","DBMSSQL","DBMSSQL.html#method_quoteIdentifier","(string $text)","",2],["DBMSSQL::quoteIdentifierTable","DBMSSQL","DBMSSQL.html#method_quoteIdentifierTable","(string $table)","",2],["DBMSSQL::random","DBMSSQL","DBMSSQL.html#method_random","(string $seed = null)","",2],["DBMSSQL::applyLimit","DBMSSQL","DBMSSQL.html#method_applyLimit","(string $sql, integer $offset, integer $limit)","Simulated Limit\/Offset",2],["DBMSSQL::cleanupSQL","DBMSSQL","DBMSSQL.html#method_cleanupSQL","(string $sql, array $params, <a href=\"Criteria.html\"><abbr title=\"Criteria\">Criteria<\/abbr><\/a> $values, <a href=\"DatabaseMap.html\"><abbr title=\"DatabaseMap\">DatabaseMap<\/abbr><\/a> $dbMap)","",2],["DBMySQL::toUpperCase","DBMySQL","DBMySQL.html#method_toUpperCase","(string $in)","This method is used to ignore case.",2],["DBMySQL::ignoreCase","DBMySQL","DBMySQL.html#method_ignoreCase","(string $in)","This method is used to ignore case.",2],["DBMySQL::concatString","DBMySQL","DBMySQL.html#method_concatString","(string $s1, string $s2)","Returns SQL which concatenates the second string to",2],["DBMySQL::subString","DBMySQL","DBMySQL.html#method_subString","(string $s, integer $pos, integer $len)","Returns SQL which extracts a substring.",2],["DBMySQL::strLength","DBMySQL","DBMySQL.html#method_strLength","(string $s)","Returns SQL which calculates the length (in chars)",2],["DBMySQL::lockTable","DBMySQL","DBMySQL.html#method_lockTable","(<a href=\"http:\/\/php.net\/PDO\"><abbr title=\"PDO\">PDO<\/abbr><\/a> $con, string $table)","Locks the specified table.",2],["DBMySQL::unlockTable","DBMySQL","DBMySQL.html#method_unlockTable","(<a href=\"http:\/\/php.net\/PDO\"><abbr title=\"PDO\">PDO<\/abbr><\/a> $con, string $table)","Unlocks the specified table.",2],["DBMySQL::quoteIdentifier","DBMySQL","DBMySQL.html#method_quoteIdentifier","(string $text)","",2],["DBMySQL::quoteIdentifierTable","DBMySQL","DBMySQL.html#method_quoteIdentifierTable","(string $table)","",2],["DBMySQL::useQuoteIdentifier","DBMySQL","DBMySQL.html#method_useQuoteIdentifier","()","",2],["DBMySQL::applyLimit","DBMySQL","DBMySQL.html#method_applyLimit","(string $sql, integer $offset, integer $limit)","",2],["DBMySQL::random","DBMySQL","DBMySQL.html#method_random","(string $seed = null)","",2],["DBMySQL::bindValue","DBMySQL","DBMySQL.html#method_bindValue","(<a href=\"http:\/\/php.net\/PDOStatement\"><abbr title=\"PDOStatement\">PDOStatement<\/abbr><\/a> $stmt, string $parameter, mixed $value, <a href=\"ColumnMap.html\"><abbr title=\"ColumnMap\">ColumnMap<\/abbr><\/a> $cMap, null|integer $position = null)","",2],["DBMySQL::prepareParams","DBMySQL","DBMySQL.html#method_prepareParams","(array $params)","Prepare connection parameters.",2],["DBMySQL::doExplainPlan","DBMySQL","DBMySQL.html#method_doExplainPlan","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con, <a href=\"ModelCriteria.html\"><abbr title=\"ModelCriteria\">ModelCriteria<\/abbr><\/a>|string $query)","Do Explain Plan for query object or query string",2],["DBNone::initConnection","DBNone","DBNone.html#method_initConnection","(<a href=\"http:\/\/php.net\/PDO\"><abbr title=\"PDO\">PDO<\/abbr><\/a> $con, array $settings)","",2],["DBNone::toUpperCase","DBNone","DBNone.html#method_toUpperCase","(string $in)","This method is used to ignore case.",2],["DBNone::ignoreCase","DBNone","DBNone.html#method_ignoreCase","(string $in)","This method is used to ignore case.",2],["DBNone::concatString","DBNone","DBNone.html#method_concatString","(string $s1, string $s2)","Returns SQL which concatenates the second string to",2],["DBNone::subString","DBNone","DBNone.html#method_subString","(string $s, integer $pos, integer $len)","Returns SQL which extracts a substring.",2],["DBNone::strLength","DBNone","DBNone.html#method_strLength","(string $s)","Returns SQL which calculates the length (in chars)",2],["DBNone::applyLimit","DBNone","DBNone.html#method_applyLimit","(string $sql, integer $offset, integer $limit)","Modifies the passed-in SQL to add LIMIT and\/or OFFSET.",2],["DBNone::random","DBNone","DBNone.html#method_random","(string $seed = null)","Gets the SQL string that this adapter uses for getting",2],["DBOracle::initConnection","DBOracle","DBOracle.html#method_initConnection","(<a href=\"http:\/\/php.net\/PDO\"><abbr title=\"PDO\">PDO<\/abbr><\/a> $con, array $settings)","This method is called after a connection was created",2],["DBOracle::toUpperCase","DBOracle","DBOracle.html#method_toUpperCase","(string $in)","This method is used to ignore case.",2],["DBOracle::ignoreCase","DBOracle","DBOracle.html#method_ignoreCase","(string $in)","This method is used to ignore case.",2],["DBOracle::concatString","DBOracle","DBOracle.html#method_concatString","(string $s1, string $s2)","Returns SQL which concatenates the second string to",2],["DBOracle::subString","DBOracle","DBOracle.html#method_subString","(string $s, integer $pos, integer $len)","Returns SQL which extracts a substring.",2],["DBOracle::strLength","DBOracle","DBOracle.html#method_strLength","(string $s)","Returns SQL which calculates the length (in chars)",2],["DBOracle::applyLimit","DBOracle","DBOracle.html#method_applyLimit","(string $sql, integer $offset, integer $limit, null|<a href=\"Criteria.html\"><abbr title=\"Criteria\">Criteria<\/abbr><\/a> $criteria = null)","",2],["DBOracle::getId","DBOracle","DBOracle.html#method_getId","(<a href=\"http:\/\/php.net\/PDO\"><abbr title=\"PDO\">PDO<\/abbr><\/a> $con, string $name = null)","",2],["DBOracle::random","DBOracle","DBOracle.html#method_random","(string $seed = null)","",2],["DBOracle::turnSelectColumnsToAliases","DBOracle","DBOracle.html#method_turnSelectColumnsToAliases","(<a href=\"Criteria.html\"><abbr title=\"Criteria\">Criteria<\/abbr><\/a> $criteria)","Ensures uniqueness of select column names by turning",2],["DBOracle::bindValue","DBOracle","DBOracle.html#method_bindValue","(<a href=\"http:\/\/php.net\/PDOStatement\"><abbr title=\"PDOStatement\">PDOStatement<\/abbr><\/a> $stmt, string $parameter, mixed $value, <a href=\"ColumnMap.html\"><abbr title=\"ColumnMap\">ColumnMap<\/abbr><\/a> $cMap, null|integer $position = null)","",2],["DBOracle::doExplainPlan","DBOracle","DBOracle.html#method_doExplainPlan","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con, <a href=\"ModelCriteria.html\"><abbr title=\"ModelCriteria\">ModelCriteria<\/abbr><\/a>|string $query)","Do Explain Plan for query object or query string",2],["DBOracle::getExplainPlanQuery","DBOracle","DBOracle.html#method_getExplainPlanQuery","(string $query, string $uniqueId)","Explain Plan compute query getter",2],["DBOracle::getExplainPlanReadQuery","DBOracle","DBOracle.html#method_getExplainPlanReadQuery","(string $uniqueId)","Explain Plan read query",2],["DBPostgres::toUpperCase","DBPostgres","DBPostgres.html#method_toUpperCase","(string $in)","This method is used to ignore case.",2],["DBPostgres::ignoreCase","DBPostgres","DBPostgres.html#method_ignoreCase","(string $in)","This method is used to ignore case.",2],["DBPostgres::concatString","DBPostgres","DBPostgres.html#method_concatString","(string $s1, string $s2)","Returns SQL which concatenates the second string to",2],["DBPostgres::subString","DBPostgres","DBPostgres.html#method_subString","(string $s, integer $pos, integer $len)","Returns SQL which extracts a substring.",2],["DBPostgres::strLength","DBPostgres","DBPostgres.html#method_strLength","(string $s)","Returns SQL which calculates the length (in chars)",2],["DBPostgres::getId","DBPostgres","DBPostgres.html#method_getId","(<a href=\"http:\/\/php.net\/PDO\"><abbr title=\"PDO\">PDO<\/abbr><\/a> $con, string $name = null)","Gets ID for specified sequence name.",2],["DBPostgres::getTimestampFormatter","DBPostgres","DBPostgres.html#method_getTimestampFormatter","()","Returns timestamp formatter string for use in date()",2],["DBPostgres::getTimeFormatter","DBPostgres","DBPostgres.html#method_getTimeFormatter","()","Returns timestamp formatter string for use in date()",2],["DBPostgres::applyLimit","DBPostgres","DBPostgres.html#method_applyLimit","(string $sql, integer $offset, integer $limit)","",2],["DBPostgres::random","DBPostgres","DBPostgres.html#method_random","(string $seed = null)","",2],["DBPostgres::getDeleteFromClause","DBPostgres","DBPostgres.html#method_getDeleteFromClause","(<a href=\"Criteria.html\"><abbr title=\"Criteria\">Criteria<\/abbr><\/a> $criteria, string $tableName)","",2],["DBPostgres::quoteIdentifierTable","DBPostgres","DBPostgres.html#method_quoteIdentifierTable","(string $table)","",2],["DBPostgres::doExplainPlan","DBPostgres","DBPostgres.html#method_doExplainPlan","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con, <a href=\"ModelCriteria.html\"><abbr title=\"ModelCriteria\">ModelCriteria<\/abbr><\/a>|string $query)","Do Explain Plan for query object or query string",2],["DBPostgres::getExplainPlanQuery","DBPostgres","DBPostgres.html#method_getExplainPlanQuery","(string $query)","Explain Plan compute query getter",2],["DBSQLSRV::initConnection","DBSQLSRV","DBSQLSRV.html#method_initConnection","(<a href=\"http:\/\/php.net\/PDO\"><abbr title=\"PDO\">PDO<\/abbr><\/a> $con, array $settings)","",2],["DBSQLSRV::setCharset","DBSQLSRV","DBSQLSRV.html#method_setCharset","(<a href=\"http:\/\/php.net\/PDO\"><abbr title=\"PDO\">PDO<\/abbr><\/a> $con, string $charset)","",2],["DBSQLSRV::cleanupSQL","DBSQLSRV","DBSQLSRV.html#method_cleanupSQL","(string $sql, array $params, <a href=\"Criteria.html\"><abbr title=\"Criteria\">Criteria<\/abbr><\/a> $values, <a href=\"DatabaseMap.html\"><abbr title=\"DatabaseMap\">DatabaseMap<\/abbr><\/a> $dbMap)","",2],["DBSQLSRV::bindValue","DBSQLSRV","DBSQLSRV.html#method_bindValue","(<a href=\"http:\/\/php.net\/PDOStatement\"><abbr title=\"PDOStatement\">PDOStatement<\/abbr><\/a> $stmt, string $parameter, mixed $value, <a href=\"ColumnMap.html\"><abbr title=\"ColumnMap\">ColumnMap<\/abbr><\/a> $cMap, null|integer $position = null)","",2],["DBSQLite::setCharset","DBSQLite","DBSQLite.html#method_setCharset","(<a href=\"http:\/\/php.net\/PDO\"><abbr title=\"PDO\">PDO<\/abbr><\/a> $con, string $charset)","For SQLite this method has no effect, since SQLite",2],["DBSQLite::toUpperCase","DBSQLite","DBSQLite.html#method_toUpperCase","(string $in)","This method is used to ignore case.",2],["DBSQLite::ignoreCase","DBSQLite","DBSQLite.html#method_ignoreCase","(string $in)","This method is used to ignore case.",2],["DBSQLite::concatString","DBSQLite","DBSQLite.html#method_concatString","(string $s1, string $s2)","Returns SQL which concatenates the second string to",2],["DBSQLite::subString","DBSQLite","DBSQLite.html#method_subString","(string $s, integer $pos, integer $len)","Returns SQL which extracts a substring.",2],["DBSQLite::strLength","DBSQLite","DBSQLite.html#method_strLength","(string $s)","Returns SQL which calculates the length (in chars)",2],["DBSQLite::quoteIdentifier","DBSQLite","DBSQLite.html#method_quoteIdentifier","(string $text)","",2],["DBSQLite::applyLimit","DBSQLite","DBSQLite.html#method_applyLimit","(string $sql, integer $offset, integer $limit)","",2],["DBSQLite::random","DBSQLite","DBSQLite.html#method_random","(string $seed = null)","",2],["DataModelBuilder::__construct","DataModelBuilder","DataModelBuilder.html#method___construct","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Creates new instance of DataModelBuilder subclass.",2],["DataModelBuilder::getPeerBuilder","DataModelBuilder","DataModelBuilder.html#method_getPeerBuilder","()","Returns new or existing Peer builder class for this",2],["DataModelBuilder::getPluralizer","DataModelBuilder","DataModelBuilder.html#method_getPluralizer","()","Returns new or existing Pluralizer class.",2],["DataModelBuilder::getStubPeerBuilder","DataModelBuilder","DataModelBuilder.html#method_getStubPeerBuilder","()","Returns new or existing stub Peer builder class for",2],["DataModelBuilder::getObjectBuilder","DataModelBuilder","DataModelBuilder.html#method_getObjectBuilder","()","Returns new or existing Object builder class for this",2],["DataModelBuilder::getStubObjectBuilder","DataModelBuilder","DataModelBuilder.html#method_getStubObjectBuilder","()","Returns new or existing stub Object builder class for",2],["DataModelBuilder::getQueryBuilder","DataModelBuilder","DataModelBuilder.html#method_getQueryBuilder","()","Returns new or existing Query builder class for this",2],["DataModelBuilder::getStubQueryBuilder","DataModelBuilder","DataModelBuilder.html#method_getStubQueryBuilder","()","Returns new or existing stub Query builder class for",2],["DataModelBuilder::getTableMapBuilder","DataModelBuilder","DataModelBuilder.html#method_getTableMapBuilder","()","Returns new or existing Object builder class for this",2],["DataModelBuilder::getInterfaceBuilder","DataModelBuilder","DataModelBuilder.html#method_getInterfaceBuilder","()","Returns new or existing stub Interface builder class",2],["DataModelBuilder::getMultiExtendObjectBuilder","DataModelBuilder","DataModelBuilder.html#method_getMultiExtendObjectBuilder","()","Returns new or existing stub child object builder class",2],["DataModelBuilder::getNodeBuilder","DataModelBuilder","DataModelBuilder.html#method_getNodeBuilder","()","Returns new or existing node Object builder class for",2],["DataModelBuilder::getNodePeerBuilder","DataModelBuilder","DataModelBuilder.html#method_getNodePeerBuilder","()","Returns new or existing node Peer builder class for",2],["DataModelBuilder::getStubNodeBuilder","DataModelBuilder","DataModelBuilder.html#method_getStubNodeBuilder","()","Returns new or existing stub node Object builder class",2],["DataModelBuilder::getStubNodePeerBuilder","DataModelBuilder","DataModelBuilder.html#method_getStubNodePeerBuilder","()","Returns new or existing stub node Peer builder class",2],["DataModelBuilder::getNestedSetBuilder","DataModelBuilder","DataModelBuilder.html#method_getNestedSetBuilder","()","Returns new or existing nested set object builder class",2],["DataModelBuilder::getNestedSetPeerBuilder","DataModelBuilder","DataModelBuilder.html#method_getNestedSetPeerBuilder","()","Returns new or existing nested set Peer builder class",2],["DataModelBuilder::getDataSQLBuilder","DataModelBuilder","DataModelBuilder.html#method_getDataSQLBuilder","()","Returns new or existing data sql builder class for",2],["DataModelBuilder::getNewBuilder","DataModelBuilder","DataModelBuilder.html#method_getNewBuilder","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table, string $classname)","Gets a new data model builder class for specified table",2],["DataModelBuilder::getNewPeerBuilder","DataModelBuilder","DataModelBuilder.html#method_getNewPeerBuilder","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Convenience method to return a NEW Peer class builder",2],["DataModelBuilder::getNewStubPeerBuilder","DataModelBuilder","DataModelBuilder.html#method_getNewStubPeerBuilder","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Convenience method to return a NEW Peer stub class",2],["DataModelBuilder::getNewObjectBuilder","DataModelBuilder","DataModelBuilder.html#method_getNewObjectBuilder","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Convenience method to return a NEW Object class builder",2],["DataModelBuilder::getNewStubObjectBuilder","DataModelBuilder","DataModelBuilder.html#method_getNewStubObjectBuilder","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Convenience method to return a NEW Object stub class",2],["DataModelBuilder::getNewQueryBuilder","DataModelBuilder","DataModelBuilder.html#method_getNewQueryBuilder","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Convenience method to return a NEW query class builder",2],["DataModelBuilder::getNewStubQueryBuilder","DataModelBuilder","DataModelBuilder.html#method_getNewStubQueryBuilder","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Convenience method to return a NEW query stub class",2],["DataModelBuilder::getNewQueryInheritanceBuilder","DataModelBuilder","DataModelBuilder.html#method_getNewQueryInheritanceBuilder","($child)","Returns new Query Inheritance builder class for this",2],["DataModelBuilder::getNewStubQueryInheritanceBuilder","DataModelBuilder","DataModelBuilder.html#method_getNewStubQueryInheritanceBuilder","($child)","Returns new stub Query Inheritance builder class for",2],["DataModelBuilder::getGeneratorConfig","DataModelBuilder","DataModelBuilder.html#method_getGeneratorConfig","()","Gets the GeneratorConfig object.",2],["DataModelBuilder::getBuildProperty","DataModelBuilder","DataModelBuilder.html#method_getBuildProperty","(string $name)","Get a specific [name transformed] build property.",2],["DataModelBuilder::setGeneratorConfig","DataModelBuilder","DataModelBuilder.html#method_setGeneratorConfig","(<a href=\"GeneratorConfigInterface.html\"><abbr title=\"GeneratorConfigInterface\">GeneratorConfigInterface<\/abbr><\/a> $v)","Sets the GeneratorConfig object.",2],["DataModelBuilder::setTable","DataModelBuilder","DataModelBuilder.html#method_setTable","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Sets the table for this builder.",2],["DataModelBuilder::getTable","DataModelBuilder","DataModelBuilder.html#method_getTable","()","Returns the current Table object.",2],["DataModelBuilder::getPlatform","DataModelBuilder","DataModelBuilder.html#method_getPlatform","()","Convenience method to returns the Platform class for",2],["DataModelBuilder::setPlatform","DataModelBuilder","DataModelBuilder.html#method_setPlatform","(<a href=\"PropelPlatformInterface.html\"><abbr title=\"PropelPlatformInterface\">PropelPlatformInterface<\/abbr><\/a> $platform)","Platform setter",2],["DataModelBuilder::getDatabase","DataModelBuilder","DataModelBuilder.html#method_getDatabase","()","Convenience method to returns the database for current",2],["DataModelBuilder::getWarnings","DataModelBuilder","DataModelBuilder.html#method_getWarnings","()","Gets array of warning messages.",2],["DataModelBuilder::quoteIdentifier","DataModelBuilder","DataModelBuilder.html#method_quoteIdentifier","(string $text)","Wraps call to Platform->quoteIdentifier() with a check",2],["DataModelBuilder::prefixClassname","DataModelBuilder","DataModelBuilder.html#method_prefixClassname","($identifier)","Returns the name of the current class being built,",2],["DataRow::__construct","DataRow","DataRow.html#method___construct","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table, $columnValues)","",2],["DataRow::getTable","DataRow","DataRow.html#method_getTable","()","",2],["DataRow::getColumnValues","DataRow","DataRow.html#method_getColumnValues","()","",2],["DataSQLBuilder::reset","DataSQLBuilder","DataSQLBuilder.html#method_reset","()","Perform any reset between runs of this builder.",2],["DataSQLBuilder::getDatabaseStartSql","DataSQLBuilder","DataSQLBuilder.html#method_getDatabaseStartSql","()","Gets any SQL to place at the start of all the row inserts.",2],["DataSQLBuilder::getDatabaseEndSql","DataSQLBuilder","DataSQLBuilder.html#method_getDatabaseEndSql","()","Gets any SQL to place at the end of all the row inserts.",2],["DataSQLBuilder::getTableStartSql","DataSQLBuilder","DataSQLBuilder.html#method_getTableStartSql","()","Gets any SQL to place before row inserts for a new",2],["DataSQLBuilder::getTableEndSql","DataSQLBuilder","DataSQLBuilder.html#method_getTableEndSql","()","Gets any SQL to place at the end of row inserts for",2],["DataSQLBuilder::buildRowSql","DataSQLBuilder","DataSQLBuilder.html#method_buildRowSql","(<a href=\"DataRow.html\"><abbr title=\"DataRow\">DataRow<\/abbr><\/a> $row)","The main method in this class, returns the SQL for",2],["DataSQLBuilder::getTimestampSql","DataSQLBuilder","DataSQLBuilder.html#method_getTimestampSql","(string $value)","Gets a representation of a timestamp value suitable",2],["Database::__construct","Database","Database.html#method___construct","(string $name = null)","Constructs a new Database object.",2],["Database::getPlatform","Database","Database.html#method_getPlatform","()","Returns the PropelPlatformInterface implementation",2],["Database::setPlatform","Database","Database.html#method_setPlatform","(<a href=\"PropelPlatformInterface.html\"><abbr title=\"PropelPlatformInterface\">PropelPlatformInterface<\/abbr><\/a> $platform)","Sets the PropelPlatformInterface implementation for",2],["Database::getName","Database","Database.html#method_getName","()","Get the name of the Database",2],["Database::setName","Database","Database.html#method_setName","($name)","Set the name of the Database",2],["Database::getBaseClass","Database","Database.html#method_getBaseClass","()","Get the value of baseClass.",2],["Database::setBaseClass","Database","Database.html#method_setBaseClass","(string $v)","Set the value of baseClass.",2],["Database::getBasePeer","Database","Database.html#method_getBasePeer","()","Get the value of basePeer.",2],["Database::setBasePeer","Database","Database.html#method_setBasePeer","(string $v)","Set the value of basePeer.",2],["Database::getDefaultIdMethod","Database","Database.html#method_getDefaultIdMethod","()","Get the value of defaultIdMethod.",2],["Database::setDefaultIdMethod","Database","Database.html#method_setDefaultIdMethod","(string $v)","Set the value of defaultIdMethod.",2],["Database::getDefaultPhpNamingMethod","Database","Database.html#method_getDefaultPhpNamingMethod","()","Get the value of defaultPHPNamingMethod which specifies",2],["Database::setDefaultPhpNamingMethod","Database","Database.html#method_setDefaultPhpNamingMethod","(string $v)","Set the value of defaultPHPNamingMethod.",2],["Database::getDefaultTranslateMethod","Database","Database.html#method_getDefaultTranslateMethod","()","Get the value of defaultTranslateMethod which specifies",2],["Database::setDefaultStringFormat","Database","Database.html#method_setDefaultStringFormat","(string $defaultStringFormat)","Set the default string format for ActiveRecord objects",2],["Database::getDefaultStringFormat","Database","Database.html#method_getDefaultStringFormat","()","Get the default string format for ActiveRecord objects",2],["Database::setDefaultTranslateMethod","Database","Database.html#method_setDefaultTranslateMethod","(string $v)","Set the value of defaultTranslateMethod.",2],["Database::isHeavyIndexing","Database","Database.html#method_isHeavyIndexing","()","Get the value of heavyIndexing.",2],["Database::getHeavyIndexing","Database","Database.html#method_getHeavyIndexing","()","Get the value of heavyIndexing.",2],["Database::setHeavyIndexing","Database","Database.html#method_setHeavyIndexing","(boolean $v)","Set the value of heavyIndexing.",2],["Database::getTables","Database","Database.html#method_getTables","()","Return the list of all tables",2],["Database::countTables","Database","Database.html#method_countTables","()","Return the number of tables in the database",2],["Database::getTablesForSql","Database","Database.html#method_getTablesForSql","()","Return the list of all tables that have a SQL representation",2],["Database::hasTable","Database","Database.html#method_hasTable","(string $name, boolean $caseInsensitive = false)","Check whether the database has a table.",2],["Database::getTable","Database","Database.html#method_getTable","(string $name, boolean $caseInsensitive = false)","Return the table with the specified name.",2],["Database::hasTableByPhpName","Database","Database.html#method_hasTableByPhpName","(string $phpName)","Check whether the database has a table.",2],["Database::getTableByPhpName","Database","Database.html#method_getTableByPhpName","(string $phpName)","Return the table with the specified phpName.",2],["Database::addTable","Database","Database.html#method_addTable","($data)","An utility method to add a new table from an xml attribute.",2],["Database::setAppData","Database","Database.html#method_setAppData","(<a href=\"AppData.html\"><abbr title=\"AppData\">AppData<\/abbr><\/a> $parent)","Set the parent of the database",2],["Database::getAppData","Database","Database.html#method_getAppData","()","Get the parent of the table",2],["Database::addDomain","Database","Database.html#method_addDomain","(<a href=\"Domain.html\"><abbr title=\"Domain\">Domain<\/abbr><\/a>|string $data)","Adds Domain object from  tag.",2],["Database::getDomain","Database","Database.html#method_getDomain","($domainName)","Get already configured Domain object by name.",2],["Database::getGeneratorConfig","Database","Database.html#method_getGeneratorConfig","()","",2],["Database::getBuildProperty","Database","Database.html#method_getBuildProperty","($key)","",2],["Database::addBehavior","Database","Database.html#method_addBehavior","($bdata)","Adds a new Behavior to the database",2],["Database::getBehaviors","Database","Database.html#method_getBehaviors","()","Get the database behaviors",2],["Database::hasBehavior","Database","Database.html#method_hasBehavior","(string $name)","check if the database has a behavior by name",2],["Database::getBehavior","Database","Database.html#method_getBehavior","(string $name)","Get one database behavior by name",2],["Database::getTablePrefix","Database","Database.html#method_getTablePrefix","()","Get the table prefix for this database",2],["Database::getNextTableBehavior","Database","Database.html#method_getNextTableBehavior","()","Get the next behavior on all tables, ordered by behavior",2],["Database::doFinalInitialization","Database","Database.html#method_doFinalInitialization","()","",2],["Database::appendXml","Database","Database.html#method_appendXml","(<a href=\"http:\/\/php.net\/DOMNode\"><abbr title=\"DOMNode\">DOMNode<\/abbr><\/a> $node)","",2],["DatabaseMap::__construct","DatabaseMap","DatabaseMap.html#method___construct","(string $name)","Constructor.",2],["DatabaseMap::getName","DatabaseMap","DatabaseMap.html#method_getName","()","Get the name of this database.",2],["DatabaseMap::addTable","DatabaseMap","DatabaseMap.html#method_addTable","(string $tableName)","Add a new table to the database by name.",2],["DatabaseMap::addTableObject","DatabaseMap","DatabaseMap.html#method_addTableObject","(<a href=\"TableMap.html\"><abbr title=\"TableMap\">TableMap<\/abbr><\/a> $table)","Add a new table object to the database.",2],["DatabaseMap::addTableFromMapClass","DatabaseMap","DatabaseMap.html#method_addTableFromMapClass","(string $tableMapClass)","Add a new table to the database, using the tablemap",2],["DatabaseMap::hasTable","DatabaseMap","DatabaseMap.html#method_hasTable","(string $name)","Does this database contain this specific table?",2],["DatabaseMap::getTable","DatabaseMap","DatabaseMap.html#method_getTable","(string $name)","Get a TableMap for the table by name.",2],["DatabaseMap::getTables","DatabaseMap","DatabaseMap.html#method_getTables","()","Get a TableMap[] of all of the tables in the database.",2],["DatabaseMap::getColumn","DatabaseMap","DatabaseMap.html#method_getColumn","(<abbr title=\"$qualifiedColumnName\">$qualifiedColumnName<\/abbr> $qualifiedColumnName)","Get a ColumnMap for the column by name.",2],["DatabaseMap::containsTable","DatabaseMap","DatabaseMap.html#method_containsTable","(string $name)","Does this database contain this specific table?",2],["DatabaseMap::getTableByPhpName","DatabaseMap","DatabaseMap.html#method_getTableByPhpName","($phpName)","",2],["DatabaseMap::getDBAdapter","DatabaseMap","DatabaseMap.html#method_getDBAdapter","()","Convenience method to get the DBAdapter registered",2],["DebugPDOStatement::getExecutedQueryString","DebugPDOStatement","DebugPDOStatement.html#method_getExecutedQueryString","(array $values = array())","",2],["DebugPDOStatement::execute","DebugPDOStatement","DebugPDOStatement.html#method_execute","(string $input_parameters = null)","Executes a prepared statement.",2],["DebugPDOStatement::bindValue","DebugPDOStatement","DebugPDOStatement.html#method_bindValue","(integer $pos, mixed $value, integer $type = PDO::PARAM_STR)","Binds a value to a corresponding named or question",2],["DebugPDOStatement::bindParam","DebugPDOStatement","DebugPDOStatement.html#method_bindParam","(integer $pos, mixed $value, integer $type = PDO::PARAM_STR, integer $length, mixed $driver_options = null)","Binds a PHP variable to a corresponding named or question",2],["DefaultEnglishPluralizer::getPluralForm","DefaultEnglishPluralizer","DefaultEnglishPluralizer.html#method_getPluralForm","(string $root)","Generate a plural name based on the passed in root.",2],["DefaultPlatform::__construct","DefaultPlatform","DefaultPlatform.html#method___construct","(<a href=\"http:\/\/php.net\/PDO\"><abbr title=\"PDO\">PDO<\/abbr><\/a> $con = null)","Default constructor.",2],["DefaultPlatform::setConnection","DefaultPlatform","DefaultPlatform.html#method_setConnection","(<a href=\"http:\/\/php.net\/PDO\"><abbr title=\"PDO\">PDO<\/abbr><\/a> $con = null)","Set the database connection to use for this Platform",2],["DefaultPlatform::getConnection","DefaultPlatform","DefaultPlatform.html#method_getConnection","()","Returns the database connection to use for this Platform",2],["DefaultPlatform::setGeneratorConfig","DefaultPlatform","DefaultPlatform.html#method_setGeneratorConfig","(<a href=\"GeneratorConfigInterface.html\"><abbr title=\"GeneratorConfigInterface\">GeneratorConfigInterface<\/abbr><\/a> $config)","Sets the GeneratorConfig to use in the parsing.",2],["DefaultPlatform::getDatabaseType","DefaultPlatform","DefaultPlatform.html#method_getDatabaseType","()","Returns the short name of the database type that this",2],["DefaultPlatform::getMaxColumnNameLength","DefaultPlatform","DefaultPlatform.html#method_getMaxColumnNameLength","()","Returns the max column length supported by the db.",2],["DefaultPlatform::getNativeIdMethod","DefaultPlatform","DefaultPlatform.html#method_getNativeIdMethod","()","Returns the native IdMethod (sequence|identity)",2],["DefaultPlatform::isNativeIdMethodAutoIncrement","DefaultPlatform","DefaultPlatform.html#method_isNativeIdMethodAutoIncrement","()","",2],["DefaultPlatform::getDomainForType","DefaultPlatform","DefaultPlatform.html#method_getDomainForType","(string $propelType)","Returns the db specific domain for a propelType.",2],["DefaultPlatform::getNullString","DefaultPlatform","DefaultPlatform.html#method_getNullString","($notNull)","",2],["DefaultPlatform::getAutoIncrement","DefaultPlatform","DefaultPlatform.html#method_getAutoIncrement","()","",2],["DefaultPlatform::getSequenceName","DefaultPlatform","DefaultPlatform.html#method_getSequenceName","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Gets the name to use for creating a sequence for a",2],["DefaultPlatform::getAddTablesDDL","DefaultPlatform","DefaultPlatform.html#method_getAddTablesDDL","(<a href=\"Database.html\"><abbr title=\"Database\">Database<\/abbr><\/a> $database)","Builds the DDL SQL to add the tables of a database",2],["DefaultPlatform::getBeginDDL","DefaultPlatform","DefaultPlatform.html#method_getBeginDDL","()","Gets the requests to execute at the beginning of a",2],["DefaultPlatform::getEndDDL","DefaultPlatform","DefaultPlatform.html#method_getEndDDL","()","Gets the requests to execute at the end of a DDL file",2],["DefaultPlatform::getDropTableDDL","DefaultPlatform","DefaultPlatform.html#method_getDropTableDDL","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Builds the DDL SQL to drop a table",2],["DefaultPlatform::getAddTableDDL","DefaultPlatform","DefaultPlatform.html#method_getAddTableDDL","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Builds the DDL SQL to add a table without index and",2],["DefaultPlatform::getColumnDDL","DefaultPlatform","DefaultPlatform.html#method_getColumnDDL","(<a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $col)","Builds the DDL SQL for a Column object.",2],["DefaultPlatform::getColumnDefaultValueDDL","DefaultPlatform","DefaultPlatform.html#method_getColumnDefaultValueDDL","(<a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $col)","Returns the SQL for the default value of a Column object",2],["DefaultPlatform::getColumnListDDL","DefaultPlatform","DefaultPlatform.html#method_getColumnListDDL","($columns, $delimiter = &#039;,&#039;)","Creates a delimiter-delimited string list of column",2],["DefaultPlatform::getPrimaryKeyName","DefaultPlatform","DefaultPlatform.html#method_getPrimaryKeyName","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Returns the name of a table primary key",2],["DefaultPlatform::getPrimaryKeyDDL","DefaultPlatform","DefaultPlatform.html#method_getPrimaryKeyDDL","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Returns the SQL for the primary key of a Table object",2],["DefaultPlatform::getDropPrimaryKeyDDL","DefaultPlatform","DefaultPlatform.html#method_getDropPrimaryKeyDDL","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Builds the DDL SQL to drop the primary key of a table.",2],["DefaultPlatform::getAddPrimaryKeyDDL","DefaultPlatform","DefaultPlatform.html#method_getAddPrimaryKeyDDL","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Builds the DDL SQL to add the primary key of a table.",2],["DefaultPlatform::getAddIndicesDDL","DefaultPlatform","DefaultPlatform.html#method_getAddIndicesDDL","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Builds the DDL SQL to add the indices of a table.",2],["DefaultPlatform::getAddIndexDDL","DefaultPlatform","DefaultPlatform.html#method_getAddIndexDDL","(<a href=\"Index.html\"><abbr title=\"Index\">Index<\/abbr><\/a> $index)","Builds the DDL SQL to add an Index.",2],["DefaultPlatform::getDropIndexDDL","DefaultPlatform","DefaultPlatform.html#method_getDropIndexDDL","(<a href=\"Index.html\"><abbr title=\"Index\">Index<\/abbr><\/a> $index)","Builds the DDL SQL to drop an Index.",2],["DefaultPlatform::getIndexDDL","DefaultPlatform","DefaultPlatform.html#method_getIndexDDL","(<a href=\"Index.html\"><abbr title=\"Index\">Index<\/abbr><\/a> $index)","Builds the DDL SQL for an Index object.",2],["DefaultPlatform::getUniqueDDL","DefaultPlatform","DefaultPlatform.html#method_getUniqueDDL","(<a href=\"Unique.html\"><abbr title=\"Unique\">Unique<\/abbr><\/a> $unique)","Builds the DDL SQL for a Unique constraint object.",2],["DefaultPlatform::getAddForeignKeysDDL","DefaultPlatform","DefaultPlatform.html#method_getAddForeignKeysDDL","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Builds the DDL SQL to add the foreign keys of a table.",2],["DefaultPlatform::getAddForeignKeyDDL","DefaultPlatform","DefaultPlatform.html#method_getAddForeignKeyDDL","(<a href=\"ForeignKey.html\"><abbr title=\"ForeignKey\">ForeignKey<\/abbr><\/a> $fk)","Builds the DDL SQL to add a foreign key.",2],["DefaultPlatform::getDropForeignKeyDDL","DefaultPlatform","DefaultPlatform.html#method_getDropForeignKeyDDL","(<a href=\"ForeignKey.html\"><abbr title=\"ForeignKey\">ForeignKey<\/abbr><\/a> $fk)","Builds the DDL SQL to drop a foreign key.",2],["DefaultPlatform::getForeignKeyDDL","DefaultPlatform","DefaultPlatform.html#method_getForeignKeyDDL","(<a href=\"ForeignKey.html\"><abbr title=\"ForeignKey\">ForeignKey<\/abbr><\/a> $fk)","Builds the DDL SQL for a ForeignKey object.",2],["DefaultPlatform::getCommentLineDDL","DefaultPlatform","DefaultPlatform.html#method_getCommentLineDDL","($comment)","",2],["DefaultPlatform::getCommentBlockDDL","DefaultPlatform","DefaultPlatform.html#method_getCommentBlockDDL","($comment)","",2],["DefaultPlatform::getModifyDatabaseDDL","DefaultPlatform","DefaultPlatform.html#method_getModifyDatabaseDDL","(<a href=\"PropelDatabaseDiff.html\"><abbr title=\"PropelDatabaseDiff\">PropelDatabaseDiff<\/abbr><\/a> $databaseDiff)","Builds the DDL SQL to modify a database based on a",2],["DefaultPlatform::getRenameTableDDL","DefaultPlatform","DefaultPlatform.html#method_getRenameTableDDL","($fromTableName, $toTableName)","Builds the DDL SQL to rename a table",2],["DefaultPlatform::getModifyTableDDL","DefaultPlatform","DefaultPlatform.html#method_getModifyTableDDL","(<a href=\"PropelTableDiff.html\"><abbr title=\"PropelTableDiff\">PropelTableDiff<\/abbr><\/a> $tableDiff)","Builds the DDL SQL to alter a table based on a PropelTableDiff",2],["DefaultPlatform::getModifyTableColumnsDDL","DefaultPlatform","DefaultPlatform.html#method_getModifyTableColumnsDDL","(<a href=\"PropelTableDiff.html\"><abbr title=\"PropelTableDiff\">PropelTableDiff<\/abbr><\/a> $tableDiff)","Builds the DDL SQL to alter a table based on a PropelTableDiff",2],["DefaultPlatform::getModifyTablePrimaryKeyDDL","DefaultPlatform","DefaultPlatform.html#method_getModifyTablePrimaryKeyDDL","(<a href=\"PropelTableDiff.html\"><abbr title=\"PropelTableDiff\">PropelTableDiff<\/abbr><\/a> $tableDiff)","Builds the DDL SQL to alter a table's primary key based",2],["DefaultPlatform::getModifyTableIndicesDDL","DefaultPlatform","DefaultPlatform.html#method_getModifyTableIndicesDDL","(<a href=\"PropelTableDiff.html\"><abbr title=\"PropelTableDiff\">PropelTableDiff<\/abbr><\/a> $tableDiff)","Builds the DDL SQL to alter a table's indices based",2],["DefaultPlatform::getModifyTableForeignKeysDDL","DefaultPlatform","DefaultPlatform.html#method_getModifyTableForeignKeysDDL","(<a href=\"PropelTableDiff.html\"><abbr title=\"PropelTableDiff\">PropelTableDiff<\/abbr><\/a> $tableDiff)","Builds the DDL SQL to alter a table's foreign keys",2],["DefaultPlatform::getRemoveColumnDDL","DefaultPlatform","DefaultPlatform.html#method_getRemoveColumnDDL","(<a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $column)","Builds the DDL SQL to remove a column",2],["DefaultPlatform::getRenameColumnDDL","DefaultPlatform","DefaultPlatform.html#method_getRenameColumnDDL","($fromColumn, $toColumn)","Builds the DDL SQL to rename a column",2],["DefaultPlatform::getModifyColumnDDL","DefaultPlatform","DefaultPlatform.html#method_getModifyColumnDDL","(<a href=\"PropelColumnDiff.html\"><abbr title=\"PropelColumnDiff\">PropelColumnDiff<\/abbr><\/a> $columnDiff)","Builds the DDL SQL to modify a column",2],["DefaultPlatform::getModifyColumnsDDL","DefaultPlatform","DefaultPlatform.html#method_getModifyColumnsDDL","($columnDiffs)","Builds the DDL SQL to modify a list of columns",2],["DefaultPlatform::getAddColumnDDL","DefaultPlatform","DefaultPlatform.html#method_getAddColumnDDL","(<a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $column)","Builds the DDL SQL to remove a column",2],["DefaultPlatform::getAddColumnsDDL","DefaultPlatform","DefaultPlatform.html#method_getAddColumnsDDL","($columns)","Builds the DDL SQL to remove a list of columns",2],["DefaultPlatform::hasSize","DefaultPlatform","DefaultPlatform.html#method_hasSize","(string $sqlType)","Returns if the RDBMS-specific SQL type has a size attribute.",2],["DefaultPlatform::hasScale","DefaultPlatform","DefaultPlatform.html#method_hasScale","(string $sqlType)","Returns if the RDBMS-specific SQL type has a scale",2],["DefaultPlatform::quote","DefaultPlatform","DefaultPlatform.html#method_quote","(string $text)","Quote and escape needed characters in the string for",2],["DefaultPlatform::quoteIdentifier","DefaultPlatform","DefaultPlatform.html#method_quoteIdentifier","(string $text)","Quotes identifiers used in database SQL.",2],["DefaultPlatform::setIdentifierQuoting","DefaultPlatform","DefaultPlatform.html#method_setIdentifierQuoting","($enabled = true)","",2],["DefaultPlatform::getIdentifierQuoting","DefaultPlatform","DefaultPlatform.html#method_getIdentifierQuoting","()","",2],["DefaultPlatform::supportsNativeDeleteTrigger","DefaultPlatform","DefaultPlatform.html#method_supportsNativeDeleteTrigger","()","Whether RDBMS supports native ON DELETE triggers (e.g.",2],["DefaultPlatform::supportsInsertNullPk","DefaultPlatform","DefaultPlatform.html#method_supportsInsertNullPk","()","Whether RDBMS supports INSERT null values in autoincremented",2],["DefaultPlatform::hasStreamBlobImpl","DefaultPlatform","DefaultPlatform.html#method_hasStreamBlobImpl","()","Whether the underlying PDO driver for this platform",2],["DefaultPlatform::supportsSchemas","DefaultPlatform","DefaultPlatform.html#method_supportsSchemas","()","",2],["DefaultPlatform::supportsMigrations","DefaultPlatform","DefaultPlatform.html#method_supportsMigrations","()","",2],["DefaultPlatform::supportsVarcharWithoutSize","DefaultPlatform","DefaultPlatform.html#method_supportsVarcharWithoutSize","()","Wether RDBMS supports VARCHAR without explicit size",2],["DefaultPlatform::getBooleanString","DefaultPlatform","DefaultPlatform.html#method_getBooleanString","($b)","Returns the boolean value for the RDBMS.",2],["DefaultPlatform::getPhpArrayString","DefaultPlatform","DefaultPlatform.html#method_getPhpArrayString","($stringValue)","",2],["DefaultPlatform::getTimestampFormatter","DefaultPlatform","DefaultPlatform.html#method_getTimestampFormatter","()","Gets the preferred timestamp formatter for setting",2],["DefaultPlatform::getTimeFormatter","DefaultPlatform","DefaultPlatform.html#method_getTimeFormatter","()","Gets the preferred time formatter for setting date\/time",2],["DefaultPlatform::getDateFormatter","DefaultPlatform","DefaultPlatform.html#method_getDateFormatter","()","Gets the preferred date formatter for setting date\/time",2],["DefaultPlatform::getColumnBindingPHP","DefaultPlatform","DefaultPlatform.html#method_getColumnBindingPHP","($column, $identifier, $columnValueAccessor, $tab = &#039;\t\t\t&#039;)","Get the PHP snippet for binding a value to a column.",2],["DefaultPlatform::getIdentifierPhp","DefaultPlatform","DefaultPlatform.html#method_getIdentifierPhp","($columnValueMutator, $connectionVariableName = &#039;$con&#039;, $sequenceName = &#039;&#039;, $tab = &#039;\t\t\t&#039;)","Get the PHP snippet for getting a Pk from the database.",2],["DefaultPlatform::getDefaultFKOnDeleteBehavior","DefaultPlatform","DefaultPlatform.html#method_getDefaultFKOnDeleteBehavior","()","",2],["DefaultPlatform::getDefaultFKOnUpdateBehavior","DefaultPlatform","DefaultPlatform.html#method_getDefaultFKOnUpdateBehavior","()","",2],["DelegateBehavior::modifyTable","DelegateBehavior","DelegateBehavior.html#method_modifyTable","()","Lists the delegates and checks that the behavior can",2],["DelegateBehavior::objectCall","DelegateBehavior","DelegateBehavior.html#method_objectCall","($builder)","",2],["Domain::__construct","Domain","Domain.html#method___construct","(string $type = null, string $sqlType = null, string $size = null, string $scale = null)","Creates a new Domain object.",2],["Domain::copy","Domain","Domain.html#method_copy","(<a href=\"Domain.html\"><abbr title=\"Domain\">Domain<\/abbr><\/a> $domain)","Copy the values from current object into passed-in",2],["Domain::setDatabase","Domain","Domain.html#method_setDatabase","(<a href=\"Database.html\"><abbr title=\"Database\">Database<\/abbr><\/a> $database)","Sets the owning database object (if this domain is",2],["Domain::getDatabase","Domain","Domain.html#method_getDatabase","()","Gets the owning database object (if this domain was",2],["Domain::getDescription","Domain","Domain.html#method_getDescription","()","",2],["Domain::setDescription","Domain","Domain.html#method_setDescription","(string $description)","",2],["Domain::getName","Domain","Domain.html#method_getName","()","",2],["Domain::setName","Domain","Domain.html#method_setName","(string $name)","",2],["Domain::getScale","Domain","Domain.html#method_getScale","()","",2],["Domain::setScale","Domain","Domain.html#method_setScale","(string $scale)","",2],["Domain::replaceScale","Domain","Domain.html#method_replaceScale","(string $value)","Replaces the size if the new value is not null.",2],["Domain::getSize","Domain","Domain.html#method_getSize","()","",2],["Domain::setSize","Domain","Domain.html#method_setSize","(int $size)","",2],["Domain::replaceSize","Domain","Domain.html#method_replaceSize","(int $value)","Replaces the size if the new value is not null.",2],["Domain::getType","Domain","Domain.html#method_getType","()","",2],["Domain::setType","Domain","Domain.html#method_setType","(string $propelType)","",2],["Domain::replaceType","Domain","Domain.html#method_replaceType","(string $value)","Replaces the type if the new value is not null.",2],["Domain::getDefaultValue","Domain","Domain.html#method_getDefaultValue","()","Gets the default value object.",2],["Domain::getPhpDefaultValue","Domain","Domain.html#method_getPhpDefaultValue","()","Gets the default value, type-casted for use in PHP",2],["Domain::setDefaultValue","Domain","Domain.html#method_setDefaultValue","(<a href=\"ColumnDefaultValue.html\"><abbr title=\"ColumnDefaultValue\">ColumnDefaultValue<\/abbr><\/a> $value)","",2],["Domain::replaceDefaultValue","Domain","Domain.html#method_replaceDefaultValue","(<a href=\"ColumnDefaultValue.html\"><abbr title=\"ColumnDefaultValue\">ColumnDefaultValue<\/abbr><\/a> $value = null)","Replaces the default value if the new value is not",2],["Domain::getSqlType","Domain","Domain.html#method_getSqlType","()","",2],["Domain::setSqlType","Domain","Domain.html#method_setSqlType","(string $sqlType)","",2],["Domain::replaceSqlType","Domain","Domain.html#method_replaceSqlType","(string $sqlType)","Replaces the SQL type if the new value is not null.",2],["Domain::printSize","Domain","Domain.html#method_printSize","()","Return the size and scale in brackets for use in an",2],["Domain::appendXml","Domain","Domain.html#method_appendXml","(<a href=\"http:\/\/php.net\/DOMNode\"><abbr title=\"DOMNode\">DOMNode<\/abbr><\/a> $node)","",2],["ExtensionQueryBuilder::getUnprefixedClassname","ExtensionQueryBuilder","ExtensionQueryBuilder.html#method_getUnprefixedClassname","()","Returns the name of the current class being built.",2],["ExtensionQueryBuilder::hasBehaviorModifier","ExtensionQueryBuilder","ExtensionQueryBuilder.html#method_hasBehaviorModifier","(string $hookName, string $modifier = null)","Checks whether any registered behavior on that table",2],["ExtensionQueryBuilder::applyBehaviorModifier","ExtensionQueryBuilder","ExtensionQueryBuilder.html#method_applyBehaviorModifier","(string $hookName, string $script, string $tab = &#039;\t\t&#039;)","Checks whether any registered behavior on that table",2],["ExtensionQueryBuilder::getBehaviorContent","ExtensionQueryBuilder","ExtensionQueryBuilder.html#method_getBehaviorContent","(string $contentName)","Checks whether any registered behavior content creator",2],["ExtensionQueryInheritanceBuilder::getUnprefixedClassname","ExtensionQueryInheritanceBuilder","ExtensionQueryInheritanceBuilder.html#method_getUnprefixedClassname","()","Returns the name of the current class being built.",2],["ExtensionQueryInheritanceBuilder::getPackage","ExtensionQueryInheritanceBuilder","ExtensionQueryInheritanceBuilder.html#method_getPackage","()","Gets the package for the [base] object classes.",2],["ExtensionQueryInheritanceBuilder::setChild","ExtensionQueryInheritanceBuilder","ExtensionQueryInheritanceBuilder.html#method_setChild","(<a href=\"Inheritance.html\"><abbr title=\"Inheritance\">Inheritance<\/abbr><\/a> $child)","Set the child object that we're operating on currently.",2],["ExtensionQueryInheritanceBuilder::getChild","ExtensionQueryInheritanceBuilder","ExtensionQueryInheritanceBuilder.html#method_getChild","()","Returns the child object we're operating on currently.",2],["ForeignKey::__construct","ForeignKey","ForeignKey.html#method___construct","(string $name = null)","Constructs a new ForeignKey object.",2],["ForeignKey::normalizeFKey","ForeignKey","ForeignKey.html#method_normalizeFKey","($attrib)","normalizes the input of onDelete, onUpdate attributes",2],["ForeignKey::hasOnUpdate","ForeignKey","ForeignKey.html#method_hasOnUpdate","()","returns whether or not the onUpdate attribute is set",2],["ForeignKey::hasOnDelete","ForeignKey","ForeignKey.html#method_hasOnDelete","()","returns whether or not the onDelete attribute is set",2],["ForeignKey::getOnUpdate","ForeignKey","ForeignKey.html#method_getOnUpdate","()","returns the onUpdate attribute",2],["ForeignKey::getOnDelete","ForeignKey","ForeignKey.html#method_getOnDelete","()","Returns the onDelete attribute",2],["ForeignKey::setOnDelete","ForeignKey","ForeignKey.html#method_setOnDelete","($value)","sets the onDelete attribute",2],["ForeignKey::setOnUpdate","ForeignKey","ForeignKey.html#method_setOnUpdate","($value)","sets the onUpdate attribute",2],["ForeignKey::getName","ForeignKey","ForeignKey.html#method_getName","()","Returns the name attribute.",2],["ForeignKey::setName","ForeignKey","ForeignKey.html#method_setName","($name)","Sets the name attribute.",2],["ForeignKey::getPhpName","ForeignKey","ForeignKey.html#method_getPhpName","()","Gets the phpName for this foreign key (if any).",2],["ForeignKey::setPhpName","ForeignKey","ForeignKey.html#method_setPhpName","(string $name)","Sets a phpName to use for this foreign key.",2],["ForeignKey::getRefPhpName","ForeignKey","ForeignKey.html#method_getRefPhpName","()","Gets the refPhpName for this foreign key (if any).",2],["ForeignKey::setRefPhpName","ForeignKey","ForeignKey.html#method_setRefPhpName","(string $name)","Sets a refPhpName to use for this foreign key.",2],["ForeignKey::getDefaultJoin","ForeignKey","ForeignKey.html#method_getDefaultJoin","()","Gets the defaultJoin for this foreign key (if any).",2],["ForeignKey::setDefaultJoin","ForeignKey","ForeignKey.html#method_setDefaultJoin","($defaultJoin)","Sets a defaultJoin to use for this foreign key.",2],["ForeignKey::getForeignTableName","ForeignKey","ForeignKey.html#method_getForeignTableName","()","Get the foreignTableName of the FK",2],["ForeignKey::getForeignTableCommonName","ForeignKey","ForeignKey.html#method_getForeignTableCommonName","()","Get the foreign table name without schema",2],["ForeignKey::setForeignTableCommonName","ForeignKey","ForeignKey.html#method_setForeignTableCommonName","($tableName)","Set the foreignTableCommonName of the FK",2],["ForeignKey::getForeignTable","ForeignKey","ForeignKey.html#method_getForeignTable","()","Gets the resolved foreign Table model object.",2],["ForeignKey::getForeignSchemaName","ForeignKey","ForeignKey.html#method_getForeignSchemaName","()","Get the foreignSchemaName of the FK",2],["ForeignKey::setForeignSchemaName","ForeignKey","ForeignKey.html#method_setForeignSchemaName","($schemaName)","Set the foreignSchemaName of the FK",2],["ForeignKey::setTable","ForeignKey","ForeignKey.html#method_setTable","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $parent)","Set the parent Table of the foreign key",2],["ForeignKey::getTable","ForeignKey","ForeignKey.html#method_getTable","()","Get the parent Table of the foreign key",2],["ForeignKey::getTableName","ForeignKey","ForeignKey.html#method_getTableName","()","Returns the Name of the table the foreign key is in",2],["ForeignKey::getSchemaName","ForeignKey","ForeignKey.html#method_getSchemaName","()","Returns the Name of the schema the foreign key is in",2],["ForeignKey::addReference","ForeignKey","ForeignKey.html#method_addReference","($p1, $p2 = null)","Adds a new reference entry to the foreign key.",2],["ForeignKey::clearReferences","ForeignKey","ForeignKey.html#method_clearReferences","()","Clear the references of this foreign key",2],["ForeignKey::getLocalColumnNames","ForeignKey","ForeignKey.html#method_getLocalColumnNames","()","Return a comma delimited string of local column names",2],["ForeignKey::getForeignColumnNames","ForeignKey","ForeignKey.html#method_getForeignColumnNames","()","Return a comma delimited string of foreign column names",2],["ForeignKey::getLocalColumns","ForeignKey","ForeignKey.html#method_getLocalColumns","()","Return an array of local column names.",2],["ForeignKey::getLocalColumnObjects","ForeignKey","ForeignKey.html#method_getLocalColumnObjects","()","Return an array of local column objects.",2],["ForeignKey::getLocalColumnName","ForeignKey","ForeignKey.html#method_getLocalColumnName","($index)","Return a local column name.",2],["ForeignKey::getLocalColumn","ForeignKey","ForeignKey.html#method_getLocalColumn","($index)","Return a local column object.",2],["ForeignKey::getLocalForeignMapping","ForeignKey","ForeignKey.html#method_getLocalForeignMapping","()","Utility method to get local column to foreign column",2],["ForeignKey::getForeignLocalMapping","ForeignKey","ForeignKey.html#method_getForeignLocalMapping","()","Utility method to get local column to foreign column",2],["ForeignKey::getColumnObjectsMapping","ForeignKey","ForeignKey.html#method_getColumnObjectsMapping","()","Utility method to get local and foreign column objects",2],["ForeignKey::getMappedForeignColumn","ForeignKey","ForeignKey.html#method_getMappedForeignColumn","($local)","Get the foreign column mapped to specified local column.",2],["ForeignKey::getMappedLocalColumn","ForeignKey","ForeignKey.html#method_getMappedLocalColumn","($foreign)","Get the local column mapped to specified foreign column.",2],["ForeignKey::getForeignColumns","ForeignKey","ForeignKey.html#method_getForeignColumns","()","Return an array of foreign column names.",2],["ForeignKey::getForeignColumnObjects","ForeignKey","ForeignKey.html#method_getForeignColumnObjects","()","Return an array of foreign column objects.",2],["ForeignKey::getForeignColumnName","ForeignKey","ForeignKey.html#method_getForeignColumnName","($index)","Return a foreign column name.",2],["ForeignKey::getForeignColumn","ForeignKey","ForeignKey.html#method_getForeignColumn","($index)","Return a foreign column object.",2],["ForeignKey::isLocalColumnsRequired","ForeignKey","ForeignKey.html#method_isLocalColumnsRequired","()","Whether this foreign key uses a required column, or",2],["ForeignKey::isForeignPrimaryKey","ForeignKey","ForeignKey.html#method_isForeignPrimaryKey","()","Whether this foreign key is also the primary key of",2],["ForeignKey::isAtLeastOneForeignPrimaryKey","ForeignKey","ForeignKey.html#method_isAtLeastOneForeignPrimaryKey","()","Whether at least one foreign column is also the primary",2],["ForeignKey::getForeignPrimaryKeys","ForeignKey","ForeignKey.html#method_getForeignPrimaryKeys","()","Returns all foreign columns which are also a primary",2],["ForeignKey::isComposite","ForeignKey","ForeignKey.html#method_isComposite","()","Whether this foreign key relies on more than one column",2],["ForeignKey::isLocalPrimaryKey","ForeignKey","ForeignKey.html#method_isLocalPrimaryKey","()","Whether this foreign key is also the primary key of",2],["ForeignKey::isAtLeastOneLocalPrimaryKey","ForeignKey","ForeignKey.html#method_isAtLeastOneLocalPrimaryKey","()","Whether at least one local column is also a primary",2],["ForeignKey::setSkipSql","ForeignKey","ForeignKey.html#method_setSkipSql","(boolean $v)","Set whether this foreign key should have its creation",2],["ForeignKey::isSkipSql","ForeignKey","ForeignKey.html#method_isSkipSql","()","Skip generating sql for this foreign key.",2],["ForeignKey::isMatchedByInverseFK","ForeignKey","ForeignKey.html#method_isMatchedByInverseFK","()","Whether this foreign key is matched by an inverse foreign",2],["ForeignKey::getInverseFK","ForeignKey","ForeignKey.html#method_getInverseFK","()","",2],["ForeignKey::getOtherFks","ForeignKey","ForeignKey.html#method_getOtherFks","()","Get the other foreign keys starting on the same table",2],["ForeignKey::appendXml","ForeignKey","ForeignKey.html#method_appendXml","(<a href=\"http:\/\/php.net\/DOMNode\"><abbr title=\"DOMNode\">DOMNode<\/abbr><\/a> $node)","",2],["GeneratorConfig::__construct","GeneratorConfig","GeneratorConfig.html#method___construct","(mixed $props = null)","Construct a new GeneratorConfig.",2],["GeneratorConfig::getBuildProperties","GeneratorConfig","GeneratorConfig.html#method_getBuildProperties","()","Gets the build properties.",2],["GeneratorConfig::setBuildProperties","GeneratorConfig","GeneratorConfig.html#method_setBuildProperties","(mixed $props)","Parses the passed-in properties, renaming and saving",2],["GeneratorConfig::getBuildProperty","GeneratorConfig","GeneratorConfig.html#method_getBuildProperty","(string $name)","Gets a specific propel (renamed) property from the",2],["GeneratorConfig::setBuildProperty","GeneratorConfig","GeneratorConfig.html#method_setBuildProperty","(string $name, mixed $value)","Sets a specific propel (renamed) property from the",2],["GeneratorConfig::getClassname","GeneratorConfig","GeneratorConfig.html#method_getClassname","(string $propname)","Resolves and returns the class name based on the specified",2],["GeneratorConfig::getBuilderClassname","GeneratorConfig","GeneratorConfig.html#method_getBuilderClassname","(string $type)","Resolves and returns the builder class name.",2],["GeneratorConfig::getConfiguredPlatform","GeneratorConfig","GeneratorConfig.html#method_getConfiguredPlatform","(<a href=\"http:\/\/php.net\/PDO\"><abbr title=\"PDO\">PDO<\/abbr><\/a> $con = null, $database = null)","Creates and configures a new Platform class.",2],["GeneratorConfig::getConfiguredSchemaParser","GeneratorConfig","GeneratorConfig.html#method_getConfiguredSchemaParser","(<a href=\"http:\/\/php.net\/PDO\"><abbr title=\"PDO\">PDO<\/abbr><\/a> $con = null)","Creates and configures a new SchemaParser class for",2],["GeneratorConfig::getConfiguredBuilder","GeneratorConfig","GeneratorConfig.html#method_getConfiguredBuilder","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table, string $type, $cache = true)","Gets a configured data model builder class for specified",2],["GeneratorConfig::getConfiguredPluralizer","GeneratorConfig","GeneratorConfig.html#method_getConfiguredPluralizer","()","Gets a configured Pluralizer class.",2],["GeneratorConfig::getConfiguredBehavior","GeneratorConfig","GeneratorConfig.html#method_getConfiguredBehavior","(string $name)","Gets a configured behavior class",2],["GeneratorConfig::setBuildConnections","GeneratorConfig","GeneratorConfig.html#method_setBuildConnections","($buildConnections)","",2],["GeneratorConfig::getBuildConnections","GeneratorConfig","GeneratorConfig.html#method_getBuildConnections","()","",2],["GeneratorConfig::getBuildConnection","GeneratorConfig","GeneratorConfig.html#method_getBuildConnection","($databaseName = null)","",2],["GeneratorConfig::getBuildPDO","GeneratorConfig","GeneratorConfig.html#method_getBuildPDO","($database)","",2],["GeneratorConfigInterface::getConfiguredBuilder","GeneratorConfigInterface","GeneratorConfigInterface.html#method_getConfiguredBuilder","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table, string $type)","Gets a configured data model builder class for specified",2],["GeneratorConfigInterface::getConfiguredPluralizer","GeneratorConfigInterface","GeneratorConfigInterface.html#method_getConfiguredPluralizer","()","Gets a configured Pluralizer class.",2],["GeneratorConfigInterface::getBuildProperty","GeneratorConfigInterface","GeneratorConfigInterface.html#method_getBuildProperty","(string $name)","Gets a specific propel (renamed) property from the",2],["GeneratorConfigInterface::setBuildProperty","GeneratorConfigInterface","GeneratorConfigInterface.html#method_setBuildProperty","(string $name, mixed $value)","Sets a specific propel (renamed) property from the",2],["GeneratorConfigInterface::getConfiguredPlatform","GeneratorConfigInterface","GeneratorConfigInterface.html#method_getConfiguredPlatform","(<a href=\"http:\/\/php.net\/PDO\"><abbr title=\"PDO\">PDO<\/abbr><\/a> $con = null, $database = null)","Creates and configures a new Platform class.",2],["GeneratorConfigInterface::getConfiguredBehavior","GeneratorConfigInterface","GeneratorConfigInterface.html#method_getConfiguredBehavior","($name)","Gets a configured behavior class",2],["I18nBehavior::modifyDatabase","I18nBehavior","I18nBehavior.html#method_modifyDatabase","()","This method is automatically called on database behaviors",2],["I18nBehavior::modifyTable","I18nBehavior","I18nBehavior.html#method_modifyTable","()","This method is automatically called on table behaviors",2],["I18nBehavior::getDefaultLocale","I18nBehavior","I18nBehavior.html#method_getDefaultLocale","()","",2],["I18nBehavior::getI18nTable","I18nBehavior","I18nBehavior.html#method_getI18nTable","()","",2],["I18nBehavior::getI18nForeignKey","I18nBehavior","I18nBehavior.html#method_getI18nForeignKey","()","",2],["I18nBehavior::getLocaleColumn","I18nBehavior","I18nBehavior.html#method_getLocaleColumn","()","",2],["I18nBehavior::getI18nColumns","I18nBehavior","I18nBehavior.html#method_getI18nColumns","()","",2],["I18nBehavior::replaceTokens","I18nBehavior","I18nBehavior.html#method_replaceTokens","($string)","",2],["I18nBehavior::getObjectBuilderModifier","I18nBehavior","I18nBehavior.html#method_getObjectBuilderModifier","()","",2],["I18nBehavior::getQueryBuilderModifier","I18nBehavior","I18nBehavior.html#method_getQueryBuilderModifier","()","",2],["I18nBehavior::getPeerBuilderModifier","I18nBehavior","I18nBehavior.html#method_getPeerBuilderModifier","()","",2],["I18nBehaviorObjectBuilderModifier::__construct","I18nBehaviorObjectBuilderModifier","I18nBehaviorObjectBuilderModifier.html#method___construct","($behavior)","",2],["I18nBehaviorObjectBuilderModifier::postDelete","I18nBehaviorObjectBuilderModifier","I18nBehaviorObjectBuilderModifier.html#method_postDelete","($builder)","",2],["I18nBehaviorObjectBuilderModifier::objectAttributes","I18nBehaviorObjectBuilderModifier","I18nBehaviorObjectBuilderModifier.html#method_objectAttributes","($builder)","",2],["I18nBehaviorObjectBuilderModifier::objectClearReferences","I18nBehaviorObjectBuilderModifier","I18nBehaviorObjectBuilderModifier.html#method_objectClearReferences","($builder)","",2],["I18nBehaviorObjectBuilderModifier::objectMethods","I18nBehaviorObjectBuilderModifier","I18nBehaviorObjectBuilderModifier.html#method_objectMethods","($builder)","",2],["I18nBehaviorObjectBuilderModifier::objectFilter","I18nBehaviorObjectBuilderModifier","I18nBehaviorObjectBuilderModifier.html#method_objectFilter","($script, $builder)","",2],["I18nBehaviorPeerBuilderModifier::__construct","I18nBehaviorPeerBuilderModifier","I18nBehaviorPeerBuilderModifier.html#method___construct","($behavior)","",2],["I18nBehaviorPeerBuilderModifier::staticConstants","I18nBehaviorPeerBuilderModifier","I18nBehaviorPeerBuilderModifier.html#method_staticConstants","()","",2],["I18nBehaviorQueryBuilderModifier::__construct","I18nBehaviorQueryBuilderModifier","I18nBehaviorQueryBuilderModifier.html#method___construct","($behavior)","",2],["I18nBehaviorQueryBuilderModifier::queryMethods","I18nBehaviorQueryBuilderModifier","I18nBehaviorQueryBuilderModifier.html#method_queryMethods","($builder)","",2],["IdMethodParameter::getName","IdMethodParameter","IdMethodParameter.html#method_getName","()","Get the parameter name",2],["IdMethodParameter::setName","IdMethodParameter","IdMethodParameter.html#method_setName","($name)","Set the parameter name",2],["IdMethodParameter::getValue","IdMethodParameter","IdMethodParameter.html#method_getValue","()","Get the parameter value",2],["IdMethodParameter::setValue","IdMethodParameter","IdMethodParameter.html#method_setValue","($value)","Set the parameter value",2],["IdMethodParameter::setTable","IdMethodParameter","IdMethodParameter.html#method_setTable","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $parent)","Set the parent Table of the id method",2],["IdMethodParameter::getTable","IdMethodParameter","IdMethodParameter.html#method_getTable","()","Get the parent Table of the id method",2],["IdMethodParameter::getTableName","IdMethodParameter","IdMethodParameter.html#method_getTableName","()","Returns the Name of the table the id method is in",2],["IdMethodParameter::appendXml","IdMethodParameter","IdMethodParameter.html#method_appendXml","(<a href=\"http:\/\/php.net\/DOMNode\"><abbr title=\"DOMNode\">DOMNode<\/abbr><\/a> $node)","",2],["Index::__construct","Index","Index.html#method___construct","(string $name = null)","Creates a new Index instance.",2],["Index::getIsUnique","Index","Index.html#method_getIsUnique","()","",2],["Index::isUnique","Index","Index.html#method_isUnique","()","Returns the uniqueness of this index.",2],["Index::getIndexName","Index","Index.html#method_getIndexName","()","",2],["Index::getName","Index","Index.html#method_getName","()","Gets the name of this index.",2],["Index::setIndexName","Index","Index.html#method_setIndexName","($name)","",2],["Index::setName","Index","Index.html#method_setName","($name)","Set the name of this index.",2],["Index::setTable","Index","Index.html#method_setTable","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $parent)","Set the parent Table of the index",2],["Index::getTable","Index","Index.html#method_getTable","()","Get the parent Table of the index",2],["Index::getTableName","Index","Index.html#method_getTableName","()","Returns the Name of the table the index is in",2],["Index::addColumn","Index","Index.html#method_addColumn","(mixed $data)","Adds a new column to an index.",2],["Index::setColumns","Index","Index.html#method_setColumns","(array $indexColumns)","Sets array of columns to use for index.",2],["Index::hasColumnSize","Index","Index.html#method_hasColumnSize","(string $name)","Whether there is a size for the specified column.",2],["Index::getColumnSize","Index","Index.html#method_getColumnSize","(string $name)","Returns the size for the specified column, if given.",2],["Index::resetColumnSize","Index","Index.html#method_resetColumnSize","()","Reset the column sizes.",2],["Index::getIndexColumnList","Index","Index.html#method_getIndexColumnList","()","",2],["Index::getColumnList","Index","Index.html#method_getColumnList","()","Return a comma delimited string of the columns which",2],["Index::getIndexColumns","Index","Index.html#method_getIndexColumns","()","",2],["Index::hasColumnAtPosition","Index","Index.html#method_hasColumnAtPosition","(integer $pos, string $name, integer $size = null, boolean $caseInsensitive = false)","Check whether this index has a given column at a given",2],["Index::hasColumns","Index","Index.html#method_hasColumns","()","Check whether the index has columns.",2],["Index::getColumns","Index","Index.html#method_getColumns","()","Return the list of local columns.",2],["Index::appendXml","Index","Index.html#method_appendXml","(<a href=\"http:\/\/php.net\/DOMNode\"><abbr title=\"DOMNode\">DOMNode<\/abbr><\/a> $node)","",2],["Inheritance::getKey","Inheritance","Inheritance.html#method_getKey","()","Get the value of key.",2],["Inheritance::setKey","Inheritance","Inheritance.html#method_setKey","(<abbr title=\"$v\">$v<\/abbr> $v)","Set the value of key.",2],["Inheritance::getColumn","Inheritance","Inheritance.html#method_getColumn","()","Get the value of parent.",2],["Inheritance::setColumn","Inheritance","Inheritance.html#method_setColumn","(<a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $v)","Set the value of parent.",2],["Inheritance::getClassName","Inheritance","Inheritance.html#method_getClassName","()","Get the value of className.",2],["Inheritance::setClassName","Inheritance","Inheritance.html#method_setClassName","(string $v)","Set the value of className.",2],["Inheritance::getPackage","Inheritance","Inheritance.html#method_getPackage","()","Get the value of package.",2],["Inheritance::setPackage","Inheritance","Inheritance.html#method_setPackage","(string $v)","Set the value of package.",2],["Inheritance::getAncestor","Inheritance","Inheritance.html#method_getAncestor","()","Get the value of ancestor.",2],["Inheritance::setAncestor","Inheritance","Inheritance.html#method_setAncestor","(string $v)","Set the value of ancestor.",2],["Inheritance::appendXml","Inheritance","Inheritance.html#method_appendXml","(<a href=\"http:\/\/php.net\/DOMNode\"><abbr title=\"DOMNode\">DOMNode<\/abbr><\/a> $node)","",2],["Join::__construct","Join","Join.html#method___construct","(string $leftColumn = null, string $rightColumn = null, string $joinType = null)","Constructor Use it preferably with no arguments, and",2],["Join::addCondition","Join","Join.html#method_addCondition","(string $left, string $right, string $operator = self::EQUAL)","Join condition definition.",2],["Join::addConditions","Join","Join.html#method_addConditions","(array $lefts, array $rights, array $operators = array())","Join condition definition, for several conditions",2],["Join::addExplicitCondition","Join","Join.html#method_addExplicitCondition","(string $leftTableName, string $leftColumnName, string $leftTableAlias, string $rightTableName, string $rightColumnName, string $rightTableAlias = null, string $operator = self::EQUAL)","Join condition definition.",2],["Join::countConditions","Join","Join.html#method_countConditions","()","Retrieve the number of conditions in the join",2],["Join::getConditions","Join","Join.html#method_getConditions","()","Return an array of the join conditions",2],["Join::addOperator","Join","Join.html#method_addOperator","(string $operator = null)","",2],["Join::getOperator","Join","Join.html#method_getOperator","(int $index)","",2],["Join::getOperators","Join","Join.html#method_getOperators","()","",2],["Join::setJoinType","Join","Join.html#method_setJoinType","(string $joinType = null)","Set the join type",2],["Join::getJoinType","Join","Join.html#method_getJoinType","()","Get the join type",2],["Join::addLeftColumnName","Join","Join.html#method_addLeftColumnName","(string $left)","Add a left column name to the join condition",2],["Join::getLeftColumn","Join","Join.html#method_getLeftColumn","(integer $index)","Get the fully qualified name of the left column of",2],["Join::getLeftColumnName","Join","Join.html#method_getLeftColumnName","(integer $index)","Get the left column name of the join condition",2],["Join::getLeftColumns","Join","Join.html#method_getLeftColumns","()","Get the list of all the names of left columns of the",2],["Join::setLeftTableName","Join","Join.html#method_setLeftTableName","($leftTableName)","",2],["Join::getLeftTableName","Join","Join.html#method_getLeftTableName","()","",2],["Join::setLeftTableAlias","Join","Join.html#method_setLeftTableAlias","($leftTableAlias)","",2],["Join::getLeftTableAlias","Join","Join.html#method_getLeftTableAlias","()","",2],["Join::hasLeftTableAlias","Join","Join.html#method_hasLeftTableAlias","()","",2],["Join::getLeftTableAliasOrName","Join","Join.html#method_getLeftTableAliasOrName","()","",2],["Join::getLeftTableWithAlias","Join","Join.html#method_getLeftTableWithAlias","()","",2],["Join::addRightColumnName","Join","Join.html#method_addRightColumnName","(string $right)","Add a right column name to the join condition",2],["Join::getRightColumn","Join","Join.html#method_getRightColumn","(integer $index)","Get the fully qualified name of the right column of",2],["Join::getRightColumnName","Join","Join.html#method_getRightColumnName","(integer $index)","Get the right column name of the join condition",2],["Join::getRightColumns","Join","Join.html#method_getRightColumns","()","",2],["Join::setRightTableName","Join","Join.html#method_setRightTableName","($rightTableName)","",2],["Join::getRightTableName","Join","Join.html#method_getRightTableName","()","",2],["Join::setRightTableAlias","Join","Join.html#method_setRightTableAlias","($rightTableAlias)","",2],["Join::getRightTableAlias","Join","Join.html#method_getRightTableAlias","()","",2],["Join::hasRightTableAlias","Join","Join.html#method_hasRightTableAlias","()","",2],["Join::getRightTableAliasOrName","Join","Join.html#method_getRightTableAliasOrName","()","",2],["Join::getRightTableWithAlias","Join","Join.html#method_getRightTableWithAlias","()","",2],["Join::getDB","Join","Join.html#method_getDB","()","Get the value of db.",2],["Join::setDB","Join","Join.html#method_setDB","(<a href=\"DBAdapter.html\"><abbr title=\"DBAdapter\">DBAdapter<\/abbr><\/a> $db)","Set the value of db.",2],["Join::setJoinCondition","Join","Join.html#method_setJoinCondition","(<a href=\"Criterion.html\"><abbr title=\"Criterion\">Criterion<\/abbr><\/a> $joinCondition)","Set a custom join condition",2],["Join::getJoinCondition","Join","Join.html#method_getJoinCondition","()","Get the custom join condition, if previously set",2],["Join::buildJoinCondition","Join","Join.html#method_buildJoinCondition","(<a href=\"Criteria.html\"><abbr title=\"Criteria\">Criteria<\/abbr><\/a> $c)","Set the custom join condition Criterion based on the",2],["Join::getClause","Join","Join.html#method_getClause","(array $params)","Get the join clause for this Join.",2],["Join::equals","Join","Join.html#method_equals","(<a href=\"Join.html\"><abbr title=\"Join\">Join<\/abbr><\/a> $join)","",2],["Join::toString","Join","Join.html#method_toString","()","Returns a String representation of the class,",2],["Join::__toString","Join","Join.html#method___toString","()","",2],["MatchValidator::isValid","MatchValidator","MatchValidator.html#method_isValid","(<a href=\"ValidatorMap.html\"><abbr title=\"ValidatorMap\">ValidatorMap<\/abbr><\/a> $map, string $str)","Whether the passed string matches regular expression.",2],["MaxLengthValidator::isValid","MaxLengthValidator","MaxLengthValidator.html#method_isValid","(<a href=\"ValidatorMap.html\"><abbr title=\"ValidatorMap\">ValidatorMap<\/abbr><\/a> $map, string $str)","",2],["MaxValueValidator::isValid","MaxValueValidator","MaxValueValidator.html#method_isValid","(<a href=\"ValidatorMap.html\"><abbr title=\"ValidatorMap\">ValidatorMap<\/abbr><\/a> $map, mixed $value)","",2],["MinLengthValidator::isValid","MinLengthValidator","MinLengthValidator.html#method_isValid","(<a href=\"ValidatorMap.html\"><abbr title=\"ValidatorMap\">ValidatorMap<\/abbr><\/a> $map, string $str)","",2],["MinValueValidator::isValid","MinValueValidator","MinValueValidator.html#method_isValid","(<a href=\"ValidatorMap.html\"><abbr title=\"ValidatorMap\">ValidatorMap<\/abbr><\/a> $map, mixed $value)","",2],["ModelCriteria::__construct","ModelCriteria","ModelCriteria.html#method___construct","(string $dbName, string $modelName, string $modelAlias = null)","Creates a new instance with the default capacity which",2],["ModelCriteria::getModelName","ModelCriteria","ModelCriteria.html#method_getModelName","()","Returns the name of the class for this model criteria",2],["ModelCriteria::setModelAlias","ModelCriteria","ModelCriteria.html#method_setModelAlias","(string $modelAlias, boolean $useAliasInSQL = false)","Sets the alias for the model in this query",2],["ModelCriteria::getModelAlias","ModelCriteria","ModelCriteria.html#method_getModelAlias","()","Returns the alias of the main class for this model",2],["ModelCriteria::getModelAliasOrName","ModelCriteria","ModelCriteria.html#method_getModelAliasOrName","()","Return the string to use in a clause as a model prefix",2],["ModelCriteria::getModelPeerName","ModelCriteria","ModelCriteria.html#method_getModelPeerName","()","Returns the name of the Peer class for this model criteria",2],["ModelCriteria::getTableMap","ModelCriteria","ModelCriteria.html#method_getTableMap","()","Returns the TableMap object for this Criteria",2],["ModelCriteria::setFormatter","ModelCriteria","ModelCriteria.html#method_setFormatter","(string|<a href=\"PropelFormatter.html\"><abbr title=\"PropelFormatter\">PropelFormatter<\/abbr><\/a> $formatter)","Sets the formatter to use for the find() output Formatters",2],["ModelCriteria::getFormatter","ModelCriteria","ModelCriteria.html#method_getFormatter","()","Gets the formatter to use for the find() output Defaults",2],["ModelCriteria::condition","ModelCriteria","ModelCriteria.html#method_condition","(string $conditionName, string $clause, mixed $value = null, mixed $bindingType = null)","Adds a condition on a column based on a pseudo SQL",2],["ModelCriteria::filterBy","ModelCriteria","ModelCriteria.html#method_filterBy","(string $column, mixed $value, string $comparison = Criteria::EQUAL)","Adds a condition on a column based on a column phpName",2],["ModelCriteria::filterByArray","ModelCriteria","ModelCriteria.html#method_filterByArray","(mixed $conditions)","Adds a list of conditions on the columns of the current",2],["ModelCriteria::where","ModelCriteria","ModelCriteria.html#method_where","(mixed $clause, mixed $value = null, string $bindingType = null)","Adds a condition on a column based on a pseudo SQL",2],["ModelCriteria::orWhere","ModelCriteria","ModelCriteria.html#method_orWhere","(string $clause, mixed $value = null, string $bindingType = null)","Adds a condition on a column based on a pseudo SQL",2],["ModelCriteria::having","ModelCriteria","ModelCriteria.html#method_having","(mixed $clause, mixed $value = null, string $bindingType = null)","Adds a having condition on a column based on a pseudo",2],["ModelCriteria::orderBy","ModelCriteria","ModelCriteria.html#method_orderBy","(string $columnName, string $order = Criteria::ASC)","Adds an ORDER BY clause to the query Usability layer",2],["ModelCriteria::groupBy","ModelCriteria","ModelCriteria.html#method_groupBy","(string $columnName)","Adds a GROUB BY clause to the query Usability layer",2],["ModelCriteria::groupByClass","ModelCriteria","ModelCriteria.html#method_groupByClass","(string $class)","Adds a GROUB BY clause for all columns of a model to",2],["ModelCriteria::distinct","ModelCriteria","ModelCriteria.html#method_distinct","()","Adds a DISTINCT clause to the query Alias for Criteria::setDistinct()",2],["ModelCriteria::limit","ModelCriteria","ModelCriteria.html#method_limit","(int $limit)","Adds a LIMIT clause (or its subselect equivalent) to",2],["ModelCriteria::offset","ModelCriteria","ModelCriteria.html#method_offset","(int $offset)","Adds an OFFSET clause (or its subselect equivalent)",2],["ModelCriteria::select","ModelCriteria","ModelCriteria.html#method_select","(mixed $columnArray)","Makes the ModelCriteria return a string, array, or",2],["ModelCriteria::getSelect","ModelCriteria","ModelCriteria.html#method_getSelect","()","Retrieves the columns defined by a previous call to",2],["ModelCriteria::getPreviousJoin","ModelCriteria","ModelCriteria.html#method_getPreviousJoin","()","This method returns the previousJoin for this ModelCriteria,",2],["ModelCriteria::setPreviousJoin","ModelCriteria","ModelCriteria.html#method_setPreviousJoin","(<a href=\"Join.html\"><abbr title=\"Join\">Join<\/abbr><\/a> $previousJoin)","This method sets the previousJoin for this ModelCriteria,",2],["ModelCriteria::getJoin","ModelCriteria","ModelCriteria.html#method_getJoin","(string $name)","This method returns an already defined join clause",2],["ModelCriteria::join","ModelCriteria","ModelCriteria.html#method_join","(string $relation, string $joinType = Criteria::INNER_JOIN)","Adds a JOIN clause to the query Infers the ON clause",2],["ModelCriteria::addJoinCondition","ModelCriteria","ModelCriteria.html#method_addJoinCondition","(string $name, string $clause, mixed $value = null, string $operator = null, string $bindingType = null)","Add another condition to an already added join",2],["ModelCriteria::setJoinCondition","ModelCriteria","ModelCriteria.html#method_setJoinCondition","(string $name, mixed $condition)","Replace the condition of an already added join",2],["ModelCriteria::addJoinObject","ModelCriteria","ModelCriteria.html#method_addJoinObject","(<a href=\"Join.html\"><abbr title=\"Join\">Join<\/abbr><\/a> $join, string $name = null)","Add a join object to the Criteria",2],["ModelCriteria::joinWith","ModelCriteria","ModelCriteria.html#method_joinWith","(string $relation, string $joinType = Criteria::INNER_JOIN)","Adds a JOIN clause to the query and hydrates the related",2],["ModelCriteria::with","ModelCriteria","ModelCriteria.html#method_with","(string $relation)","Adds a relation to hydrate together with the main object",2],["ModelCriteria::getWith","ModelCriteria","ModelCriteria.html#method_getWith","()","Gets the array of ModelWith specifying which objects",2],["ModelCriteria::setWith","ModelCriteria","ModelCriteria.html#method_setWith","(array $with)","Sets the array of ModelWith specifying which objects",2],["ModelCriteria::isWithOneToMany","ModelCriteria","ModelCriteria.html#method_isWithOneToMany","()","",2],["ModelCriteria::withColumn","ModelCriteria","ModelCriteria.html#method_withColumn","(string $clause, string $name = null)","Adds a supplementary column to the select clause These",2],["ModelCriteria::useQuery","ModelCriteria","ModelCriteria.html#method_useQuery","(string $relationName, string $secondaryCriteriaClass = null)","Initializes a secondary ModelCriteria object, to be",2],["ModelCriteria::endUse","ModelCriteria","ModelCriteria.html#method_endUse","()","Finalizes a secondary criteria and merges it with its",2],["ModelCriteria::mergeWith","ModelCriteria","ModelCriteria.html#method_mergeWith","(<a href=\"Criteria.html\"><abbr title=\"Criteria\">Criteria<\/abbr><\/a> $criteria, string $operator = null)","Add the content of a Criteria to the current Criteria",2],["ModelCriteria::clear","ModelCriteria","ModelCriteria.html#method_clear","()","Clear the conditions to allow the reuse of the query",2],["ModelCriteria::setPrimaryCriteria","ModelCriteria","ModelCriteria.html#method_setPrimaryCriteria","(<a href=\"ModelCriteria.html\"><abbr title=\"ModelCriteria\">ModelCriteria<\/abbr><\/a> $criteria, <a href=\"Join.html\"><abbr title=\"Join\">Join<\/abbr><\/a> $previousJoin)","Sets the primary Criteria for this secondary Criteria",2],["ModelCriteria::getPrimaryCriteria","ModelCriteria","ModelCriteria.html#method_getPrimaryCriteria","()","Gets the primary criteria for this secondary Criteria",2],["ModelCriteria::addSelectQuery","ModelCriteria","ModelCriteria.html#method_addSelectQuery","(<a href=\"Criteria.html\"><abbr title=\"Criteria\">Criteria<\/abbr><\/a> $subQueryCriteria, string $alias = null, boolean $addAliasAndSelectColumns = true)","Adds a Criteria as subQuery in the From Clause.",2],["ModelCriteria::addSelfSelectColumns","ModelCriteria","ModelCriteria.html#method_addSelfSelectColumns","()","Adds the select columns for a the current table",2],["ModelCriteria::addRelationSelectColumns","ModelCriteria","ModelCriteria.html#method_addRelationSelectColumns","(string $relation)","Adds the select columns for a relation",2],["ModelCriteria::getClassAndAlias","ModelCriteria","ModelCriteria.html#method_getClassAndAlias","(string $class)","Returns the class and alias of a string representing",2],["ModelCriteria::getRelationName","ModelCriteria","ModelCriteria.html#method_getRelationName","(string $relation)","Returns the name of a relation from a string.",2],["ModelCriteria::keepQuery","ModelCriteria","ModelCriteria.html#method_keepQuery","(boolean $isKeepQuery = true)","Triggers the automated cloning on termination.",2],["ModelCriteria::isKeepQuery","ModelCriteria","ModelCriteria.html#method_isKeepQuery","()","Checks whether the automated cloning on termination",2],["ModelCriteria::find","ModelCriteria","ModelCriteria.html#method_find","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Issue a SELECT query based on the current ModelCriteria",2],["ModelCriteria::findOne","ModelCriteria","ModelCriteria.html#method_findOne","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Issue a SELECT ...",2],["ModelCriteria::findOneOrCreate","ModelCriteria","ModelCriteria.html#method_findOneOrCreate","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Issue a SELECT ...",2],["ModelCriteria::findPk","ModelCriteria","ModelCriteria.html#method_findPk","(mixed $key, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Find object by primary key Behaves differently if the",2],["ModelCriteria::findPks","ModelCriteria","ModelCriteria.html#method_findPks","(array $keys, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Find objects by primary key Behaves differently if",2],["ModelCriteria::findBy","ModelCriteria","ModelCriteria.html#method_findBy","(string $column, mixed $value, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Apply a condition on a column and issues the SELECT",2],["ModelCriteria::findByArray","ModelCriteria","ModelCriteria.html#method_findByArray","(mixed $conditions, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Apply a list of conditions on columns and issues the",2],["ModelCriteria::findOneBy","ModelCriteria","ModelCriteria.html#method_findOneBy","(mixed $column, mixed $value, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Apply a condition on a column and issues the SELECT",2],["ModelCriteria::findOneByArray","ModelCriteria","ModelCriteria.html#method_findOneByArray","(mixed $conditions, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Apply a list of conditions on columns and issues the",2],["ModelCriteria::count","ModelCriteria","ModelCriteria.html#method_count","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Issue a SELECT COUNT(*) query based on the current",2],["ModelCriteria::paginate","ModelCriteria","ModelCriteria.html#method_paginate","(int $page = 1, int $maxPerPage = 10, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Issue a SELECT query based on the current ModelCriteria",2],["ModelCriteria::delete","ModelCriteria","ModelCriteria.html#method_delete","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Issue a DELETE query based on the current ModelCriteria",2],["ModelCriteria::doDelete","ModelCriteria","ModelCriteria.html#method_doDelete","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con)","Issue a DELETE query based on the current ModelCriteria",2],["ModelCriteria::deleteAll","ModelCriteria","ModelCriteria.html#method_deleteAll","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Issue a DELETE query based on the current ModelCriteria",2],["ModelCriteria::doDeleteAll","ModelCriteria","ModelCriteria.html#method_doDeleteAll","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con)","Issue a DELETE query based on the current ModelCriteria",2],["ModelCriteria::update","ModelCriteria","ModelCriteria.html#method_update","(array $values, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null, boolean $forceIndividualSaves = false)","Issue an UPDATE query based the current ModelCriteria",2],["ModelCriteria::doUpdate","ModelCriteria","ModelCriteria.html#method_doUpdate","(array $values, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con, boolean $forceIndividualSaves = false)","Issue an UPDATE query based the current ModelCriteria",2],["ModelCriteria::getAliasedColName","ModelCriteria","ModelCriteria.html#method_getAliasedColName","(string $colName)","Changes the table part of a a fully qualified column",2],["ModelCriteria::addUsingAlias","ModelCriteria","ModelCriteria.html#method_addUsingAlias","(string $column, mixed $value = null, string $operator = null)","Overrides Criteria::add() to force the use of a true",2],["ModelCriteria::getParams","ModelCriteria","ModelCriteria.html#method_getParams","()","Get all the parameters to bind to this criteria Does",2],["ModelCriteria::__call","ModelCriteria","ModelCriteria.html#method___call","($name, $arguments)","Handle the magic Supports findByXXX(), findOneByXXX(),",2],["ModelCriteria::__clone","ModelCriteria","ModelCriteria.html#method___clone","()","Ensures deep cloning of attached objects",2],["ModelCriteria::explain","ModelCriteria","ModelCriteria.html#method_explain","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Make explain plan of the query",2],["ModelCriteria::exists","ModelCriteria","ModelCriteria.html#method_exists","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","",2],["ModelCriteria::leftJoin","ModelCriteria","ModelCriteria.html#method_leftJoin","($relation)","Adds a LEFT JOIN clause to the query",2],["ModelCriteria::rightJoin","ModelCriteria","ModelCriteria.html#method_rightJoin","($relation)","Adds a RIGHT JOIN clause to the query",2],["ModelCriteria::innerJoin","ModelCriteria","ModelCriteria.html#method_innerJoin","($relation)","Adds a INNER JOIN clause to the query",2],["ModelCriteria::getSelectQuery","ModelCriteria","ModelCriteria.html#method_getSelectQuery","($alias)","Get the Criteria for a specific subQuery",2],["ModelCriteria::_or","ModelCriteria","ModelCriteria.html#method__or","()","",2],["ModelCriterion::__construct","ModelCriterion","ModelCriterion.html#method___construct","(<a href=\"Criteria.html\"><abbr title=\"Criteria\">Criteria<\/abbr><\/a> $outer, string $column, mixed $value, string $comparison, $clause, string $type = null)","Create a new instance.",2],["ModelCriterion::getClause","ModelCriterion","ModelCriterion.html#method_getClause","()","",2],["ModelCriterion::appendModelClauseToPs","ModelCriterion","ModelCriterion.html#method_appendModelClauseToPs","(string $sb, array $params)","Appends a Prepared Statement representation of the",2],["ModelCriterion::appendModelClauseLikeToPs","ModelCriterion","ModelCriterion.html#method_appendModelClauseLikeToPs","(string $sb, array $params)","Appends a Prepared Statement representation of the",2],["ModelCriterion::appendModelClauseSeveralToPs","ModelCriterion","ModelCriterion.html#method_appendModelClauseSeveralToPs","(string $sb, array $params)","Appends a Prepared Statement representation of the",2],["ModelCriterion::appendModelClauseArrayToPs","ModelCriterion","ModelCriterion.html#method_appendModelClauseArrayToPs","(string $sb, array $params)","Appends a Prepared Statement representation of the",2],["ModelCriterion::equals","ModelCriterion","ModelCriterion.html#method_equals","(<a href=\"Criterion.html\"><abbr title=\"Criterion\">Criterion<\/abbr><\/a>|null $obj)","This method checks another Criteria to see if they",2],["ModelCriterion::hashCode","ModelCriterion","ModelCriterion.html#method_hashCode","()","Returns a hash code value for the object.",2],["ModelJoin::setRelationMap","ModelJoin","ModelJoin.html#method_setRelationMap","(<a href=\"RelationMap.html\"><abbr title=\"RelationMap\">RelationMap<\/abbr><\/a> $relationMap, $leftTableAlias = null, $relationAlias = null)","",2],["ModelJoin::getRelationMap","ModelJoin","ModelJoin.html#method_getRelationMap","()","",2],["ModelJoin::setTableMap","ModelJoin","ModelJoin.html#method_setTableMap","(<a href=\"TableMap.html\"><abbr title=\"TableMap\">TableMap<\/abbr><\/a> $tableMap)","Sets the right tableMap for this join",2],["ModelJoin::getTableMap","ModelJoin","ModelJoin.html#method_getTableMap","()","Gets the right tableMap for this join",2],["ModelJoin::setPreviousJoin","ModelJoin","ModelJoin.html#method_setPreviousJoin","(<a href=\"ModelJoin.html\"><abbr title=\"ModelJoin\">ModelJoin<\/abbr><\/a> $join)","",2],["ModelJoin::getPreviousJoin","ModelJoin","ModelJoin.html#method_getPreviousJoin","()","",2],["ModelJoin::isPrimary","ModelJoin","ModelJoin.html#method_isPrimary","()","",2],["ModelJoin::setRelationAlias","ModelJoin","ModelJoin.html#method_setRelationAlias","($relationAlias)","",2],["ModelJoin::getRelationAlias","ModelJoin","ModelJoin.html#method_getRelationAlias","()","",2],["ModelJoin::hasRelationAlias","ModelJoin","ModelJoin.html#method_hasRelationAlias","()","",2],["ModelJoin::getObjectToRelate","ModelJoin","ModelJoin.html#method_getObjectToRelate","(Object $startObject)","This method returns the last related, but already hydrated",2],["ModelJoin::equals","ModelJoin","ModelJoin.html#method_equals","(<a href=\"ModelJoin.html\"><abbr title=\"ModelJoin\">ModelJoin<\/abbr><\/a> $join)","",2],["ModelJoin::__toString","ModelJoin","ModelJoin.html#method___toString","()","",2],["ModelWith::__construct","ModelWith","ModelWith.html#method___construct","(<a href=\"ModelJoin.html\"><abbr title=\"ModelJoin\">ModelJoin<\/abbr><\/a> $join = null)","",2],["ModelWith::init","ModelWith","ModelWith.html#method_init","(<a href=\"ModelJoin.html\"><abbr title=\"ModelJoin\">ModelJoin<\/abbr><\/a> $join)","Define the joined hydration schema based on a join",2],["ModelWith::setModelName","ModelWith","ModelWith.html#method_setModelName","($modelName)","",2],["ModelWith::getModelName","ModelWith","ModelWith.html#method_getModelName","()","",2],["ModelWith::setModelPeerName","ModelWith","ModelWith.html#method_setModelPeerName","($modelPeerName)","",2],["ModelWith::getModelPeerName","ModelWith","ModelWith.html#method_getModelPeerName","()","",2],["ModelWith::setIsSingleTableInheritance","ModelWith","ModelWith.html#method_setIsSingleTableInheritance","($isSingleTableInheritance)","",2],["ModelWith::isSingleTableInheritance","ModelWith","ModelWith.html#method_isSingleTableInheritance","()","",2],["ModelWith::setIsAdd","ModelWith","ModelWith.html#method_setIsAdd","($isAdd)","",2],["ModelWith::isAdd","ModelWith","ModelWith.html#method_isAdd","()","",2],["ModelWith::setIsWithOneToMany","ModelWith","ModelWith.html#method_setIsWithOneToMany","($isWithOneToMany)","",2],["ModelWith::isWithOneToMany","ModelWith","ModelWith.html#method_isWithOneToMany","()","",2],["ModelWith::setRelationName","ModelWith","ModelWith.html#method_setRelationName","($relationName)","",2],["ModelWith::getRelationName","ModelWith","ModelWith.html#method_getRelationName","()","",2],["ModelWith::setRelationMethod","ModelWith","ModelWith.html#method_setRelationMethod","($relationMethod)","",2],["ModelWith::getRelationMethod","ModelWith","ModelWith.html#method_getRelationMethod","()","",2],["ModelWith::setInitMethod","ModelWith","ModelWith.html#method_setInitMethod","($initMethod)","",2],["ModelWith::getInitMethod","ModelWith","ModelWith.html#method_getInitMethod","()","",2],["ModelWith::setResetPartialMethod","ModelWith","ModelWith.html#method_setResetPartialMethod","($resetPartialMethod)","",2],["ModelWith::getResetPartialMethod","ModelWith","ModelWith.html#method_getResetPartialMethod","()","",2],["ModelWith::setLeftPhpName","ModelWith","ModelWith.html#method_setLeftPhpName","($leftPhpName)","",2],["ModelWith::getLeftPhpName","ModelWith","ModelWith.html#method_getLeftPhpName","()","",2],["ModelWith::setRightPhpName","ModelWith","ModelWith.html#method_setRightPhpName","($rightPhpName)","",2],["ModelWith::getRightPhpName","ModelWith","ModelWith.html#method_getRightPhpName","()","",2],["ModelWith::isPrimary","ModelWith","ModelWith.html#method_isPrimary","()","",2],["ModelWith::__toString","ModelWith","ModelWith.html#method___toString","()","",2],["MojaviLogAdapter::__construct","MojaviLogAdapter","MojaviLogAdapter.html#method___construct","(<abbr title=\"ErrorLog\">ErrorLog<\/abbr> $logger = null)","constructor for setting up Mojavi log adapter",2],["MojaviLogAdapter::alert","MojaviLogAdapter","MojaviLogAdapter.html#method_alert","(mixed $message)","A convenience function for logging an alert event.",2],["MojaviLogAdapter::crit","MojaviLogAdapter","MojaviLogAdapter.html#method_crit","(mixed $message)","A convenience function for logging a critical event.",2],["MojaviLogAdapter::err","MojaviLogAdapter","MojaviLogAdapter.html#method_err","(mixed $message)","A convenience function for logging an error event.",2],["MojaviLogAdapter::warning","MojaviLogAdapter","MojaviLogAdapter.html#method_warning","(mixed $message)","A convenience function for logging a warning event.",2],["MojaviLogAdapter::notice","MojaviLogAdapter","MojaviLogAdapter.html#method_notice","(mixed $message)","A convenience function for logging an critical event.",2],["MojaviLogAdapter::info","MojaviLogAdapter","MojaviLogAdapter.html#method_info","(mixed $message)","A convenience function for logging an critical event.",2],["MojaviLogAdapter::debug","MojaviLogAdapter","MojaviLogAdapter.html#method_debug","(mixed $message)","A convenience function for logging a debug event.",2],["MojaviLogAdapter::log","MojaviLogAdapter","MojaviLogAdapter.html#method_log","(mixed $message, integer $severity = null)","Primary method to handle logging.",2],["MssqlPlatform::getMaxColumnNameLength","MssqlPlatform","MssqlPlatform.html#method_getMaxColumnNameLength","()","Returns the max column length supported by the db.",2],["MssqlPlatform::getNullString","MssqlPlatform","MssqlPlatform.html#method_getNullString","($notNull)","",2],["MssqlPlatform::supportsNativeDeleteTrigger","MssqlPlatform","MssqlPlatform.html#method_supportsNativeDeleteTrigger","()","Whether RDBMS supports native ON DELETE triggers (e.g.",2],["MssqlPlatform::supportsInsertNullPk","MssqlPlatform","MssqlPlatform.html#method_supportsInsertNullPk","()","Whether RDBMS supports INSERT null values in autoincremented",2],["MssqlPlatform::getDropTableDDL","MssqlPlatform","MssqlPlatform.html#method_getDropTableDDL","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Builds the DDL SQL to drop a table",2],["MssqlPlatform::getPrimaryKeyDDL","MssqlPlatform","MssqlPlatform.html#method_getPrimaryKeyDDL","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Returns the SQL for the primary key of a Table object",2],["MssqlPlatform::getAddForeignKeyDDL","MssqlPlatform","MssqlPlatform.html#method_getAddForeignKeyDDL","(<a href=\"ForeignKey.html\"><abbr title=\"ForeignKey\">ForeignKey<\/abbr><\/a> $fk)","Builds the DDL SQL to add a foreign key.",2],["MssqlPlatform::getForeignKeyDDL","MssqlPlatform","MssqlPlatform.html#method_getForeignKeyDDL","(<a href=\"ForeignKey.html\"><abbr title=\"ForeignKey\">ForeignKey<\/abbr><\/a> $fk)","Builds the DDL SQL for a ForeignKey object.",2],["MssqlPlatform::supportsSchemas","MssqlPlatform","MssqlPlatform.html#method_supportsSchemas","()","",2],["MssqlPlatform::hasSize","MssqlPlatform","MssqlPlatform.html#method_hasSize","(string $sqlType)","Returns if the RDBMS-specific SQL type has a size attribute.",2],["MssqlPlatform::quoteIdentifier","MssqlPlatform","MssqlPlatform.html#method_quoteIdentifier","(string $text)","Quotes identifiers used in database SQL.",2],["MssqlPlatform::getTimestampFormatter","MssqlPlatform","MssqlPlatform.html#method_getTimestampFormatter","()","Gets the preferred timestamp formatter for setting",2],["MssqlPropelPDO::beginTransaction","MssqlPropelPDO","MssqlPropelPDO.html#method_beginTransaction","()","Begin a transaction.",2],["MssqlPropelPDO::commit","MssqlPropelPDO","MssqlPropelPDO.html#method_commit","()","Commit a transaction.",2],["MssqlPropelPDO::rollBack","MssqlPropelPDO","MssqlPropelPDO.html#method_rollBack","()","Roll-back a transaction.",2],["MssqlPropelPDO::forceRollBack","MssqlPropelPDO","MssqlPropelPDO.html#method_forceRollBack","()","Rollback the whole transaction, even if this is a nested",2],["MssqlPropelPDO::lastInsertId","MssqlPropelPDO","MssqlPropelPDO.html#method_lastInsertId","(string $seqname = null)","",2],["MssqlPropelPDO::quoteIdentifier","MssqlPropelPDO","MssqlPropelPDO.html#method_quoteIdentifier","(string $text)","",2],["MssqlPropelPDO::useQuoteIdentifier","MssqlPropelPDO","MssqlPropelPDO.html#method_useQuoteIdentifier","()","",2],["MssqlSchemaParser::parse","MssqlSchemaParser","MssqlSchemaParser.html#method_parse","(<a href=\"Database.html\"><abbr title=\"Database\">Database<\/abbr><\/a> $database, <abbr title=\"Task\">Task<\/abbr> $task = null)","",2],["MysqlPlatform::setGeneratorConfig","MysqlPlatform","MysqlPlatform.html#method_setGeneratorConfig","(<a href=\"GeneratorConfigInterface.html\"><abbr title=\"GeneratorConfigInterface\">GeneratorConfigInterface<\/abbr><\/a> $generatorConfig)","Sets the GeneratorConfig to use in the parsing.",2],["MysqlPlatform::setTableEngineKeyword","MysqlPlatform","MysqlPlatform.html#method_setTableEngineKeyword","(string $tableEngineKeyword)","Setter for the tableEngineKeyword property",2],["MysqlPlatform::getTableEngineKeyword","MysqlPlatform","MysqlPlatform.html#method_getTableEngineKeyword","()","Getter for the tableEngineKeyword property",2],["MysqlPlatform::setDefaultTableEngine","MysqlPlatform","MysqlPlatform.html#method_setDefaultTableEngine","(string $defaultTableEngine)","Setter for the defaultTableEngine property",2],["MysqlPlatform::getDefaultTableEngine","MysqlPlatform","MysqlPlatform.html#method_getDefaultTableEngine","()","Getter for the defaultTableEngine property",2],["MysqlPlatform::getAutoIncrement","MysqlPlatform","MysqlPlatform.html#method_getAutoIncrement","()","",2],["MysqlPlatform::getMaxColumnNameLength","MysqlPlatform","MysqlPlatform.html#method_getMaxColumnNameLength","()","Returns the max column length supported by the db.",2],["MysqlPlatform::supportsNativeDeleteTrigger","MysqlPlatform","MysqlPlatform.html#method_supportsNativeDeleteTrigger","()","Whether RDBMS supports native ON DELETE triggers (e.g.",2],["MysqlPlatform::supportsForeignKeys","MysqlPlatform","MysqlPlatform.html#method_supportsForeignKeys","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","",2],["MysqlPlatform::getAddTablesDDL","MysqlPlatform","MysqlPlatform.html#method_getAddTablesDDL","(<a href=\"Database.html\"><abbr title=\"Database\">Database<\/abbr><\/a> $database)","Builds the DDL SQL to add the tables of a database",2],["MysqlPlatform::getBeginDDL","MysqlPlatform","MysqlPlatform.html#method_getBeginDDL","()","Gets the requests to execute at the beginning of a",2],["MysqlPlatform::getEndDDL","MysqlPlatform","MysqlPlatform.html#method_getEndDDL","()","Gets the requests to execute at the end of a DDL file",2],["MysqlPlatform::getPrimaryKeyDDL","MysqlPlatform","MysqlPlatform.html#method_getPrimaryKeyDDL","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Returns the SQL for the primary key of a Table object",2],["MysqlPlatform::getAddTableDDL","MysqlPlatform","MysqlPlatform.html#method_getAddTableDDL","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Builds the DDL SQL to add a table without index and",2],["MysqlPlatform::getDropTableDDL","MysqlPlatform","MysqlPlatform.html#method_getDropTableDDL","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Builds the DDL SQL to drop a table",2],["MysqlPlatform::getColumnDDL","MysqlPlatform","MysqlPlatform.html#method_getColumnDDL","(<a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $col)","Builds the DDL SQL for a Column object.",2],["MysqlPlatform::getDropPrimaryKeyDDL","MysqlPlatform","MysqlPlatform.html#method_getDropPrimaryKeyDDL","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Builds the DDL SQL to drop the primary key of a table.",2],["MysqlPlatform::getAddIndexDDL","MysqlPlatform","MysqlPlatform.html#method_getAddIndexDDL","(<a href=\"Index.html\"><abbr title=\"Index\">Index<\/abbr><\/a> $index)","Builds the DDL SQL to add an Index.",2],["MysqlPlatform::getDropIndexDDL","MysqlPlatform","MysqlPlatform.html#method_getDropIndexDDL","(<a href=\"Index.html\"><abbr title=\"Index\">Index<\/abbr><\/a> $index)","Builds the DDL SQL to drop an Index.",2],["MysqlPlatform::getIndexDDL","MysqlPlatform","MysqlPlatform.html#method_getIndexDDL","(<a href=\"Index.html\"><abbr title=\"Index\">Index<\/abbr><\/a> $index)","Builds the DDL SQL for an Index object.",2],["MysqlPlatform::getUniqueDDL","MysqlPlatform","MysqlPlatform.html#method_getUniqueDDL","(<a href=\"Unique.html\"><abbr title=\"Unique\">Unique<\/abbr><\/a> $unique)","Builds the DDL SQL for a Unique constraint object.",2],["MysqlPlatform::getAddForeignKeyDDL","MysqlPlatform","MysqlPlatform.html#method_getAddForeignKeyDDL","(<a href=\"ForeignKey.html\"><abbr title=\"ForeignKey\">ForeignKey<\/abbr><\/a> $fk)","Builds the DDL SQL to add a foreign key.",2],["MysqlPlatform::getForeignKeyDDL","MysqlPlatform","MysqlPlatform.html#method_getForeignKeyDDL","(<a href=\"ForeignKey.html\"><abbr title=\"ForeignKey\">ForeignKey<\/abbr><\/a> $fk)","Builds the DDL SQL for a ForeignKey object.",2],["MysqlPlatform::getDropForeignKeyDDL","MysqlPlatform","MysqlPlatform.html#method_getDropForeignKeyDDL","(<a href=\"ForeignKey.html\"><abbr title=\"ForeignKey\">ForeignKey<\/abbr><\/a> $fk)","Builds the DDL SQL to drop a foreign key.",2],["MysqlPlatform::getCommentBlockDDL","MysqlPlatform","MysqlPlatform.html#method_getCommentBlockDDL","($comment)","",2],["MysqlPlatform::getModifyDatabaseDDL","MysqlPlatform","MysqlPlatform.html#method_getModifyDatabaseDDL","(<a href=\"PropelDatabaseDiff.html\"><abbr title=\"PropelDatabaseDiff\">PropelDatabaseDiff<\/abbr><\/a> $databaseDiff)","Builds the DDL SQL to modify a database based on a",2],["MysqlPlatform::getRenameTableDDL","MysqlPlatform","MysqlPlatform.html#method_getRenameTableDDL","($fromTableName, $toTableName)","Builds the DDL SQL to rename a table",2],["MysqlPlatform::getRemoveColumnDDL","MysqlPlatform","MysqlPlatform.html#method_getRemoveColumnDDL","(<a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $column)","Builds the DDL SQL to remove a column",2],["MysqlPlatform::getRenameColumnDDL","MysqlPlatform","MysqlPlatform.html#method_getRenameColumnDDL","($fromColumn, $toColumn)","Builds the DDL SQL to rename a column",2],["MysqlPlatform::getModifyColumnDDL","MysqlPlatform","MysqlPlatform.html#method_getModifyColumnDDL","(<a href=\"PropelColumnDiff.html\"><abbr title=\"PropelColumnDiff\">PropelColumnDiff<\/abbr><\/a> $columnDiff)","Builds the DDL SQL to modify a column",2],["MysqlPlatform::getChangeColumnDDL","MysqlPlatform","MysqlPlatform.html#method_getChangeColumnDDL","($fromColumn, $toColumn)","Builds the DDL SQL to change a column",2],["MysqlPlatform::getModifyColumnsDDL","MysqlPlatform","MysqlPlatform.html#method_getModifyColumnsDDL","($columnDiffs)","Builds the DDL SQL to modify a list of columns",2],["MysqlPlatform::getAddColumnDDLBits","MysqlPlatform","MysqlPlatform.html#method_getAddColumnDDLBits","(<a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $column)","",2],["MysqlPlatform::getAddColumnsDDL","MysqlPlatform","MysqlPlatform.html#method_getAddColumnsDDL","($columns)","Builds the DDL SQL to add a list of columns",2],["MysqlPlatform::supportsSchemas","MysqlPlatform","MysqlPlatform.html#method_supportsSchemas","()","",2],["MysqlPlatform::hasSize","MysqlPlatform","MysqlPlatform.html#method_hasSize","(string $sqlType)","Returns if the RDBMS-specific SQL type has a size attribute.",2],["MysqlPlatform::disconnectedEscapeText","MysqlPlatform","MysqlPlatform.html#method_disconnectedEscapeText","(string $text)","Escape the string for RDBMS.",2],["MysqlPlatform::quoteIdentifier","MysqlPlatform","MysqlPlatform.html#method_quoteIdentifier","(string $text)","MySQL documentation says that identifiers cannot contain",2],["MysqlPlatform::getTimestampFormatter","MysqlPlatform","MysqlPlatform.html#method_getTimestampFormatter","()","Gets the preferred timestamp formatter for setting",2],["MysqlPlatform::getColumnBindingPHP","MysqlPlatform","MysqlPlatform.html#method_getColumnBindingPHP","($column, $identifier, $columnValueAccessor, $tab = &#039;\t\t\t&#039;)","Get the PHP snippet for binding a value to a column.",2],["MysqlPlatform::getDefaultFKOnDeleteBehavior","MysqlPlatform","MysqlPlatform.html#method_getDefaultFKOnDeleteBehavior","()","",2],["MysqlPlatform::getDefaultFKOnUpdateBehavior","MysqlPlatform","MysqlPlatform.html#method_getDefaultFKOnUpdateBehavior","()","",2],["MysqlSchemaParser::parse","MysqlSchemaParser","MysqlSchemaParser.html#method_parse","(<a href=\"Database.html\"><abbr title=\"Database\">Database<\/abbr><\/a> $database, <abbr title=\"Task\">Task<\/abbr> $task = null)","",2],["MysqlSchemaParser::getColumnFromRow","MysqlSchemaParser","MysqlSchemaParser.html#method_getColumnFromRow","($row, <a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Factory method creating a Column object based on a",2],["NameFactory::generateName","NameFactory","NameFactory.html#method_generateName","(string $algorithmName, array $inputs)","Given a list of String objects, implements",2],["NameGenerator::generateName","NameGenerator","NameGenerator.html#method_generateName","(string[] $inputs)","Given a list of String objects, implements",2],["NestedSetBehavior::modifyTable","NestedSetBehavior","NestedSetBehavior.html#method_modifyTable","()","Add the left, right and scope to the current table",2],["NestedSetBehavior::getObjectBuilderModifier","NestedSetBehavior","NestedSetBehavior.html#method_getObjectBuilderModifier","()","",2],["NestedSetBehavior::getQueryBuilderModifier","NestedSetBehavior","NestedSetBehavior.html#method_getQueryBuilderModifier","()","",2],["NestedSetBehavior::getPeerBuilderModifier","NestedSetBehavior","NestedSetBehavior.html#method_getPeerBuilderModifier","()","",2],["NestedSetBehavior::useScope","NestedSetBehavior","NestedSetBehavior.html#method_useScope","()","",2],["NestedSetBehaviorObjectBuilderModifier::__construct","NestedSetBehaviorObjectBuilderModifier","NestedSetBehaviorObjectBuilderModifier.html#method___construct","($behavior)","",2],["NestedSetBehaviorObjectBuilderModifier::objectAttributes","NestedSetBehaviorObjectBuilderModifier","NestedSetBehaviorObjectBuilderModifier.html#method_objectAttributes","($builder)","",2],["NestedSetBehaviorObjectBuilderModifier::preSave","NestedSetBehaviorObjectBuilderModifier","NestedSetBehaviorObjectBuilderModifier.html#method_preSave","($builder)","",2],["NestedSetBehaviorObjectBuilderModifier::preDelete","NestedSetBehaviorObjectBuilderModifier","NestedSetBehaviorObjectBuilderModifier.html#method_preDelete","($builder)","",2],["NestedSetBehaviorObjectBuilderModifier::postDelete","NestedSetBehaviorObjectBuilderModifier","NestedSetBehaviorObjectBuilderModifier.html#method_postDelete","($builder)","",2],["NestedSetBehaviorObjectBuilderModifier::objectClearReferences","NestedSetBehaviorObjectBuilderModifier","NestedSetBehaviorObjectBuilderModifier.html#method_objectClearReferences","($builder)","",2],["NestedSetBehaviorObjectBuilderModifier::objectMethods","NestedSetBehaviorObjectBuilderModifier","NestedSetBehaviorObjectBuilderModifier.html#method_objectMethods","($builder)","",2],["NestedSetBehaviorPeerBuilderModifier::__construct","NestedSetBehaviorPeerBuilderModifier","NestedSetBehaviorPeerBuilderModifier.html#method___construct","($behavior)","",2],["NestedSetBehaviorPeerBuilderModifier::staticAttributes","NestedSetBehaviorPeerBuilderModifier","NestedSetBehaviorPeerBuilderModifier.html#method_staticAttributes","($builder)","",2],["NestedSetBehaviorPeerBuilderModifier::staticMethods","NestedSetBehaviorPeerBuilderModifier","NestedSetBehaviorPeerBuilderModifier.html#method_staticMethods","($builder)","",2],["NestedSetBehaviorQueryBuilderModifier::__construct","NestedSetBehaviorQueryBuilderModifier","NestedSetBehaviorQueryBuilderModifier.html#method___construct","($behavior)","",2],["NestedSetBehaviorQueryBuilderModifier::queryMethods","NestedSetBehaviorQueryBuilderModifier","NestedSetBehaviorQueryBuilderModifier.html#method_queryMethods","($builder)","",2],["NestedSetRecursiveIterator::__construct","NestedSetRecursiveIterator","NestedSetRecursiveIterator.html#method___construct","($node)","",2],["NestedSetRecursiveIterator::rewind","NestedSetRecursiveIterator","NestedSetRecursiveIterator.html#method_rewind","()","",2],["NestedSetRecursiveIterator::valid","NestedSetRecursiveIterator","NestedSetRecursiveIterator.html#method_valid","()","",2],["NestedSetRecursiveIterator::current","NestedSetRecursiveIterator","NestedSetRecursiveIterator.html#method_current","()","",2],["NestedSetRecursiveIterator::key","NestedSetRecursiveIterator","NestedSetRecursiveIterator.html#method_key","()","",2],["NestedSetRecursiveIterator::next","NestedSetRecursiveIterator","NestedSetRecursiveIterator.html#method_next","()","",2],["NestedSetRecursiveIterator::hasChildren","NestedSetRecursiveIterator","NestedSetRecursiveIterator.html#method_hasChildren","()","",2],["NestedSetRecursiveIterator::getChildren","NestedSetRecursiveIterator","NestedSetRecursiveIterator.html#method_getChildren","()","",2],["NodeObject::save","NodeObject","NodeObject.html#method_save","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","If object is saved without left\/right values, set them",2],["NodeObject::delete","NodeObject","NodeObject.html#method_delete","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Delete node and descendants",2],["NodeObject::makeRoot","NodeObject","NodeObject.html#method_makeRoot","()","Sets node properties to make it a root node.",2],["NodeObject::getLevel","NodeObject","NodeObject.html#method_getLevel","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Gets the level if set, otherwise calculates this and",2],["NodeObject::getPath","NodeObject","NodeObject.html#method_getPath","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Get the path to the node in the tree",2],["NodeObject::getNumberOfChildren","NodeObject","NodeObject.html#method_getNumberOfChildren","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Gets the number of children for the node (direct descendants)",2],["NodeObject::getNumberOfDescendants","NodeObject","NodeObject.html#method_getNumberOfDescendants","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Gets the total number of descendants for the node",2],["NodeObject::getChildren","NodeObject","NodeObject.html#method_getChildren","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Gets the children for the node",2],["NodeObject::getDescendants","NodeObject","NodeObject.html#method_getDescendants","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Gets the descendants for the node",2],["NodeObject::setLevel","NodeObject","NodeObject.html#method_setLevel","(int $level)","Sets the level of the node in the tree",2],["NodeObject::setChildren","NodeObject","NodeObject.html#method_setChildren","(array $children)","Sets the children array of the node in the tree",2],["NodeObject::setParentNode","NodeObject","NodeObject.html#method_setParentNode","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $parent = null)","Sets the parentNode of the node in the tree",2],["NodeObject::setPrevSibling","NodeObject","NodeObject.html#method_setPrevSibling","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $node = null)","Sets the previous sibling of the node in the tree",2],["NodeObject::setNextSibling","NodeObject","NodeObject.html#method_setNextSibling","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $node = null)","Sets the next sibling of the node in the tree",2],["NodeObject::isRoot","NodeObject","NodeObject.html#method_isRoot","()","Determines if the node is the root node",2],["NodeObject::isLeaf","NodeObject","NodeObject.html#method_isLeaf","()","Determines if the node is a leaf node",2],["NodeObject::isEqualTo","NodeObject","NodeObject.html#method_isEqualTo","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $node)","Tests if object is equal to $node",2],["NodeObject::hasParent","NodeObject","NodeObject.html#method_hasParent","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Tests if object has an ancestor",2],["NodeObject::hasChildren","NodeObject","NodeObject.html#method_hasChildren","()","Determines if the node has children \/ descendants",2],["NodeObject::hasPrevSibling","NodeObject","NodeObject.html#method_hasPrevSibling","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Determines if the node has previous sibling",2],["NodeObject::hasNextSibling","NodeObject","NodeObject.html#method_hasNextSibling","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Determines if the node has next sibling",2],["NodeObject::retrieveParent","NodeObject","NodeObject.html#method_retrieveParent","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Gets ancestor for the given node if it exists",2],["NodeObject::retrieveFirstChild","NodeObject","NodeObject.html#method_retrieveFirstChild","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Gets first child if it exists",2],["NodeObject::retrieveLastChild","NodeObject","NodeObject.html#method_retrieveLastChild","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Gets last child if it exists",2],["NodeObject::retrievePrevSibling","NodeObject","NodeObject.html#method_retrievePrevSibling","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Gets prev sibling for the given node if it exists",2],["NodeObject::retrieveNextSibling","NodeObject","NodeObject.html#method_retrieveNextSibling","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Gets next sibling for the given node if it exists",2],["NodeObject::insertAsFirstChildOf","NodeObject","NodeObject.html#method_insertAsFirstChildOf","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $parent, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Inserts as first child of destination node $parent",2],["NodeObject::insertAsLastChildOf","NodeObject","NodeObject.html#method_insertAsLastChildOf","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $parent, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Inserts as last child of destination node $parent",2],["NodeObject::insertAsPrevSiblingOf","NodeObject","NodeObject.html#method_insertAsPrevSiblingOf","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $dest, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Inserts node as previous sibling to destination node",2],["NodeObject::insertAsNextSiblingOf","NodeObject","NodeObject.html#method_insertAsNextSiblingOf","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $dest, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Inserts node as next sibling to destination node $dest",2],["NodeObject::moveToFirstChildOf","NodeObject","NodeObject.html#method_moveToFirstChildOf","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $parent, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Moves node to be first child of $parent",2],["NodeObject::moveToLastChildOf","NodeObject","NodeObject.html#method_moveToLastChildOf","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $parent, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Moves node to be last child of $parent",2],["NodeObject::moveToPrevSiblingOf","NodeObject","NodeObject.html#method_moveToPrevSiblingOf","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $dest, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Moves node to be prev sibling to $dest",2],["NodeObject::moveToNextSiblingOf","NodeObject","NodeObject.html#method_moveToNextSiblingOf","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $dest, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Moves node to be next sibling to $dest",2],["NodeObject::insertAsParentOf","NodeObject","NodeObject.html#method_insertAsParentOf","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $node, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Inserts node as parent of given node.",2],["NodeObject::getScopeIdValue","NodeObject","NodeObject.html#method_getScopeIdValue","()","Wraps the getter for the scope value",2],["NodeObject::setScopeIdValue","NodeObject","NodeObject.html#method_setScopeIdValue","(int $v)","Set the value of scope column",2],["NodePeer::createRoot","NodePeer","NodePeer.html#method_createRoot","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $node)","Creates the supplied node as the root node.",2],["NodePeer::retrieveRoot","NodePeer","NodePeer.html#method_retrieveRoot","(int $scopeId = 1, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Returns the root node for a given scope id",2],["NodePeer::insertAsFirstChildOf","NodePeer","NodePeer.html#method_insertAsFirstChildOf","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $child, <a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $parent, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Inserts $child as first child of destination node $parent",2],["NodePeer::insertAsLastChildOf","NodePeer","NodePeer.html#method_insertAsLastChildOf","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $child, <a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $parent, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Inserts $child as last child of destination node $parent",2],["NodePeer::insertAsPrevSiblingOf","NodePeer","NodePeer.html#method_insertAsPrevSiblingOf","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $node, <a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $sibling, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Inserts $sibling as previous sibling to destination",2],["NodePeer::insertAsNextSiblingOf","NodePeer","NodePeer.html#method_insertAsNextSiblingOf","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $node, <a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $sibling, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Inserts $sibling as next sibling to destination node",2],["NodePeer::insertAsParentOf","NodePeer","NodePeer.html#method_insertAsParentOf","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $parent, <a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $node, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Inserts $parent as parent of given $node.",2],["NodePeer::insertRoot","NodePeer","NodePeer.html#method_insertRoot","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $node, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Inserts $node as root node",2],["NodePeer::deleteRoot","NodePeer","NodePeer.html#method_deleteRoot","(int $scopeId = 1, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Delete root node",2],["NodePeer::deleteNode","NodePeer","NodePeer.html#method_deleteNode","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $dest, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Delete $dest node",2],["NodePeer::moveToFirstChildOf","NodePeer","NodePeer.html#method_moveToFirstChildOf","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $parent, <a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $child, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Moves $child to be first child of $parent",2],["NodePeer::moveToLastChildOf","NodePeer","NodePeer.html#method_moveToLastChildOf","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $dest, <a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $node, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Moves $node to be last child of $dest",2],["NodePeer::moveToPrevSiblingOf","NodePeer","NodePeer.html#method_moveToPrevSiblingOf","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $dest, <a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $node, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Moves $node to be prev sibling to $dest",2],["NodePeer::moveToNextSiblingOf","NodePeer","NodePeer.html#method_moveToNextSiblingOf","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $dest, <a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $node, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Moves $node to be next sibling to $dest",2],["NodePeer::retrieveFirstChild","NodePeer","NodePeer.html#method_retrieveFirstChild","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $node, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Gets first child for the given node if it exists",2],["NodePeer::retrieveLastChild","NodePeer","NodePeer.html#method_retrieveLastChild","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $node, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Gets last child for the given node if it exists",2],["NodePeer::retrievePrevSibling","NodePeer","NodePeer.html#method_retrievePrevSibling","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $node, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Gets prev sibling for the given node if it exists",2],["NodePeer::retrieveNextSibling","NodePeer","NodePeer.html#method_retrieveNextSibling","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $node, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Gets next sibling for the given node if it exists",2],["NodePeer::retrieveTree","NodePeer","NodePeer.html#method_retrieveTree","(int $scopeId = 1, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Retrieves the entire tree from root",2],["NodePeer::retrieveBranch","NodePeer","NodePeer.html#method_retrieveBranch","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $node, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Retrieves the entire tree from parent $node",2],["NodePeer::retrieveChildren","NodePeer","NodePeer.html#method_retrieveChildren","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $node, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Gets direct children for the node",2],["NodePeer::retrieveDescendants","NodePeer","NodePeer.html#method_retrieveDescendants","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $node, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Gets all descendants for the node",2],["NodePeer::retrieveSiblings","NodePeer","NodePeer.html#method_retrieveSiblings","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $node, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Gets all siblings for the node",2],["NodePeer::retrieveParent","NodePeer","NodePeer.html#method_retrieveParent","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $node, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Gets ancestor for the given node if it exists",2],["NodePeer::getLevel","NodePeer","NodePeer.html#method_getLevel","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $node, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Gets level for the given node",2],["NodePeer::getNumberOfChildren","NodePeer","NodePeer.html#method_getNumberOfChildren","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $node, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Gets number of direct children for given node",2],["NodePeer::getNumberOfDescendants","NodePeer","NodePeer.html#method_getNumberOfDescendants","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $node, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Gets number of descendants for given node",2],["NodePeer::getPath","NodePeer","NodePeer.html#method_getPath","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $node, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Returns path to a specific node as an array, useful",2],["NodePeer::isValid","NodePeer","NodePeer.html#method_isValid","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $node = null)","Tests if node is valid",2],["NodePeer::isRoot","NodePeer","NodePeer.html#method_isRoot","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $node)","Tests if node is a root",2],["NodePeer::isLeaf","NodePeer","NodePeer.html#method_isLeaf","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $node)","Tests if node is a leaf",2],["NodePeer::isChildOf","NodePeer","NodePeer.html#method_isChildOf","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $child, <a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $parent)","Tests if $child is a child of $parent",2],["NodePeer::isEqualTo","NodePeer","NodePeer.html#method_isEqualTo","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $node1, <a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $node2)","Tests if $node1 is equal to $node2",2],["NodePeer::hasParent","NodePeer","NodePeer.html#method_hasParent","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $node, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Tests if $node has an ancestor",2],["NodePeer::hasPrevSibling","NodePeer","NodePeer.html#method_hasPrevSibling","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $node, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Tests if $node has prev sibling",2],["NodePeer::hasNextSibling","NodePeer","NodePeer.html#method_hasNextSibling","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $node, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Tests if $node has next sibling",2],["NodePeer::hasChildren","NodePeer","NodePeer.html#method_hasChildren","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $node)","Tests if $node has children",2],["NodePeer::deleteDescendants","NodePeer","NodePeer.html#method_deleteDescendants","(<a href=\"NodeObject.html\"><abbr title=\"NodeObject\">NodeObject<\/abbr><\/a> $node, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Deletes $node and all of its descendants",2],["NodePeer::getNode","NodePeer","NodePeer.html#method_getNode","(<abbr title=\"int\/object\">int\/object<\/abbr> $node, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Returns a node given its primary key or the node itself",2],["NotMatchValidator::isValid","NotMatchValidator","NotMatchValidator.html#method_isValid","(<a href=\"ValidatorMap.html\"><abbr title=\"ValidatorMap\">ValidatorMap<\/abbr><\/a> $map, string $str)","",2],["OMBuilder::build","OMBuilder","OMBuilder.html#method_build","()","Builds the PHP source for current class and returns",2],["OMBuilder::buildObjectInstanceCreationCode","OMBuilder","OMBuilder.html#method_buildObjectInstanceCreationCode","($objName, $clsName)","Creates a $obj = new Book(); code snippet.",2],["OMBuilder::getUnprefixedClassname","OMBuilder","OMBuilder.html#method_getUnprefixedClassname","()","Returns the qualified (prefixed) classname that is",2],["OMBuilder::getClassname","OMBuilder","OMBuilder.html#method_getClassname","()","Returns the prefixed classname that is being built",2],["OMBuilder::getFullyQualifiedClassname","OMBuilder","OMBuilder.html#method_getFullyQualifiedClassname","()","Returns the namespaced classname if there is a namespace,",2],["OMBuilder::getClasspath","OMBuilder","OMBuilder.html#method_getClasspath","()","Gets the dot-path representation of current class being",2],["OMBuilder::getClassFilePath","OMBuilder","OMBuilder.html#method_getClassFilePath","()","Gets the full path to the file for the current class.",2],["OMBuilder::getPackage","OMBuilder","OMBuilder.html#method_getPackage","()","Gets package name for this table.",2],["OMBuilder::getPackagePath","OMBuilder","OMBuilder.html#method_getPackagePath","()","Returns filesystem path for current package.",2],["OMBuilder::getNamespace","OMBuilder","OMBuilder.html#method_getNamespace","()","Return the user-defined namespace for this table, or",2],["OMBuilder::declareClassNamespace","OMBuilder","OMBuilder.html#method_declareClassNamespace","($class, $namespace = &#039;&#039;)","",2],["OMBuilder::declareClass","OMBuilder","OMBuilder.html#method_declareClass","($fullyQualifiedClassName)","",2],["OMBuilder::declareClassFromBuilder","OMBuilder","OMBuilder.html#method_declareClassFromBuilder","($builder)","",2],["OMBuilder::declareClasses","OMBuilder","OMBuilder.html#method_declareClasses","()","",2],["OMBuilder::getDeclaredClasses","OMBuilder","OMBuilder.html#method_getDeclaredClasses","($namespace = null)","",2],["OMBuilder::getNamespaceStatement","OMBuilder","OMBuilder.html#method_getNamespaceStatement","()","",2],["OMBuilder::getUseStatements","OMBuilder","OMBuilder.html#method_getUseStatements","($ignoredNamespace = null)","",2],["OMBuilder::getPeerClassname","OMBuilder","OMBuilder.html#method_getPeerClassname","()","Shortcut method to return the [stub] peer classname",2],["OMBuilder::getQueryClassname","OMBuilder","OMBuilder.html#method_getQueryClassname","()","Shortcut method to return the [stub] query classname",2],["OMBuilder::getObjectClassname","OMBuilder","OMBuilder.html#method_getObjectClassname","()","Returns the object classname for current table.",2],["OMBuilder::getColumnConstant","OMBuilder","OMBuilder.html#method_getColumnConstant","(<a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $col, string $classname = null)","Get the column constant name (e.g.",2],["OMBuilder::getBasePeer","OMBuilder","OMBuilder.html#method_getBasePeer","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Gets the basePeer path if specified for table\/db.",2],["OMBuilder::getFKPhpNameAffix","OMBuilder","OMBuilder.html#method_getFKPhpNameAffix","(<a href=\"ForeignKey.html\"><abbr title=\"ForeignKey\">ForeignKey<\/abbr><\/a> $fk, boolean $plural = false)","Gets the PHP method name affix to be used for fkeys",2],["OMBuilder::getRefFKPhpNameAffix","OMBuilder","OMBuilder.html#method_getRefFKPhpNameAffix","(<a href=\"ForeignKey.html\"><abbr title=\"ForeignKey\">ForeignKey<\/abbr><\/a> $fk, boolean $plural = false)","Gets the PHP method name affix to be used for referencing",2],["OMBuilder::hasBehaviorModifier","OMBuilder","OMBuilder.html#method_hasBehaviorModifier","(string $hookName, string $modifier)","Checks whether any registered behavior on that table",2],["OMBuilder::applyBehaviorModifierBase","OMBuilder","OMBuilder.html#method_applyBehaviorModifierBase","(string $hookName, string $modifier, string $script, string $tab = &#039;\t\t&#039;)","Checks whether any registered behavior on that table",2],["OMBuilder::getBehaviorContentBase","OMBuilder","OMBuilder.html#method_getBehaviorContentBase","(string $contentName, string $modifier)","Checks whether any registered behavior content creator",2],["OMBuilder::fixTrailingWhitespaces","OMBuilder","OMBuilder.html#method_fixTrailingWhitespaces","($matches)","",2],["ObjectBuilder::__construct","ObjectBuilder","ObjectBuilder.html#method___construct","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Constructs a new PeerBuilder subclass.",2],["ObjectBuilder::hasBehaviorModifier","ObjectBuilder","ObjectBuilder.html#method_hasBehaviorModifier","(string $hookName, string $modifier = null)","Checks whether any registered behavior on that table",2],["ObjectBuilder::applyBehaviorModifier","ObjectBuilder","ObjectBuilder.html#method_applyBehaviorModifier","($hookName, $script, $tab = &#039;\t\t&#039;)","Checks whether any registered behavior on that table",2],["ObjectBuilder::getBehaviorContent","ObjectBuilder","ObjectBuilder.html#method_getBehaviorContent","(string $contentName)","Checks whether any registered behavior content creator",2],["OraclePlatform::getMaxColumnNameLength","OraclePlatform","OraclePlatform.html#method_getMaxColumnNameLength","()","Returns the max column length supported by the db.",2],["OraclePlatform::getNativeIdMethod","OraclePlatform","OraclePlatform.html#method_getNativeIdMethod","()","Returns the native IdMethod (sequence|identity)",2],["OraclePlatform::getAutoIncrement","OraclePlatform","OraclePlatform.html#method_getAutoIncrement","()","",2],["OraclePlatform::supportsNativeDeleteTrigger","OraclePlatform","OraclePlatform.html#method_supportsNativeDeleteTrigger","()","Whether RDBMS supports native ON DELETE triggers (e.g.",2],["OraclePlatform::getBeginDDL","OraclePlatform","OraclePlatform.html#method_getBeginDDL","()","Gets the requests to execute at the beginning of a",2],["OraclePlatform::getAddTablesDDL","OraclePlatform","OraclePlatform.html#method_getAddTablesDDL","(<a href=\"Database.html\"><abbr title=\"Database\">Database<\/abbr><\/a> $database)","Builds the DDL SQL to add the tables of a database",2],["OraclePlatform::getAddTableDDL","OraclePlatform","OraclePlatform.html#method_getAddTableDDL","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Builds the DDL SQL to add a table without index and",2],["OraclePlatform::getAddPrimaryKeyDDL","OraclePlatform","OraclePlatform.html#method_getAddPrimaryKeyDDL","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Builds the DDL SQL to add the primary key of a table.",2],["OraclePlatform::getAddSequencesDDL","OraclePlatform","OraclePlatform.html#method_getAddSequencesDDL","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","",2],["OraclePlatform::getDropTableDDL","OraclePlatform","OraclePlatform.html#method_getDropTableDDL","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Builds the DDL SQL to drop a table",2],["OraclePlatform::getPrimaryKeyName","OraclePlatform","OraclePlatform.html#method_getPrimaryKeyName","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Returns the name of a table primary key",2],["OraclePlatform::getPrimaryKeyDDL","OraclePlatform","OraclePlatform.html#method_getPrimaryKeyDDL","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Returns the SQL for the primary key of a Table object",2],["OraclePlatform::getUniqueDDL","OraclePlatform","OraclePlatform.html#method_getUniqueDDL","(<a href=\"Unique.html\"><abbr title=\"Unique\">Unique<\/abbr><\/a> $unique)","Builds the DDL SQL for a Unique constraint object.",2],["OraclePlatform::getForeignKeyDDL","OraclePlatform","OraclePlatform.html#method_getForeignKeyDDL","(<a href=\"ForeignKey.html\"><abbr title=\"ForeignKey\">ForeignKey<\/abbr><\/a> $fk)","Builds the DDL SQL for a ForeignKey object.",2],["OraclePlatform::hasStreamBlobImpl","OraclePlatform","OraclePlatform.html#method_hasStreamBlobImpl","()","Whether the underlying PDO driver for this platform",2],["OraclePlatform::quoteIdentifier","OraclePlatform","OraclePlatform.html#method_quoteIdentifier","(string $text)","Quotes identifiers used in database SQL.",2],["OraclePlatform::getTimestampFormatter","OraclePlatform","OraclePlatform.html#method_getTimestampFormatter","()","Gets the preferred timestamp formatter for setting",2],["OraclePlatform::supportsSchemas","OraclePlatform","OraclePlatform.html#method_supportsSchemas","()","",2],["OraclePlatform::generateBlockStorage","OraclePlatform","OraclePlatform.html#method_generateBlockStorage","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a>|<a href=\"Index.html\"><abbr title=\"Index\">Index<\/abbr><\/a> $object, bool $isPrimaryKey = false)","Generate oracle block storage",2],["OraclePlatform::getAddIndexDDL","OraclePlatform","OraclePlatform.html#method_getAddIndexDDL","(<a href=\"Index.html\"><abbr title=\"Index\">Index<\/abbr><\/a> $index)","Builds the DDL SQL to add an Index.",2],["OraclePlatform::getColumnBindingPHP","OraclePlatform","OraclePlatform.html#method_getColumnBindingPHP","($column, $identifier, $columnValueAccessor, $tab = &#039;\t\t\t&#039;)","Get the PHP snippet for binding a value to a column.",2],["OraclePlatform::getIdentifierPhp","OraclePlatform","OraclePlatform.html#method_getIdentifierPhp","($columnValueMutator, $connectionVariableName = &#039;$con&#039;, $sequenceName = &#039;&#039;, $tab = &#039;\t\t\t&#039;)","Get the PHP snippet for getting a Pk from the database.",2],["OraclePlatform::getDefaultFKOnDeleteBehavior","OraclePlatform","OraclePlatform.html#method_getDefaultFKOnDeleteBehavior","()","",2],["OraclePlatform::getDefaultFKOnUpdateBehavior","OraclePlatform","OraclePlatform.html#method_getDefaultFKOnUpdateBehavior","()","",2],["OracleSchemaParser::parse","OracleSchemaParser","OracleSchemaParser.html#method_parse","(<a href=\"Database.html\"><abbr title=\"Database\">Database<\/abbr><\/a> $database, <abbr title=\"Task\">Task<\/abbr> $task = null)","Searches for tables in the database.",2],["PHP5ExtensionNodeBuilder::getUnprefixedClassname","PHP5ExtensionNodeBuilder","PHP5ExtensionNodeBuilder.html#method_getUnprefixedClassname","()","Returns the name of the current class being built.",2],["PHP5ExtensionNodePeerBuilder::getUnprefixedClassname","PHP5ExtensionNodePeerBuilder","PHP5ExtensionNodePeerBuilder.html#method_getUnprefixedClassname","()","Returns the name of the current class being built.",2],["PHP5ExtensionObjectBuilder::getUnprefixedClassname","PHP5ExtensionObjectBuilder","PHP5ExtensionObjectBuilder.html#method_getUnprefixedClassname","()","Returns the name of the current class being built.",2],["PHP5ExtensionPeerBuilder::getUnprefixedClassname","PHP5ExtensionPeerBuilder","PHP5ExtensionPeerBuilder.html#method_getUnprefixedClassname","()","Returns the name of the current class being built.",2],["PHP5InterfaceBuilder::getUnprefixedClassname","PHP5InterfaceBuilder","PHP5InterfaceBuilder.html#method_getUnprefixedClassname","()","Returns the name of the current class being built.",2],["PHP5MultiExtendObjectBuilder::getUnprefixedClassname","PHP5MultiExtendObjectBuilder","PHP5MultiExtendObjectBuilder.html#method_getUnprefixedClassname","()","Returns the name of the current class being built.",2],["PHP5MultiExtendObjectBuilder::getPackage","PHP5MultiExtendObjectBuilder","PHP5MultiExtendObjectBuilder.html#method_getPackage","()","Override method to return child package, if specified.",2],["PHP5MultiExtendObjectBuilder::setChild","PHP5MultiExtendObjectBuilder","PHP5MultiExtendObjectBuilder.html#method_setChild","(<a href=\"Inheritance.html\"><abbr title=\"Inheritance\">Inheritance<\/abbr><\/a> $child)","Set the child object that we're operating on currently.",2],["PHP5MultiExtendObjectBuilder::getChild","PHP5MultiExtendObjectBuilder","PHP5MultiExtendObjectBuilder.html#method_getChild","()","Returns the child object we're operating on currently.",2],["PHP5NestedSetBuilder::getPackage","PHP5NestedSetBuilder","PHP5NestedSetBuilder.html#method_getPackage","()","Gets the package for the [base] object classes.",2],["PHP5NestedSetBuilder::getUnprefixedClassname","PHP5NestedSetBuilder","PHP5NestedSetBuilder.html#method_getUnprefixedClassname","()","Returns the name of the current class being built.",2],["PHP5NestedSetPeerBuilder::getPackage","PHP5NestedSetPeerBuilder","PHP5NestedSetPeerBuilder.html#method_getPackage","()","Gets the package for the [base] object classes.",2],["PHP5NestedSetPeerBuilder::getUnprefixedClassname","PHP5NestedSetPeerBuilder","PHP5NestedSetPeerBuilder.html#method_getUnprefixedClassname","()","Returns the name of the current class being built.",2],["PHP5NodeBuilder::getPackage","PHP5NodeBuilder","PHP5NodeBuilder.html#method_getPackage","()","Gets the package for the [base] object classes.",2],["PHP5NodeBuilder::getUnprefixedClassname","PHP5NodeBuilder","PHP5NodeBuilder.html#method_getUnprefixedClassname","()","Returns the name of the current class being built.",2],["PHP5NodePeerBuilder::getPackage","PHP5NodePeerBuilder","PHP5NodePeerBuilder.html#method_getPackage","()","Gets the package for the [base] object classes.",2],["PHP5NodePeerBuilder::getUnprefixedClassname","PHP5NodePeerBuilder","PHP5NodePeerBuilder.html#method_getUnprefixedClassname","()","Returns the name of the current class being built.",2],["PHP5ObjectBuilder::getPackage","PHP5ObjectBuilder","PHP5ObjectBuilder.html#method_getPackage","()","Gets the package for the [base] object classes.",2],["PHP5ObjectBuilder::getNamespace","PHP5ObjectBuilder","PHP5ObjectBuilder.html#method_getNamespace","()","",2],["PHP5ObjectBuilder::getDefaultKeyType","PHP5ObjectBuilder","PHP5ObjectBuilder.html#method_getDefaultKeyType","()","Returns default key type.",2],["PHP5ObjectBuilder::getUnprefixedClassname","PHP5ObjectBuilder","PHP5ObjectBuilder.html#method_getUnprefixedClassname","()","Returns the name of the current class being built.",2],["PHP5ObjectBuilder::addTemporalAccessorComment","PHP5ObjectBuilder","PHP5ObjectBuilder.html#method_addTemporalAccessorComment","(string $script, <a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $col)","Adds the comment for a temporal accessor",2],["PHP5ObjectBuilder::addTemporalAccessorOpen","PHP5ObjectBuilder","PHP5ObjectBuilder.html#method_addTemporalAccessorOpen","(string $script, <a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $col)","Adds the function declaration for a temporal accessor",2],["PHP5ObjectBuilder::addDefaultAccessorComment","PHP5ObjectBuilder","PHP5ObjectBuilder.html#method_addDefaultAccessorComment","(string $script, <a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $col)","Add the comment for a default accessor method (a getter)",2],["PHP5ObjectBuilder::addDefaultAccessorOpen","PHP5ObjectBuilder","PHP5ObjectBuilder.html#method_addDefaultAccessorOpen","(string $script, <a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $col)","Adds the function declaration for a default accessor",2],["PHP5ObjectBuilder::addMutatorComment","PHP5ObjectBuilder","PHP5ObjectBuilder.html#method_addMutatorComment","(string $script, <a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $col)","Adds the comment for a mutator",2],["PHP5ObjectBuilder::addMutatorOpenOpen","PHP5ObjectBuilder","PHP5ObjectBuilder.html#method_addMutatorOpenOpen","(string $script, <a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $col)","Adds the mutator function declaration",2],["PHP5ObjectBuilder::addTemporalMutatorComment","PHP5ObjectBuilder","PHP5ObjectBuilder.html#method_addTemporalMutatorComment","($script, <a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $col)","",2],["PHP5ObjectBuilder::addBooleanMutatorComment","PHP5ObjectBuilder","PHP5ObjectBuilder.html#method_addBooleanMutatorComment","($script, <a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $col)","",2],["PHP5ObjectBuilder::getFKVarName","PHP5ObjectBuilder","PHP5ObjectBuilder.html#method_getFKVarName","(<a href=\"ForeignKey.html\"><abbr title=\"ForeignKey\">ForeignKey<\/abbr><\/a> $fk)","Constructs variable name for fkey-related objects.",2],["PHP5ObjectBuilder::getRefFKCollVarName","PHP5ObjectBuilder","PHP5ObjectBuilder.html#method_getRefFKCollVarName","(<a href=\"ForeignKey.html\"><abbr title=\"ForeignKey\">ForeignKey<\/abbr><\/a> $fk)","Constructs variable name for objects which referencing",2],["PHP5ObjectBuilder::getPKRefFKVarName","PHP5ObjectBuilder","PHP5ObjectBuilder.html#method_getPKRefFKVarName","(<a href=\"ForeignKey.html\"><abbr title=\"ForeignKey\">ForeignKey<\/abbr><\/a> $fk)","Constructs variable name for single object which references",2],["PHP5PeerBuilder::getUnprefixedClassname","PHP5PeerBuilder","PHP5PeerBuilder.html#method_getUnprefixedClassname","()","Returns the name of the current class being built.",2],["PHP5PeerBuilder::getPackage","PHP5PeerBuilder","PHP5PeerBuilder.html#method_getPackage","()","Gets the package for the [base] peer classes.",2],["PHP5PeerBuilder::getNamespace","PHP5PeerBuilder","PHP5PeerBuilder.html#method_getNamespace","()","",2],["PHP5PeerBuilder::getTableMapClass","PHP5PeerBuilder","PHP5PeerBuilder.html#method_getTableMapClass","()","",2],["PHP5PeerBuilder::getTablePhpName","PHP5PeerBuilder","PHP5PeerBuilder.html#method_getTablePhpName","()","",2],["PHP5PeerBuilder::addInheritanceColumnConstants","PHP5PeerBuilder","PHP5PeerBuilder.html#method_addInheritanceColumnConstants","(string $script)","Adds the CLASSKEY_* and CLASSNAME_* constants used",2],["PHP5PeerBuilder::getInstancePoolKeySnippet","PHP5PeerBuilder","PHP5PeerBuilder.html#method_getInstancePoolKeySnippet","(array $pkphp)","Adds the PHP code to return a instance pool key for",2],["PHP5PeerBuilder::addCriteriaJoin","PHP5PeerBuilder","PHP5PeerBuilder.html#method_addCriteriaJoin","($fk, $table, $joinTable, $joinedTablePeerBuilder)","",2],["PHP5TableMapBuilder::getPackage","PHP5TableMapBuilder","PHP5TableMapBuilder.html#method_getPackage","()","Gets the package for the map builder classes.",2],["PHP5TableMapBuilder::getNamespace","PHP5TableMapBuilder","PHP5TableMapBuilder.html#method_getNamespace","()","Return the user-defined namespace for this table, or",2],["PHP5TableMapBuilder::getUnprefixedClassname","PHP5TableMapBuilder","PHP5TableMapBuilder.html#method_getUnprefixedClassname","()","Returns the name of the current class being built.",2],["PHP5TableMapBuilder::hasBehaviorModifier","PHP5TableMapBuilder","PHP5TableMapBuilder.html#method_hasBehaviorModifier","(string $hookName, string $modifier = null)","Checks whether any registered behavior on that table",2],["PHP5TableMapBuilder::applyBehaviorModifier","PHP5TableMapBuilder","PHP5TableMapBuilder.html#method_applyBehaviorModifier","($hookName, $script, $tab = &#039;\t\t&#039;)","Checks whether any registered behavior on that table",2],["PeerBuilder::__construct","PeerBuilder","PeerBuilder.html#method___construct","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Constructs a new PeerBuilder subclass.",2],["PeerBuilder::getRetrieveMethodName","PeerBuilder","PeerBuilder.html#method_getRetrieveMethodName","()","Returns the retrieveByPK method name to use for this",2],["PeerBuilder::getColumnName","PeerBuilder","PeerBuilder.html#method_getColumnName","(<a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $col, string $phpName = null)","COMPATIBILITY: Get the column constant name (e.g.",2],["PeerBuilder::hasBehaviorModifier","PeerBuilder","PeerBuilder.html#method_hasBehaviorModifier","(string $hookName, string $modifier = null)","Checks whether any registered behavior on that table",2],["PeerBuilder::applyBehaviorModifier","PeerBuilder","PeerBuilder.html#method_applyBehaviorModifier","($hookName, $script, $tab = &#039;\t\t&#039;)","Checks whether any registered behavior on that table",2],["PeerBuilder::getBehaviorContent","PeerBuilder","PeerBuilder.html#method_getBehaviorContent","(string $contentName)","Checks whether any registered behavior content creator",2],["PeerBuilder::getBasePeerClassname","PeerBuilder","PeerBuilder.html#method_getBasePeerClassname","()","Get the BasePeer class name for the current table (e.g.",2],["Persistent::getPrimaryKey","Persistent","Persistent.html#method_getPrimaryKey","()","getter for the object primaryKey.",2],["Persistent::setPrimaryKey","Persistent","Persistent.html#method_setPrimaryKey","(mixed $primaryKey)","Sets the PrimaryKey for the object.",2],["Persistent::isModified","Persistent","Persistent.html#method_isModified","()","Returns whether the object has been modified, since",2],["Persistent::isColumnModified","Persistent","Persistent.html#method_isColumnModified","(string $col)","Has specified column been modified?",2],["Persistent::isNew","Persistent","Persistent.html#method_isNew","()","Returns whether the object has ever been saved.",2],["Persistent::setNew","Persistent","Persistent.html#method_setNew","(boolean $b)","Setter for the isNew attribute.",2],["Persistent::resetModified","Persistent","Persistent.html#method_resetModified","()","Resets (to false) the \"modified\" state for this object.",2],["Persistent::isDeleted","Persistent","Persistent.html#method_isDeleted","()","Whether this object has been deleted.",2],["Persistent::setDeleted","Persistent","Persistent.html#method_setDeleted","(boolean $b)","Specify whether this object has been deleted.",2],["Persistent::delete","Persistent","Persistent.html#method_delete","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Deletes the object.",2],["Persistent::save","Persistent","Persistent.html#method_save","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Saves the object.",2],["PgsqlDataSQLBuilder::__construct","PgsqlDataSQLBuilder","PgsqlDataSQLBuilder.html#method___construct","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Construct a new PgsqlDataSQLBuilder object.",2],["PgsqlDataSQLBuilder::buildRowSql","PgsqlDataSQLBuilder","PgsqlDataSQLBuilder.html#method_buildRowSql","(<a href=\"DataRow.html\"><abbr title=\"DataRow\">DataRow<\/abbr><\/a> $row)","The main method in this class, returns the SQL for",2],["PgsqlDataSQLBuilder::getTableEndSql","PgsqlDataSQLBuilder","PgsqlDataSQLBuilder.html#method_getTableEndSql","()","Gets any SQL to place at the end of row inserts for",2],["PgsqlPlatform::getNativeIdMethod","PgsqlPlatform","PgsqlPlatform.html#method_getNativeIdMethod","()","Returns the native IdMethod (sequence|identity)",2],["PgsqlPlatform::getAutoIncrement","PgsqlPlatform","PgsqlPlatform.html#method_getAutoIncrement","()","",2],["PgsqlPlatform::getMaxColumnNameLength","PgsqlPlatform","PgsqlPlatform.html#method_getMaxColumnNameLength","()","Returns the max column length supported by the db.",2],["PgsqlPlatform::disconnectedEscapeText","PgsqlPlatform","PgsqlPlatform.html#method_disconnectedEscapeText","(string $text)","Escape the string for RDBMS.",2],["PgsqlPlatform::getBooleanString","PgsqlPlatform","PgsqlPlatform.html#method_getBooleanString","($b)","Returns the boolean value for the RDBMS.",2],["PgsqlPlatform::supportsNativeDeleteTrigger","PgsqlPlatform","PgsqlPlatform.html#method_supportsNativeDeleteTrigger","()","Whether RDBMS supports native ON DELETE triggers (e.g.",2],["PgsqlPlatform::getSequenceName","PgsqlPlatform","PgsqlPlatform.html#method_getSequenceName","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Override to provide sequence names that conform to",2],["PgsqlPlatform::getAddSchemasDDL","PgsqlPlatform","PgsqlPlatform.html#method_getAddSchemasDDL","(<a href=\"Database.html\"><abbr title=\"Database\">Database<\/abbr><\/a> $database)","",2],["PgsqlPlatform::getAddSchemaDDL","PgsqlPlatform","PgsqlPlatform.html#method_getAddSchemaDDL","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","",2],["PgsqlPlatform::getUseSchemaDDL","PgsqlPlatform","PgsqlPlatform.html#method_getUseSchemaDDL","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","",2],["PgsqlPlatform::getResetSchemaDDL","PgsqlPlatform","PgsqlPlatform.html#method_getResetSchemaDDL","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","",2],["PgsqlPlatform::getAddTablesDDL","PgsqlPlatform","PgsqlPlatform.html#method_getAddTablesDDL","(<a href=\"Database.html\"><abbr title=\"Database\">Database<\/abbr><\/a> $database)","Builds the DDL SQL to add the tables of a database",2],["PgsqlPlatform::getAddTableDDL","PgsqlPlatform","PgsqlPlatform.html#method_getAddTableDDL","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Builds the DDL SQL to add a table without index and",2],["PgsqlPlatform::getDropTableDDL","PgsqlPlatform","PgsqlPlatform.html#method_getDropTableDDL","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Builds the DDL SQL to drop a table",2],["PgsqlPlatform::getPrimaryKeyName","PgsqlPlatform","PgsqlPlatform.html#method_getPrimaryKeyName","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Returns the name of a table primary key",2],["PgsqlPlatform::getColumnDDL","PgsqlPlatform","PgsqlPlatform.html#method_getColumnDDL","(<a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $col)","Builds the DDL SQL for a Column object.",2],["PgsqlPlatform::getUniqueDDL","PgsqlPlatform","PgsqlPlatform.html#method_getUniqueDDL","(<a href=\"Unique.html\"><abbr title=\"Unique\">Unique<\/abbr><\/a> $unique)","Builds the DDL SQL for a Unique constraint object.",2],["PgsqlPlatform::supportsSchemas","PgsqlPlatform","PgsqlPlatform.html#method_supportsSchemas","()","",2],["PgsqlPlatform::hasSize","PgsqlPlatform","PgsqlPlatform.html#method_hasSize","(string $sqlType)","Returns if the RDBMS-specific SQL type has a size attribute.",2],["PgsqlPlatform::hasStreamBlobImpl","PgsqlPlatform","PgsqlPlatform.html#method_hasStreamBlobImpl","()","Whether the underlying PDO driver for this platform",2],["PgsqlPlatform::supportsVarcharWithoutSize","PgsqlPlatform","PgsqlPlatform.html#method_supportsVarcharWithoutSize","()","Wether RDBMS supports VARCHAR without explicit size",2],["PgsqlPlatform::getModifyColumnDDL","PgsqlPlatform","PgsqlPlatform.html#method_getModifyColumnDDL","(<a href=\"PropelColumnDiff.html\"><abbr title=\"PropelColumnDiff\">PropelColumnDiff<\/abbr><\/a> $columnDiff)","Overrides the implementation from DefaultPlatform",2],["PgsqlPlatform::getModifyColumnsDDL","PgsqlPlatform","PgsqlPlatform.html#method_getModifyColumnsDDL","($columnDiffs)","Overrides the implementation from DefaultPlatform",2],["PgsqlPlatform::getAddColumnsDDL","PgsqlPlatform","PgsqlPlatform.html#method_getAddColumnsDDL","($columns)","Overrides the implementation from DefaultPlatform",2],["PgsqlPlatform::getDropIndexDDL","PgsqlPlatform","PgsqlPlatform.html#method_getDropIndexDDL","(<a href=\"Index.html\"><abbr title=\"Index\">Index<\/abbr><\/a> $index)","Overrides the implementation from DefaultPlatform",2],["PgsqlPlatform::getIdentifierPhp","PgsqlPlatform","PgsqlPlatform.html#method_getIdentifierPhp","($columnValueMutator, $connectionVariableName = &#039;$con&#039;, $sequenceName = &#039;&#039;, $tab = &#039;\t\t\t&#039;)","Get the PHP snippet for getting a Pk from the database.",2],["PgsqlSchemaParser::parse","PgsqlSchemaParser","PgsqlSchemaParser.html#method_parse","(<a href=\"Database.html\"><abbr title=\"Database\">Database<\/abbr><\/a> $database, <abbr title=\"Task\">Task<\/abbr> $task = null)","",2],["PhpNameGenerator::generateName","PhpNameGenerator","PhpNameGenerator.html#method_generateName","(array $inputs)","inputs should consist of two (three) elements,",2],["Pluralizer::getPluralForm","Pluralizer","Pluralizer.html#method_getPluralForm","(string $root)","Generate a plural name based on the passed in root.",2],["PreOrderNodeIterator::__construct","PreOrderNodeIterator","PreOrderNodeIterator.html#method___construct","($node, $opts)","",2],["PreOrderNodeIterator::rewind","PreOrderNodeIterator","PreOrderNodeIterator.html#method_rewind","()","",2],["PreOrderNodeIterator::valid","PreOrderNodeIterator","PreOrderNodeIterator.html#method_valid","()","",2],["PreOrderNodeIterator::current","PreOrderNodeIterator","PreOrderNodeIterator.html#method_current","()","",2],["PreOrderNodeIterator::key","PreOrderNodeIterator","PreOrderNodeIterator.html#method_key","()","",2],["PreOrderNodeIterator::next","PreOrderNodeIterator","PreOrderNodeIterator.html#method_next","()","",2],["Propel::initialize","Propel","Propel.html#method_initialize","()","Initializes Propel",2],["Propel::configure","Propel","Propel.html#method_configure","(string $configFile)","Configure Propel a PHP (array) config file.",2],["Propel::init","Propel","Propel.html#method_init","(string $c)","Initialization of Propel a PHP (array) configuration",2],["Propel::isInit","Propel","Propel.html#method_isInit","()","Determine whether Propel has already been initialized.",2],["Propel::setConfiguration","Propel","Propel.html#method_setConfiguration","(mixed $c)","Sets the configuration for Propel and all dependencies.",2],["Propel::getConfiguration","Propel","Propel.html#method_getConfiguration","(int $type = PropelConfiguration::TYPE_ARRAY)","Get the configuration for this component.",2],["Propel::setLogger","Propel","Propel.html#method_setLogger","(object $logger)","Override the configured logger.",2],["Propel::hasLogger","Propel","Propel.html#method_hasLogger","()","Returns true if a logger, for example PEAR::Log, has",2],["Propel::logger","Propel","Propel.html#method_logger","()","Get the configured logger.",2],["Propel::log","Propel","Propel.html#method_log","(string $message, string $level = self::LOG_DEBUG)","Logs a message If a logger has been configured, the",2],["Propel::getDatabaseMap","Propel","Propel.html#method_getDatabaseMap","(string $name = null)","Returns the database map information.",2],["Propel::setDatabaseMap","Propel","Propel.html#method_setDatabaseMap","(string $name, <a href=\"DatabaseMap.html\"><abbr title=\"DatabaseMap\">DatabaseMap<\/abbr><\/a> $map)","Sets the database map object to use for specified datasource.",2],["Propel::setForceMasterConnection","Propel","Propel.html#method_setForceMasterConnection","(boolean $bit)","For replication, set whether to always force the use",2],["Propel::getForceMasterConnection","Propel","Propel.html#method_getForceMasterConnection","()","For replication, whether to always force the use of",2],["Propel::setConnection","Propel","Propel.html#method_setConnection","(string $name, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con, string $mode = Propel::CONNECTION_WRITE)","Sets a Connection for specified datasource name.",2],["Propel::getConnection","Propel","Propel.html#method_getConnection","(string $name = null, string $mode = Propel::CONNECTION_WRITE)","Gets an already-opened PDO connection or opens a new",2],["Propel::getMasterConnection","Propel","Propel.html#method_getMasterConnection","(string $name)","Gets an already-opened write PDO connection or opens",2],["Propel::getSlaveConnection","Propel","Propel.html#method_getSlaveConnection","(string $name)","Gets an already-opened read PDO connection or opens",2],["Propel::initConnection","Propel","Propel.html#method_initConnection","(array $conparams, string $name, string $defaultClass = Propel::CLASS_PROPEL_PDO)","Opens a new PDO connection for passed-in db name.",2],["Propel::getDB","Propel","Propel.html#method_getDB","(string $name = null)","Returns database adapter for a specific datasource.",2],["Propel::setDB","Propel","Propel.html#method_setDB","(string $name, <a href=\"DBAdapter.html\"><abbr title=\"DBAdapter\">DBAdapter<\/abbr><\/a> $adapter)","Sets a database adapter for specified datasource.",2],["Propel::getDefaultDB","Propel","Propel.html#method_getDefaultDB","()","Returns the name of the default database.",2],["Propel::close","Propel","Propel.html#method_close","()","Closes any associated resource handles.",2],["Propel::autoload","Propel","Propel.html#method_autoload","(string $className)","Autoload function for loading propel dependencies.",2],["Propel::initBaseDir","Propel","Propel.html#method_initBaseDir","()","Initialize the base directory for the autoloader.",2],["Propel::importClass","Propel","Propel.html#method_importClass","($path)","Include once a file specified in DOT notation and return",2],["Propel::setDatabaseMapClass","Propel","Propel.html#method_setDatabaseMapClass","(string $name)","Set your own class-name for Database-Mapping.",2],["Propel::disableInstancePooling","Propel","Propel.html#method_disableInstancePooling","()","Disable instance pooling.",2],["Propel::enableInstancePooling","Propel","Propel.html#method_enableInstancePooling","()","Enable instance pooling (enabled by default).",2],["Propel::isInstancePoolingEnabled","Propel","Propel.html#method_isInstancePoolingEnabled","()","the instance pooling behaviour.",2],["PropelArrayCollection::save","PropelArrayCollection","PropelArrayCollection.html#method_save","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Save all the elements in the collection",2],["PropelArrayCollection::delete","PropelArrayCollection","PropelArrayCollection.html#method_delete","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Delete all the elements in the collection",2],["PropelArrayCollection::getPrimaryKeys","PropelArrayCollection","PropelArrayCollection.html#method_getPrimaryKeys","(boolean $usePrefix = true)","Get an array of the primary keys of all the objects",2],["PropelArrayCollection::fromArray","PropelArrayCollection","PropelArrayCollection.html#method_fromArray","(array $arr)","Populates the collection from an array Uses the object",2],["PropelArrayCollection::toArray","PropelArrayCollection","PropelArrayCollection.html#method_toArray","(string $keyColumn = null, boolean $usePrefix = false, string $keyType = BasePeer::TYPE_PHPNAME, boolean $includeLazyLoadColumns = true, array $alreadyDumpedObjects = array())","Get an array representation of the collection This",2],["PropelArrayCollection::getArrayCopy","PropelArrayCollection","PropelArrayCollection.html#method_getArrayCopy","(string $keyColumn = null, boolean $usePrefix = false)","Synonym for toArray(), to provide a similar interface",2],["PropelArrayCollection::toKeyValue","PropelArrayCollection","PropelArrayCollection.html#method_toKeyValue","(string $keyColumn, string $valueColumn)","Get an associative array representation of the collection",2],["PropelArrayFormatter::format","PropelArrayFormatter","PropelArrayFormatter.html#method_format","(<a href=\"http:\/\/php.net\/PDOStatement\"><abbr title=\"PDOStatement\">PDOStatement<\/abbr><\/a> $stmt)","",2],["PropelArrayFormatter::formatOne","PropelArrayFormatter","PropelArrayFormatter.html#method_formatOne","(<a href=\"http:\/\/php.net\/PDOStatement\"><abbr title=\"PDOStatement\">PDOStatement<\/abbr><\/a> $stmt)","",2],["PropelArrayFormatter::formatRecord","PropelArrayFormatter","PropelArrayFormatter.html#method_formatRecord","(<a href=\"BaseObject.html\"><abbr title=\"BaseObject\">BaseObject<\/abbr><\/a> $record = null)","Formats an ActiveRecord object",2],["PropelArrayFormatter::isObjectFormatter","PropelArrayFormatter","PropelArrayFormatter.html#method_isObjectFormatter","()","",2],["PropelArrayFormatter::getStructuredArrayFromRow","PropelArrayFormatter","PropelArrayFormatter.html#method_getStructuredArrayFromRow","(array $row)","Hydrates a series of objects from a result row The",2],["PropelAutoloader::getInstance","PropelAutoloader","PropelAutoloader.html#method_getInstance","()","Retrieves the singleton instance of this class.",2],["PropelAutoloader::register","PropelAutoloader","PropelAutoloader.html#method_register","()","Register PropelAutoloader in spl autoloader.",2],["PropelAutoloader::unregister","PropelAutoloader","PropelAutoloader.html#method_unregister","()","Unregister PropelAutoloader from spl autoloader.",2],["PropelAutoloader::addClassPaths","PropelAutoloader","PropelAutoloader.html#method_addClassPaths","(array $classMap)","Sets the path for a list of classes.",2],["PropelAutoloader::addClassPath","PropelAutoloader","PropelAutoloader.html#method_addClassPath","(string $class, string $path)","Sets the path for a particular class.",2],["PropelAutoloader::getClassPath","PropelAutoloader","PropelAutoloader.html#method_getClassPath","(string $class)","Returns the path where a particular class can be found.",2],["PropelAutoloader::autoload","PropelAutoloader","PropelAutoloader.html#method_autoload","(string $class)","Handles autoloading of classes that have been registered",2],["PropelCSVParser::fromArray","PropelCSVParser","PropelCSVParser.html#method_fromArray","(array $array, boolean $isList = false, boolean $includeHeading = true)","Converts data from an associative array to CSV.",2],["PropelCSVParser::listFromArray","PropelCSVParser","PropelCSVParser.html#method_listFromArray","($array)","",2],["PropelCSVParser::toCSV","PropelCSVParser","PropelCSVParser.html#method_toCSV","(array $array, boolean $isList = false, boolean $includeHeading = true)","Alias for PropelCSVParser::fromArray()",2],["PropelCSVParser::toArray","PropelCSVParser","PropelCSVParser.html#method_toArray","(string $data, boolean $isList = false, boolean $includeHeading = true)","Converts data from CSV to an associative array.",2],["PropelCSVParser::listToArray","PropelCSVParser","PropelCSVParser.html#method_listToArray","($array)","",2],["PropelCSVParser::fromCSV","PropelCSVParser","PropelCSVParser.html#method_fromCSV","(string $data, boolean $isList = false, boolean $includeHeading = true)","Alias for PropelCSVParser::toArray()",2],["PropelCollection::getData","PropelCollection","PropelCollection.html#method_getData","()","Get the data in the collection",2],["PropelCollection::setData","PropelCollection","PropelCollection.html#method_setData","(array $data)","Set the data in the collection",2],["PropelCollection::getPosition","PropelCollection","PropelCollection.html#method_getPosition","()","Gets the position of the internal pointer This position",2],["PropelCollection::getFirst","PropelCollection","PropelCollection.html#method_getFirst","()","Move the internal pointer to the beginning of the list",2],["PropelCollection::isFirst","PropelCollection","PropelCollection.html#method_isFirst","()","Check whether the internal pointer is at the beginning",2],["PropelCollection::getPrevious","PropelCollection","PropelCollection.html#method_getPrevious","()","Move the internal pointer backward And get the previous",2],["PropelCollection::getCurrent","PropelCollection","PropelCollection.html#method_getCurrent","()","Get the current element in the collection",2],["PropelCollection::getNext","PropelCollection","PropelCollection.html#method_getNext","()","Move the internal pointer forward And get the next",2],["PropelCollection::getLast","PropelCollection","PropelCollection.html#method_getLast","()","Move the internal pointer to the end of the list And",2],["PropelCollection::isLast","PropelCollection","PropelCollection.html#method_isLast","()","Check whether the internal pointer is at the end of",2],["PropelCollection::isEmpty","PropelCollection","PropelCollection.html#method_isEmpty","()","Check if the collection is empty",2],["PropelCollection::isOdd","PropelCollection","PropelCollection.html#method_isOdd","()","Check if the current index is an odd integer",2],["PropelCollection::isEven","PropelCollection","PropelCollection.html#method_isEven","()","Check if the current index is an even integer",2],["PropelCollection::get","PropelCollection","PropelCollection.html#method_get","(mixed $key)","Get an element from its key Alias for ArrayObject::offsetGet()",2],["PropelCollection::pop","PropelCollection","PropelCollection.html#method_pop","()","Pops an element off the end of the collection",2],["PropelCollection::shift","PropelCollection","PropelCollection.html#method_shift","()","Pops an element off the beginning of the collection",2],["PropelCollection::prepend","PropelCollection","PropelCollection.html#method_prepend","(mixed $value)","Prepend one or more elements to the beginning of the",2],["PropelCollection::set","PropelCollection","PropelCollection.html#method_set","(mixed $key, mixed $value)","Add an element to the collection with the given key",2],["PropelCollection::remove","PropelCollection","PropelCollection.html#method_remove","(mixed $key)","Removes a specified collection element Alias for ArrayObject::offsetUnset()",2],["PropelCollection::clear","PropelCollection","PropelCollection.html#method_clear","()","Clears the collection",2],["PropelCollection::contains","PropelCollection","PropelCollection.html#method_contains","(mixed $element)","Whether or not this collection contains a specified",2],["PropelCollection::search","PropelCollection","PropelCollection.html#method_search","(mixed $element)","Search an element in the collection",2],["PropelCollection::diff","PropelCollection","PropelCollection.html#method_diff","(<a href=\"PropelCollection.html\"><abbr title=\"PropelCollection\">PropelCollection<\/abbr><\/a> $collection)","Returns an array of objects present in the collection",2],["PropelCollection::serialize","PropelCollection","PropelCollection.html#method_serialize","()","",2],["PropelCollection::unserialize","PropelCollection","PropelCollection.html#method_unserialize","(string $data)","",2],["PropelCollection::getIterator","PropelCollection","PropelCollection.html#method_getIterator","()","Overrides ArrayObject::getIterator() to save the iterator",2],["PropelCollection::getInternalIterator","PropelCollection","PropelCollection.html#method_getInternalIterator","()","",2],["PropelCollection::clearIterator","PropelCollection","PropelCollection.html#method_clearIterator","()","Clear the internal Iterator.",2],["PropelCollection::setModel","PropelCollection","PropelCollection.html#method_setModel","(string $model)","Set the model of the elements in the collection",2],["PropelCollection::getModel","PropelCollection","PropelCollection.html#method_getModel","()","Get the model of the elements in the collection",2],["PropelCollection::getPeerClass","PropelCollection","PropelCollection.html#method_getPeerClass","()","Get the peer class of the elements in the collection",2],["PropelCollection::setFormatter","PropelCollection","PropelCollection.html#method_setFormatter","(<a href=\"PropelFormatter.html\"><abbr title=\"PropelFormatter\">PropelFormatter<\/abbr><\/a> $formatter)","",2],["PropelCollection::getFormatter","PropelCollection","PropelCollection.html#method_getFormatter","()","",2],["PropelCollection::getConnection","PropelCollection","PropelCollection.html#method_getConnection","(string $type = Propel::CONNECTION_READ)","Get a connection object for the database containing",2],["PropelCollection::importFrom","PropelCollection","PropelCollection.html#method_importFrom","(mixed $parser, string $data)","Populate the current collection from a string, using",2],["PropelCollection::exportTo","PropelCollection","PropelCollection.html#method_exportTo","(mixed $parser, boolean $usePrefix = true, boolean $includeLazyLoadColumns = true)","Export the current collection to a string, using a",2],["PropelCollection::__call","PropelCollection","PropelCollection.html#method___call","(string $name, mixed $params)","Catches calls to undefined methods.",2],["PropelCollection::__toString","PropelCollection","PropelCollection.html#method___toString","()","Returns a string representation of the current collection.",2],["PropelCollection::__clone","PropelCollection","PropelCollection.html#method___clone","()","Creates clones of the containing data.",2],["PropelCollection::toArray","PropelCollection","PropelCollection.html#method_toArray","(string $keyColumn = null, boolean $usePrefix = false, string $keyType = BasePeer::TYPE_PHPNAME, boolean $includeLazyLoadColumns = true, array $alreadyDumpedObjects = array())","Get an array representation of the collection Each",2],["PropelCollection::fromXML","PropelCollection","PropelCollection.html#method_fromXML","(<abbr title=\"string \">string <\/abbr> $data)","Populate the collection from an XML string",2],["PropelCollection::fromYAML","PropelCollection","PropelCollection.html#method_fromYAML","(<abbr title=\"string \">string <\/abbr> $data)","Populate the collection from a YAML string",2],["PropelCollection::fromJSON","PropelCollection","PropelCollection.html#method_fromJSON","(<abbr title=\"string \">string <\/abbr> $data)","Populate the collection from a JSON string",2],["PropelCollection::fromCSV","PropelCollection","PropelCollection.html#method_fromCSV","(<abbr title=\"string \">string <\/abbr> $data)","Populate the collection from a CSV string",2],["PropelCollection::toXML","PropelCollection","PropelCollection.html#method_toXML","(<abbr title=\"boolean \">boolean <\/abbr> $usePrefix, <abbr title=\"boolean \">boolean <\/abbr> $includeLazyLoadColumns)","Export the collection to an XML string",2],["PropelCollection::toYAML","PropelCollection","PropelCollection.html#method_toYAML","(<abbr title=\"boolean \">boolean <\/abbr> $usePrefix, <abbr title=\"boolean \">boolean <\/abbr> $includeLazyLoadColumns)","Export the collection to a YAML string",2],["PropelCollection::toJSON","PropelCollection","PropelCollection.html#method_toJSON","(<abbr title=\"boolean \">boolean <\/abbr> $usePrefix, <abbr title=\"boolean \">boolean <\/abbr> $includeLazyLoadColumns)","Export the collection to a JSON string",2],["PropelCollection::toCSV","PropelCollection","PropelCollection.html#method_toCSV","(<abbr title=\"boolean \">boolean <\/abbr> $usePrefix, <abbr title=\"boolean \">boolean <\/abbr> $includeLazyLoadColumns)","Export the collection to a CSV string",2],["PropelColumnComparator::computeDiff","PropelColumnComparator","PropelColumnComparator.html#method_computeDiff","(<a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $fromColumn, <a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $toColumn)","Compute and return the difference between two column",2],["PropelColumnComparator::compareColumns","PropelColumnComparator","PropelColumnComparator.html#method_compareColumns","(<a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $fromColumn, <a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $toColumn)","",2],["PropelColumnDiff::setChangedProperties","PropelColumnDiff","PropelColumnDiff.html#method_setChangedProperties","(array $changedProperties)","Setter for the changedProperties property",2],["PropelColumnDiff::getChangedProperties","PropelColumnDiff","PropelColumnDiff.html#method_getChangedProperties","()","Getter for the changedProperties property",2],["PropelColumnDiff::setFromColumn","PropelColumnDiff","PropelColumnDiff.html#method_setFromColumn","(<a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $fromColumn)","Setter for the fromColumn property",2],["PropelColumnDiff::getFromColumn","PropelColumnDiff","PropelColumnDiff.html#method_getFromColumn","()","Getter for the fromColumn property",2],["PropelColumnDiff::setToColumn","PropelColumnDiff","PropelColumnDiff.html#method_setToColumn","(<a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $toColumn)","Setter for the toColumn property",2],["PropelColumnDiff::getToColumn","PropelColumnDiff","PropelColumnDiff.html#method_getToColumn","()","Getter for the toColumn property",2],["PropelColumnDiff::getReverseDiff","PropelColumnDiff","PropelColumnDiff.html#method_getReverseDiff","()","Get the reverse diff for this diff",2],["PropelColumnDiff::__toString","PropelColumnDiff","PropelColumnDiff.html#method___toString","()","",2],["PropelColumnTypes::getPdoType","PropelColumnTypes","PropelColumnTypes.html#method_getPdoType","(string $propelType)","Returns the PDO type (PDO::PARAM_* constant) value",2],["PropelConditionalProxy::__construct","PropelConditionalProxy","PropelConditionalProxy.html#method___construct","($criteria, $cond, $proxy = null)","",2],["PropelConditionalProxy::_if","PropelConditionalProxy","PropelConditionalProxy.html#method__if","(bool $cond)","Returns a new level PropelConditionalProxy instance.",2],["PropelConditionalProxy::_elseif","PropelConditionalProxy","PropelConditionalProxy.html#method__elseif","(bool $cond)","Allows for conditional statements in a fluid interface.",2],["PropelConditionalProxy::_else","PropelConditionalProxy","PropelConditionalProxy.html#method__else","()","Allows for conditional statements in a fluid interface.",2],["PropelConditionalProxy::_endif","PropelConditionalProxy","PropelConditionalProxy.html#method__endif","()","Returns the parent object Allows for conditional statements",2],["PropelConditionalProxy::getParentProxy","PropelConditionalProxy","PropelConditionalProxy.html#method_getParentProxy","()","",2],["PropelConditionalProxy::getCriteriaOrProxy","PropelConditionalProxy","PropelConditionalProxy.html#method_getCriteriaOrProxy","()","",2],["PropelConditionalProxy::__call","PropelConditionalProxy","PropelConditionalProxy.html#method___call","($name, $arguments)","",2],["PropelConfiguration::__construct","PropelConfiguration","PropelConfiguration.html#method___construct","(array $parameters = array())","Construct a new configuration container",2],["PropelConfiguration::offsetExists","PropelConfiguration","PropelConfiguration.html#method_offsetExists","(integer $offset)","",2],["PropelConfiguration::offsetSet","PropelConfiguration","PropelConfiguration.html#method_offsetSet","(integer $offset, mixed $value)","",2],["PropelConfiguration::offsetGet","PropelConfiguration","PropelConfiguration.html#method_offsetGet","(integer $offset)","",2],["PropelConfiguration::offsetUnset","PropelConfiguration","PropelConfiguration.html#method_offsetUnset","(integer $offset)","",2],["PropelConfiguration::getParameter","PropelConfiguration","PropelConfiguration.html#method_getParameter","(string $name, mixed $default = null)","Get a value from the container, using a namespaced",2],["PropelConfiguration::setParameter","PropelConfiguration","PropelConfiguration.html#method_setParameter","(string $name, mixed $value, Boolean $autoFlattenArrays = true)","Store a value to the container.",2],["PropelConfiguration::getParameters","PropelConfiguration","PropelConfiguration.html#method_getParameters","(integer $type = PropelConfiguration::TYPE_ARRAY)","",2],["PropelConfiguration::getFlattenedParameters","PropelConfiguration","PropelConfiguration.html#method_getFlattenedParameters","()","",2],["PropelConfigurationIterator::getNamespace","PropelConfigurationIterator","PropelConfigurationIterator.html#method_getNamespace","()","Get current namespace",2],["PropelConfigurationIterator::getNodeType","PropelConfigurationIterator","PropelConfigurationIterator.html#method_getNodeType","()","Get current node type.",2],["PropelConfigurationIterator::current","PropelConfigurationIterator","PropelConfigurationIterator.html#method_current","()","Get the current element",2],["PropelConfigurationIterator::endChildren","PropelConfigurationIterator","PropelConfigurationIterator.html#method_endChildren","()","Called after current child iterator is invalid and",2],["PropelConvertConfTask::setXmlConfFile","PropelConvertConfTask","PropelConvertConfTask.html#method_setXmlConfFile","(<abbr title=\"PhingFile\">PhingFile<\/abbr> $v)","[REQUIRED] Set the input XML runtime conf file.",2],["PropelConvertConfTask::setOutputFile","PropelConvertConfTask","PropelConvertConfTask.html#method_setOutputFile","(string $outputFile)","[REQUIRED] Set the output filename for the converted",2],["PropelConvertConfTask::setOutputClassmapFile","PropelConvertConfTask","PropelConvertConfTask.html#method_setOutputClassmapFile","(string $outputFile)","[REQUIRED] Set the output filename for the autoload",2],["PropelConvertConfTask::main","PropelConvertConfTask","PropelConvertConfTask.html#method_main","()","The main method does the work of the task.",2],["PropelDataDumpTask::setDataDbMap","PropelDataDumpTask","PropelDataDumpTask.html#method_setDataDbMap","(<abbr title=\"PhingFile\">PhingFile<\/abbr> $datadbmap)","Set the file that maps between data XML files and databases.",2],["PropelDataDumpTask::getDataDbMap","PropelDataDumpTask","PropelDataDumpTask.html#method_getDataDbMap","()","Get the file that maps between data XML files and databases.",2],["PropelDataDumpTask::getDatabaseName","PropelDataDumpTask","PropelDataDumpTask.html#method_getDatabaseName","()","Get the database name to dump",2],["PropelDataDumpTask::setDatabaseName","PropelDataDumpTask","PropelDataDumpTask.html#method_setDatabaseName","(<abbr title=\"$v\">$v<\/abbr> $v)","Set the database name",2],["PropelDataDumpTask::getDatabaseUrl","PropelDataDumpTask","PropelDataDumpTask.html#method_getDatabaseUrl","()","Get the database url",2],["PropelDataDumpTask::setDatabaseUrl","PropelDataDumpTask","PropelDataDumpTask.html#method_setDatabaseUrl","(string $v)","Set the database url",2],["PropelDataDumpTask::getDatabaseUser","PropelDataDumpTask","PropelDataDumpTask.html#method_getDatabaseUser","()","Get the database user",2],["PropelDataDumpTask::setDatabaseUser","PropelDataDumpTask","PropelDataDumpTask.html#method_setDatabaseUser","(string $v)","Set the database user",2],["PropelDataDumpTask::getDatabasePassword","PropelDataDumpTask","PropelDataDumpTask.html#method_getDatabasePassword","()","Get the database password",2],["PropelDataDumpTask::setDatabasePassword","PropelDataDumpTask","PropelDataDumpTask.html#method_setDatabasePassword","(string $v)","Set the database password",2],["PropelDataDumpTask::getDatabaseDriver","PropelDataDumpTask","PropelDataDumpTask.html#method_getDatabaseDriver","()","Get the database driver name",2],["PropelDataDumpTask::setDatabaseDriver","PropelDataDumpTask","PropelDataDumpTask.html#method_setDatabaseDriver","(string $v)","Set the database driver name",2],["PropelDataDumpTask::main","PropelDataDumpTask","PropelDataDumpTask.html#method_main","()","Iterates through each datamodel\/database, dumps the",2],["PropelDataSQLTask::setSqlDbMap","PropelDataSQLTask","PropelDataSQLTask.html#method_setSqlDbMap","(<abbr title=\"PhingFile\">PhingFile<\/abbr> $sqldbmap)","Set the file that maps between SQL files and databases.",2],["PropelDataSQLTask::getSqlDbMap","PropelDataSQLTask","PropelDataSQLTask.html#method_getSqlDbMap","()","Get the file that maps between SQL files and databases.",2],["PropelDataSQLTask::setDataDbMap","PropelDataSQLTask","PropelDataSQLTask.html#method_setDataDbMap","(<abbr title=\"PhingFile\">PhingFile<\/abbr> $datadbmap)","Set the file that maps between data XML files and databases.",2],["PropelDataSQLTask::getDataDbMap","PropelDataSQLTask","PropelDataSQLTask.html#method_getDataDbMap","()","Get the file that maps between data XML files and databases.",2],["PropelDataSQLTask::setSrcDir","PropelDataSQLTask","PropelDataSQLTask.html#method_setSrcDir","(<abbr title=\"PhingFile\">PhingFile<\/abbr> $srcDir)","Set the src directory for the data xml files listed",2],["PropelDataSQLTask::getSrcDir","PropelDataSQLTask","PropelDataSQLTask.html#method_getSrcDir","()","Get the src directory for the data xml files listed",2],["PropelDataSQLTask::main","PropelDataSQLTask","PropelDataSQLTask.html#method_main","()","Main method parses the XML files and creates SQL files.",2],["PropelDatabaseComparator::__construct","PropelDatabaseComparator","PropelDatabaseComparator.html#method___construct","($databaseDiff = null)","",2],["PropelDatabaseComparator::getDatabaseDiff","PropelDatabaseComparator","PropelDatabaseComparator.html#method_getDatabaseDiff","()","",2],["PropelDatabaseComparator::setFromDatabase","PropelDatabaseComparator","PropelDatabaseComparator.html#method_setFromDatabase","(<a href=\"Database.html\"><abbr title=\"Database\">Database<\/abbr><\/a> $fromDatabase)","Setter for the fromDatabase property",2],["PropelDatabaseComparator::getFromDatabase","PropelDatabaseComparator","PropelDatabaseComparator.html#method_getFromDatabase","()","Getter for the fromDatabase property",2],["PropelDatabaseComparator::setToDatabase","PropelDatabaseComparator","PropelDatabaseComparator.html#method_setToDatabase","(<a href=\"Database.html\"><abbr title=\"Database\">Database<\/abbr><\/a> $toDatabase)","Setter for the toDatabase property",2],["PropelDatabaseComparator::getToDatabase","PropelDatabaseComparator","PropelDatabaseComparator.html#method_getToDatabase","()","Getter for the toDatabase property",2],["PropelDatabaseComparator::computeDiff","PropelDatabaseComparator","PropelDatabaseComparator.html#method_computeDiff","(<a href=\"Database.html\"><abbr title=\"Database\">Database<\/abbr><\/a> $fromDatabase, <a href=\"Database.html\"><abbr title=\"Database\">Database<\/abbr><\/a> $toDatabase, boolean $caseInsensitive = false)","Compute and return the difference between two database",2],["PropelDatabaseComparator::compareTables","PropelDatabaseComparator","PropelDatabaseComparator.html#method_compareTables","(boolean $caseInsensitive = false)","Compare the tables of the fromDatabase and the toDatabase,",2],["PropelDatabaseDiff::setAddedTables","PropelDatabaseDiff","PropelDatabaseDiff.html#method_setAddedTables","(array $addedTables)","Setter for the addedTables property",2],["PropelDatabaseDiff::addAddedTable","PropelDatabaseDiff","PropelDatabaseDiff.html#method_addAddedTable","(string $tableName, <a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $addedTable)","Add an added table",2],["PropelDatabaseDiff::removeAddedTable","PropelDatabaseDiff","PropelDatabaseDiff.html#method_removeAddedTable","(string $tableName)","Remove an added table",2],["PropelDatabaseDiff::getAddedTables","PropelDatabaseDiff","PropelDatabaseDiff.html#method_getAddedTables","()","Getter for the addedTables property",2],["PropelDatabaseDiff::countAddedTables","PropelDatabaseDiff","PropelDatabaseDiff.html#method_countAddedTables","()","Get the number of added tables",2],["PropelDatabaseDiff::getAddedTable","PropelDatabaseDiff","PropelDatabaseDiff.html#method_getAddedTable","($tableName)","Get an added table",2],["PropelDatabaseDiff::setRemovedTables","PropelDatabaseDiff","PropelDatabaseDiff.html#method_setRemovedTables","(array $removedTables)","Setter for the removedTables property",2],["PropelDatabaseDiff::addRemovedTable","PropelDatabaseDiff","PropelDatabaseDiff.html#method_addRemovedTable","(string $tableName, <a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $removedTable)","Add a removed table",2],["PropelDatabaseDiff::removeRemovedTable","PropelDatabaseDiff","PropelDatabaseDiff.html#method_removeRemovedTable","(string $tableName)","Remove a removed table",2],["PropelDatabaseDiff::getRemovedTables","PropelDatabaseDiff","PropelDatabaseDiff.html#method_getRemovedTables","()","Getter for the removedTables property",2],["PropelDatabaseDiff::countRemovedTables","PropelDatabaseDiff","PropelDatabaseDiff.html#method_countRemovedTables","()","Get the number of removed tables",2],["PropelDatabaseDiff::getRemovedTable","PropelDatabaseDiff","PropelDatabaseDiff.html#method_getRemovedTable","($tableName)","Get a removed table",2],["PropelDatabaseDiff::setModifiedTables","PropelDatabaseDiff","PropelDatabaseDiff.html#method_setModifiedTables","(array $modifiedTables)","Setter for the modifiedTables property",2],["PropelDatabaseDiff::addModifiedTable","PropelDatabaseDiff","PropelDatabaseDiff.html#method_addModifiedTable","(string $tableName, <a href=\"PropelTableDiff.html\"><abbr title=\"PropelTableDiff\">PropelTableDiff<\/abbr><\/a> $modifiedTable)","Add a table difference",2],["PropelDatabaseDiff::countModifiedTables","PropelDatabaseDiff","PropelDatabaseDiff.html#method_countModifiedTables","()","Get the number of modified tables",2],["PropelDatabaseDiff::getModifiedTables","PropelDatabaseDiff","PropelDatabaseDiff.html#method_getModifiedTables","()","Getter for the modifiedTables property",2],["PropelDatabaseDiff::setRenamedTables","PropelDatabaseDiff","PropelDatabaseDiff.html#method_setRenamedTables","(array $renamedTables)","Setter for the renamedTables property",2],["PropelDatabaseDiff::addRenamedTable","PropelDatabaseDiff","PropelDatabaseDiff.html#method_addRenamedTable","(string $fromName, string $toName)","Add a renamed table",2],["PropelDatabaseDiff::getRenamedTables","PropelDatabaseDiff","PropelDatabaseDiff.html#method_getRenamedTables","()","Getter for the renamedTables property",2],["PropelDatabaseDiff::countRenamedTables","PropelDatabaseDiff","PropelDatabaseDiff.html#method_countRenamedTables","()","Get the number of renamed tables",2],["PropelDatabaseDiff::getReverseDiff","PropelDatabaseDiff","PropelDatabaseDiff.html#method_getReverseDiff","()","Get the reverse diff for this diff",2],["PropelDatabaseDiff::getDescription","PropelDatabaseDiff","PropelDatabaseDiff.html#method_getDescription","()","Get a description of the database modifications",2],["PropelDatabaseDiff::__toString","PropelDatabaseDiff","PropelDatabaseDiff.html#method___toString","()","",2],["PropelDateTime::newInstance","PropelDateTime","PropelDateTime.html#method_newInstance","(mixed $value, <a href=\"http:\/\/php.net\/DateTimeZone\"><abbr title=\"DateTimeZone\">DateTimeZone<\/abbr><\/a> $timeZone = null, string $dateTimeClass = &#039;DateTime&#039;)","Factory method to get a DateTime object from a temporal",2],["PropelDateTime::isTimestamp","PropelDateTime","PropelDateTime.html#method_isTimestamp","($value)","",2],["PropelDateTime::__sleep","PropelDateTime","PropelDateTime.html#method___sleep","()","PHP \"magic\" function called when object is serialized.",2],["PropelDateTime::__wakeup","PropelDateTime","PropelDateTime.html#method___wakeup","()","PHP \"magic\" function called when object is restored",2],["PropelDotGenerator::create","PropelDotGenerator","PropelDotGenerator.html#method_create","(<a href=\"Database.html\"><abbr title=\"Database\">Database<\/abbr><\/a> $database)","Create the DOT syntax for a given databases.",2],["PropelException::__construct","PropelException","PropelException.html#method___construct","(string $message = null, <a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $previous = null)","Emulates wrapped exceptions for PHP < 5.3",2],["PropelException::getCause","PropelException","PropelException.html#method_getCause","()","Get the previous Exception We can't override getPrevious()",2],["PropelForeignKeyComparator::computeDiff","PropelForeignKeyComparator","PropelForeignKeyComparator.html#method_computeDiff","(<a href=\"ForeignKey.html\"><abbr title=\"ForeignKey\">ForeignKey<\/abbr><\/a> $fromFk, <a href=\"ForeignKey.html\"><abbr title=\"ForeignKey\">ForeignKey<\/abbr><\/a> $toFk, boolean $caseInsensitive = false)","Compute the difference between two Foreign key objects",2],["PropelFormatter::__construct","PropelFormatter","PropelFormatter.html#method___construct","(<a href=\"ModelCriteria.html\"><abbr title=\"ModelCriteria\">ModelCriteria<\/abbr><\/a> $criteria = null)","",2],["PropelFormatter::init","PropelFormatter","PropelFormatter.html#method_init","(<a href=\"ModelCriteria.html\"><abbr title=\"ModelCriteria\">ModelCriteria<\/abbr><\/a> $criteria)","Define the hydration schema based on a query object.",2],["PropelFormatter::setDbName","PropelFormatter","PropelFormatter.html#method_setDbName","($dbName)","",2],["PropelFormatter::getDbName","PropelFormatter","PropelFormatter.html#method_getDbName","()","",2],["PropelFormatter::setClass","PropelFormatter","PropelFormatter.html#method_setClass","($class)","",2],["PropelFormatter::getClass","PropelFormatter","PropelFormatter.html#method_getClass","()","",2],["PropelFormatter::setPeer","PropelFormatter","PropelFormatter.html#method_setPeer","($peer)","",2],["PropelFormatter::getPeer","PropelFormatter","PropelFormatter.html#method_getPeer","()","",2],["PropelFormatter::setWith","PropelFormatter","PropelFormatter.html#method_setWith","($withs = array())","",2],["PropelFormatter::getWith","PropelFormatter","PropelFormatter.html#method_getWith","()","",2],["PropelFormatter::setAsColumns","PropelFormatter","PropelFormatter.html#method_setAsColumns","($asColumns = array())","",2],["PropelFormatter::getAsColumns","PropelFormatter","PropelFormatter.html#method_getAsColumns","()","",2],["PropelFormatter::setHasLimit","PropelFormatter","PropelFormatter.html#method_setHasLimit","($hasLimit = false)","",2],["PropelFormatter::hasLimit","PropelFormatter","PropelFormatter.html#method_hasLimit","()","",2],["PropelFormatter::formatRecord","PropelFormatter","PropelFormatter.html#method_formatRecord","(<a href=\"BaseObject.html\"><abbr title=\"BaseObject\">BaseObject<\/abbr><\/a> $record = null)","Formats an ActiveRecord object",2],["PropelFormatter::format","PropelFormatter","PropelFormatter.html#method_format","(<a href=\"http:\/\/php.net\/PDOStatement\"><abbr title=\"PDOStatement\">PDOStatement<\/abbr><\/a> $stmt)","",2],["PropelFormatter::formatOne","PropelFormatter","PropelFormatter.html#method_formatOne","(<a href=\"http:\/\/php.net\/PDOStatement\"><abbr title=\"PDOStatement\">PDOStatement<\/abbr><\/a> $stmt)","",2],["PropelFormatter::isObjectFormatter","PropelFormatter","PropelFormatter.html#method_isObjectFormatter","()","",2],["PropelFormatter::checkInit","PropelFormatter","PropelFormatter.html#method_checkInit","()","",2],["PropelFormatter::getTableMap","PropelFormatter","PropelFormatter.html#method_getTableMap","()","",2],["PropelFormatter::getSingleObjectFromRow","PropelFormatter","PropelFormatter.html#method_getSingleObjectFromRow","(array $row, string $class, int $col)","Gets a Propel object hydrated from a selection of columns",2],["PropelGraphvizTask::setOutputDirectory","PropelGraphvizTask","PropelGraphvizTask.html#method_setOutputDirectory","(<abbr title=\"PhingFile\">PhingFile<\/abbr> $out)","Set the sqldbmap.",2],["PropelGraphvizTask::setSqlDbMap","PropelGraphvizTask","PropelGraphvizTask.html#method_setSqlDbMap","(<abbr title=\"PhingFile\">PhingFile<\/abbr> $sqldbmap)","Set the sqldbmap.",2],["PropelGraphvizTask::getSqlDbMap","PropelGraphvizTask","PropelGraphvizTask.html#method_getSqlDbMap","()","Get the sqldbmap.",2],["PropelGraphvizTask::setDatabase","PropelGraphvizTask","PropelGraphvizTask.html#method_setDatabase","(string $database)","Set the database name.",2],["PropelGraphvizTask::getDatabase","PropelGraphvizTask","PropelGraphvizTask.html#method_getDatabase","()","Get the database name.",2],["PropelGraphvizTask::main","PropelGraphvizTask","PropelGraphvizTask.html#method_main","()","",2],["PropelGraphvizTask::writeDot","PropelGraphvizTask","PropelGraphvizTask.html#method_writeDot","($dotSyntax, <abbr title=\"PhingFile\">PhingFile<\/abbr> $outputDir, $baseFilename)","probably insecure",2],["PropelIndexComparator::computeDiff","PropelIndexComparator","PropelIndexComparator.html#method_computeDiff","(<a href=\"Index.html\"><abbr title=\"Index\">Index<\/abbr><\/a> $fromIndex, <a href=\"Index.html\"><abbr title=\"Index\">Index<\/abbr><\/a> $toIndex, boolean $caseInsensitive = false)","Compute the difference between two index objects",2],["PropelJSONParser::fromArray","PropelJSONParser","PropelJSONParser.html#method_fromArray","(array $array)","Converts data from an associative array to JSON.",2],["PropelJSONParser::toJSON","PropelJSONParser","PropelJSONParser.html#method_toJSON","(array $array)","Alias for PropelJSONParser::fromArray()",2],["PropelJSONParser::toArray","PropelJSONParser","PropelJSONParser.html#method_toArray","(string $data)","Converts data from JSON to an associative array.",2],["PropelJSONParser::fromJSON","PropelJSONParser","PropelJSONParser.html#method_fromJSON","(string $data)","Alias for PropelJSONParser::toArray()",2],["PropelMigrationDownTask::main","PropelMigrationDownTask","PropelMigrationDownTask.html#method_main","()","Main method builds all the targets for a typical propel",2],["PropelMigrationManager::setConnections","PropelMigrationManager","PropelMigrationManager.html#method_setConnections","(array $connections)","Set the database connection settings",2],["PropelMigrationManager::getConnections","PropelMigrationManager","PropelMigrationManager.html#method_getConnections","()","Get the database connection settings",2],["PropelMigrationManager::getConnection","PropelMigrationManager","PropelMigrationManager.html#method_getConnection","($datasource)","",2],["PropelMigrationManager::getPdoConnection","PropelMigrationManager","PropelMigrationManager.html#method_getPdoConnection","($datasource)","",2],["PropelMigrationManager::getPlatform","PropelMigrationManager","PropelMigrationManager.html#method_getPlatform","($datasource)","",2],["PropelMigrationManager::setMigrationTable","PropelMigrationManager","PropelMigrationManager.html#method_setMigrationTable","(string $migrationTable)","Set the migration table name",2],["PropelMigrationManager::getMigrationTable","PropelMigrationManager","PropelMigrationManager.html#method_getMigrationTable","()","get the migration table name",2],["PropelMigrationManager::setMigrationDir","PropelMigrationManager","PropelMigrationManager.html#method_setMigrationDir","(string $migrationDir)","Set the path to the migration classes",2],["PropelMigrationManager::getMigrationDir","PropelMigrationManager","PropelMigrationManager.html#method_getMigrationDir","()","Get the path to the migration classes",2],["PropelMigrationManager::getOldestDatabaseVersion","PropelMigrationManager","PropelMigrationManager.html#method_getOldestDatabaseVersion","()","",2],["PropelMigrationManager::migrationTableExists","PropelMigrationManager","PropelMigrationManager.html#method_migrationTableExists","($datasource)","",2],["PropelMigrationManager::createMigrationTable","PropelMigrationManager","PropelMigrationManager.html#method_createMigrationTable","($datasource)","",2],["PropelMigrationManager::updateLatestMigrationTimestamp","PropelMigrationManager","PropelMigrationManager.html#method_updateLatestMigrationTimestamp","($datasource, $timestamp)","",2],["PropelMigrationManager::getMigrationTimestamps","PropelMigrationManager","PropelMigrationManager.html#method_getMigrationTimestamps","()","",2],["PropelMigrationManager::getValidMigrationTimestamps","PropelMigrationManager","PropelMigrationManager.html#method_getValidMigrationTimestamps","()","",2],["PropelMigrationManager::hasPendingMigrations","PropelMigrationManager","PropelMigrationManager.html#method_hasPendingMigrations","()","",2],["PropelMigrationManager::getAlreadyExecutedMigrationTimestamps","PropelMigrationManager","PropelMigrationManager.html#method_getAlreadyExecutedMigrationTimestamps","()","",2],["PropelMigrationManager::getFirstUpMigrationTimestamp","PropelMigrationManager","PropelMigrationManager.html#method_getFirstUpMigrationTimestamp","()","",2],["PropelMigrationManager::getFirstDownMigrationTimestamp","PropelMigrationManager","PropelMigrationManager.html#method_getFirstDownMigrationTimestamp","()","",2],["PropelMigrationManager::getMigrationClassName","PropelMigrationManager","PropelMigrationManager.html#method_getMigrationClassName","($timestamp)","",2],["PropelMigrationManager::getMigrationObject","PropelMigrationManager","PropelMigrationManager.html#method_getMigrationObject","($timestamp)","",2],["PropelMigrationManager::getMigrationClassBody","PropelMigrationManager","PropelMigrationManager.html#method_getMigrationClassBody","($migrationsUp, $migrationsDown, $timestamp)","",2],["PropelMigrationManager::getMigrationFileName","PropelMigrationManager","PropelMigrationManager.html#method_getMigrationFileName","($timestamp)","",2],["PropelMigrationManager::getUser","PropelMigrationManager","PropelMigrationManager.html#method_getUser","()","",2],["PropelMigrationStatusTask::main","PropelMigrationStatusTask","PropelMigrationStatusTask.html#method_main","()","",2],["PropelMigrationTask::main","PropelMigrationTask","PropelMigrationTask.html#method_main","()","Main method builds all the targets for a typical propel",2],["PropelMigrationUpTask::main","PropelMigrationUpTask","PropelMigrationUpTask.html#method_main","()","Main method builds all the targets for a typical propel",2],["PropelModelPager::__construct","PropelModelPager","PropelModelPager.html#method___construct","(<a href=\"ModelCriteria.html\"><abbr title=\"ModelCriteria\">ModelCriteria<\/abbr><\/a> $query, $maxPerPage = 10)","",2],["PropelModelPager::setQuery","PropelModelPager","PropelModelPager.html#method_setQuery","(<a href=\"ModelCriteria.html\"><abbr title=\"ModelCriteria\">ModelCriteria<\/abbr><\/a> $query)","",2],["PropelModelPager::getQuery","PropelModelPager","PropelModelPager.html#method_getQuery","()","",2],["PropelModelPager::init","PropelModelPager","PropelModelPager.html#method_init","($con = null)","",2],["PropelModelPager::getResults","PropelModelPager","PropelModelPager.html#method_getResults","()","Get the collection of results in the page",2],["PropelModelPager::getCurrentMaxLink","PropelModelPager","PropelModelPager.html#method_getCurrentMaxLink","()","",2],["PropelModelPager::getMaxRecordLimit","PropelModelPager","PropelModelPager.html#method_getMaxRecordLimit","()","",2],["PropelModelPager::setMaxRecordLimit","PropelModelPager","PropelModelPager.html#method_setMaxRecordLimit","($limit)","",2],["PropelModelPager::getLinks","PropelModelPager","PropelModelPager.html#method_getLinks","($nb_links = 5)","",2],["PropelModelPager::haveToPaginate","PropelModelPager","PropelModelPager.html#method_haveToPaginate","()","Test whether the number of results exceeds the max",2],["PropelModelPager::getFirstIndex","PropelModelPager","PropelModelPager.html#method_getFirstIndex","()","Get the index of the first element in the page Returns",2],["PropelModelPager::getLastIndex","PropelModelPager","PropelModelPager.html#method_getLastIndex","()","Get the index of the last element in the page Always",2],["PropelModelPager::getNbResults","PropelModelPager","PropelModelPager.html#method_getNbResults","()","Get the total number of results of the query This can",2],["PropelModelPager::isFirstPage","PropelModelPager","PropelModelPager.html#method_isFirstPage","()","Check whether the current page is the first page",2],["PropelModelPager::getFirstPage","PropelModelPager","PropelModelPager.html#method_getFirstPage","()","Get the number of the first page",2],["PropelModelPager::isLastPage","PropelModelPager","PropelModelPager.html#method_isLastPage","()","Check whether the current page is the last page",2],["PropelModelPager::getLastPage","PropelModelPager","PropelModelPager.html#method_getLastPage","()","Get the number of the last page",2],["PropelModelPager::getPage","PropelModelPager","PropelModelPager.html#method_getPage","()","Get the number of the current page",2],["PropelModelPager::setPage","PropelModelPager","PropelModelPager.html#method_setPage","(int $page)","Set the number of the current page",2],["PropelModelPager::getNextPage","PropelModelPager","PropelModelPager.html#method_getNextPage","()","Get the number of the next page",2],["PropelModelPager::getPreviousPage","PropelModelPager","PropelModelPager.html#method_getPreviousPage","()","Get the number of the previous page",2],["PropelModelPager::getMaxPerPage","PropelModelPager","PropelModelPager.html#method_getMaxPerPage","()","Get the maximum number results per page",2],["PropelModelPager::setMaxPerPage","PropelModelPager","PropelModelPager.html#method_setMaxPerPage","(int $max)","Set the maximum number results per page",2],["PropelModelPager::isFirst","PropelModelPager","PropelModelPager.html#method_isFirst","()","Check whether the internal pointer is at the beginning",2],["PropelModelPager::isLast","PropelModelPager","PropelModelPager.html#method_isLast","()","Check whether the internal pointer is at the end of",2],["PropelModelPager::isEmpty","PropelModelPager","PropelModelPager.html#method_isEmpty","()","Check if the collection is empty",2],["PropelModelPager::isOdd","PropelModelPager","PropelModelPager.html#method_isOdd","()","Check if the current index is an odd integer",2],["PropelModelPager::isEven","PropelModelPager","PropelModelPager.html#method_isEven","()","Check if the current index is an even integer",2],["PropelModelPager::getIterator","PropelModelPager","PropelModelPager.html#method_getIterator","()","",2],["PropelModelPager::count","PropelModelPager","PropelModelPager.html#method_count","()","Returns the total number of results.",2],["PropelOMTask::setTargetPlatform","PropelOMTask","PropelOMTask.html#method_setTargetPlatform","(string $v)","Sets the platform (php4, php5, etc.) for which the",2],["PropelOMTask::getTargetPlatform","PropelOMTask","PropelOMTask.html#method_getTargetPlatform","()","Gets the platform (php4, php5, etc.) for which the",2],["PropelOMTask::main","PropelOMTask","PropelOMTask.html#method_main","()","Main method builds all the targets for a typical propel",2],["PropelObjectCollection::save","PropelObjectCollection","PropelObjectCollection.html#method_save","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Save all the elements in the collection",2],["PropelObjectCollection::delete","PropelObjectCollection","PropelObjectCollection.html#method_delete","(<a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Delete all the elements in the collection",2],["PropelObjectCollection::getPrimaryKeys","PropelObjectCollection","PropelObjectCollection.html#method_getPrimaryKeys","(boolean $usePrefix = true)","Get an array of the primary keys of all the objects",2],["PropelObjectCollection::fromArray","PropelObjectCollection","PropelObjectCollection.html#method_fromArray","(array $arr)","Populates the collection from an array Each object",2],["PropelObjectCollection::getArrayCopy","PropelObjectCollection","PropelObjectCollection.html#method_getArrayCopy","(string $keyColumn = null, boolean $usePrefix = false)","Get an array representation of the collection",2],["PropelObjectCollection::toKeyValue","PropelObjectCollection","PropelObjectCollection.html#method_toKeyValue","(string|array $keyColumn = &#039;PrimaryKey&#039;, string $valueColumn = null)","Get an associative array representation of the collection",2],["PropelObjectCollection::populateRelation","PropelObjectCollection","PropelObjectCollection.html#method_populateRelation","(string $relation, <a href=\"Criteria.html\"><abbr title=\"Criteria\">Criteria<\/abbr><\/a> $criteria = null, <a href=\"PropelPDO.html\"><abbr title=\"PropelPDO\">PropelPDO<\/abbr><\/a> $con = null)","Makes an additional query to populate the objects related",2],["PropelObjectCollection::search","PropelObjectCollection","PropelObjectCollection.html#method_search","(mixed $element)","Search an element in the collection",2],["PropelObjectCollection::contains","PropelObjectCollection","PropelObjectCollection.html#method_contains","(mixed $element)","Whether or not this collection contains a specified",2],["PropelObjectFormatter::format","PropelObjectFormatter","PropelObjectFormatter.html#method_format","(<a href=\"http:\/\/php.net\/PDOStatement\"><abbr title=\"PDOStatement\">PDOStatement<\/abbr><\/a> $stmt)","",2],["PropelObjectFormatter::formatOne","PropelObjectFormatter","PropelObjectFormatter.html#method_formatOne","(<a href=\"http:\/\/php.net\/PDOStatement\"><abbr title=\"PDOStatement\">PDOStatement<\/abbr><\/a> $stmt)","",2],["PropelObjectFormatter::isObjectFormatter","PropelObjectFormatter","PropelObjectFormatter.html#method_isObjectFormatter","()","",2],["PropelObjectFormatter::getAllObjectsFromRow","PropelObjectFormatter","PropelObjectFormatter.html#method_getAllObjectsFromRow","(array $row)","Hydrates a series of objects from a result row The",2],["PropelOnDemandCollection::initIterator","PropelOnDemandCollection","PropelOnDemandCollection.html#method_initIterator","(<a href=\"PropelFormatter.html\"><abbr title=\"PropelFormatter\">PropelFormatter<\/abbr><\/a> $formatter, <a href=\"http:\/\/php.net\/PDOStatement\"><abbr title=\"PDOStatement\">PDOStatement<\/abbr><\/a> $stmt)","",2],["PropelOnDemandCollection::fromArray","PropelOnDemandCollection","PropelOnDemandCollection.html#method_fromArray","(array $arr)","Populates the collection from an array Each object",2],["PropelOnDemandCollection::getIterator","PropelOnDemandCollection","PropelOnDemandCollection.html#method_getIterator","()","",2],["PropelOnDemandCollection::offsetExists","PropelOnDemandCollection","PropelOnDemandCollection.html#method_offsetExists","(integer $offset)","",2],["PropelOnDemandCollection::offsetGet","PropelOnDemandCollection","PropelOnDemandCollection.html#method_offsetGet","(integer $offset)","",2],["PropelOnDemandCollection::offsetSet","PropelOnDemandCollection","PropelOnDemandCollection.html#method_offsetSet","(integer $offset, mixed $value)","",2],["PropelOnDemandCollection::offsetUnset","PropelOnDemandCollection","PropelOnDemandCollection.html#method_offsetUnset","(integer $offset)","",2],["PropelOnDemandCollection::serialize","PropelOnDemandCollection","PropelOnDemandCollection.html#method_serialize","()","",2],["PropelOnDemandCollection::unserialize","PropelOnDemandCollection","PropelOnDemandCollection.html#method_unserialize","(string $data)","",2],["PropelOnDemandCollection::count","PropelOnDemandCollection","PropelOnDemandCollection.html#method_count","()","Returns the number of rows in the resultset Warning:",2],["PropelOnDemandCollection::append","PropelOnDemandCollection","PropelOnDemandCollection.html#method_append","($value)","",2],["PropelOnDemandCollection::prepend","PropelOnDemandCollection","PropelOnDemandCollection.html#method_prepend","(mixed $value)","Prepend one or more elements to the beginning of the",2],["PropelOnDemandCollection::asort","PropelOnDemandCollection","PropelOnDemandCollection.html#method_asort","()","",2],["PropelOnDemandCollection::exchangeArray","PropelOnDemandCollection","PropelOnDemandCollection.html#method_exchangeArray","($input)","",2],["PropelOnDemandCollection::getArrayCopy","PropelOnDemandCollection","PropelOnDemandCollection.html#method_getArrayCopy","()","",2],["PropelOnDemandCollection::getFlags","PropelOnDemandCollection","PropelOnDemandCollection.html#method_getFlags","()","",2],["PropelOnDemandCollection::ksort","PropelOnDemandCollection","PropelOnDemandCollection.html#method_ksort","()","",2],["PropelOnDemandCollection::natcasesort","PropelOnDemandCollection","PropelOnDemandCollection.html#method_natcasesort","()","",2],["PropelOnDemandCollection::natsort","PropelOnDemandCollection","PropelOnDemandCollection.html#method_natsort","()","",2],["PropelOnDemandCollection::setFlags","PropelOnDemandCollection","PropelOnDemandCollection.html#method_setFlags","($flags)","",2],["PropelOnDemandCollection::uasort","PropelOnDemandCollection","PropelOnDemandCollection.html#method_uasort","($cmp_function)","",2],["PropelOnDemandCollection::uksort","PropelOnDemandCollection","PropelOnDemandCollection.html#method_uksort","($cmp_function)","",2],["PropelOnDemandCollection::exportTo","PropelOnDemandCollection","PropelOnDemandCollection.html#method_exportTo","(mixed $parser, boolean $usePrefix = true, boolean $includeLazyLoadColumns = true)","Export the current collection to a string, using a",2],["PropelOnDemandFormatter::init","PropelOnDemandFormatter","PropelOnDemandFormatter.html#method_init","(<a href=\"ModelCriteria.html\"><abbr title=\"ModelCriteria\">ModelCriteria<\/abbr><\/a> $criteria)","",2],["PropelOnDemandFormatter::format","PropelOnDemandFormatter","PropelOnDemandFormatter.html#method_format","(<a href=\"http:\/\/php.net\/PDOStatement\"><abbr title=\"PDOStatement\">PDOStatement<\/abbr><\/a> $stmt)","",2],["PropelOnDemandFormatter::getAllObjectsFromRow","PropelOnDemandFormatter","PropelOnDemandFormatter.html#method_getAllObjectsFromRow","(array $row)","Hydrates a series of objects from a result row The",2],["PropelOnDemandIterator::__construct","PropelOnDemandIterator","PropelOnDemandIterator.html#method___construct","(<a href=\"PropelFormatter.html\"><abbr title=\"PropelFormatter\">PropelFormatter<\/abbr><\/a> $formatter, <a href=\"http:\/\/php.net\/PDOStatement\"><abbr title=\"PDOStatement\">PDOStatement<\/abbr><\/a> $stmt)","",2],["PropelOnDemandIterator::closeCursor","PropelOnDemandIterator","PropelOnDemandIterator.html#method_closeCursor","()","",2],["PropelOnDemandIterator::count","PropelOnDemandIterator","PropelOnDemandIterator.html#method_count","()","Returns the number of rows in the resultset Warning:",2],["PropelOnDemandIterator::current","PropelOnDemandIterator","PropelOnDemandIterator.html#method_current","()","Gets the current Model object in the collection This",2],["PropelOnDemandIterator::key","PropelOnDemandIterator","PropelOnDemandIterator.html#method_key","()","Gets the current key in the iterator",2],["PropelOnDemandIterator::next","PropelOnDemandIterator","PropelOnDemandIterator.html#method_next","()","Advances the cursor in the statement Closes the cursor",2],["PropelOnDemandIterator::rewind","PropelOnDemandIterator","PropelOnDemandIterator.html#method_rewind","()","Initializes the iterator by advancing to the first",2],["PropelOnDemandIterator::valid","PropelOnDemandIterator","PropelOnDemandIterator.html#method_valid","()","",2],["PropelPDO::__construct","PropelPDO","PropelPDO.html#method___construct","(string $dsn, string $username = null, string $password = null, array $driver_options = array())","Creates a PropelPDO instance representing a connection",2],["PropelPDO::setConfiguration","PropelPDO","PropelPDO.html#method_setConfiguration","(<a href=\"PropelConfiguration.html\"><abbr title=\"PropelConfiguration\">PropelConfiguration<\/abbr><\/a> $configuration)","Inject the runtime configuration",2],["PropelPDO::getConfiguration","PropelPDO","PropelPDO.html#method_getConfiguration","()","Get the runtime configuration",2],["PropelPDO::getNestedTransactionCount","PropelPDO","PropelPDO.html#method_getNestedTransactionCount","()","Gets the current transaction depth.",2],["PropelPDO::isInTransaction","PropelPDO","PropelPDO.html#method_isInTransaction","()","Is this PDO connection currently in-transaction? This",2],["PropelPDO::isCommitable","PropelPDO","PropelPDO.html#method_isCommitable","()","Check whether the connection contains a transaction",2],["PropelPDO::beginTransaction","PropelPDO","PropelPDO.html#method_beginTransaction","()","Overrides PDO::beginTransaction() to prevent errors",2],["PropelPDO::commit","PropelPDO","PropelPDO.html#method_commit","()","Overrides PDO::commit() to only commit the transaction",2],["PropelPDO::rollBack","PropelPDO","PropelPDO.html#method_rollBack","()","Overrides PDO::rollBack() to only rollback the transaction",2],["PropelPDO::forceRollBack","PropelPDO","PropelPDO.html#method_forceRollBack","()","Rollback the whole transaction, even if this is a nested",2],["PropelPDO::setAttribute","PropelPDO","PropelPDO.html#method_setAttribute","(integer $attribute, mixed $value)","Sets a connection attribute.",2],["PropelPDO::getAttribute","PropelPDO","PropelPDO.html#method_getAttribute","(integer $attribute)","Gets a connection attribute.",2],["PropelPDO::prepare","PropelPDO","PropelPDO.html#method_prepare","(string $sql, array $driver_options = array())","Prepares a statement for execution and returns a statement",2],["PropelPDO::exec","PropelPDO","PropelPDO.html#method_exec","(string $sql)","Execute an SQL statement and return the number of affected",2],["PropelPDO::query","PropelPDO","PropelPDO.html#method_query","()","Executes an SQL statement, returning a result set as",2],["PropelPDO::clearStatementCache","PropelPDO","PropelPDO.html#method_clearStatementCache","()","Clears any stored prepared statements for this connection.",2],["PropelPDO::getQueryCount","PropelPDO","PropelPDO.html#method_getQueryCount","()","Returns the number of queries this DebugPDO instance",2],["PropelPDO::incrementQueryCount","PropelPDO","PropelPDO.html#method_incrementQueryCount","()","Increments the number of queries performed by this",2],["PropelPDO::getLastExecutedQuery","PropelPDO","PropelPDO.html#method_getLastExecutedQuery","()","Get the SQL code for the latest query executed by Propel",2],["PropelPDO::setLastExecutedQuery","PropelPDO","PropelPDO.html#method_setLastExecutedQuery","(string $query)","Set the SQL code for the latest query executed by Propel",2],["PropelPDO::useDebug","PropelPDO","PropelPDO.html#method_useDebug","(boolean $value = true)","Enable or disable the query debug features",2],["PropelPDO::setLogLevel","PropelPDO","PropelPDO.html#method_setLogLevel","(integer $level)","Sets the logging level to use for logging method calls",2],["PropelPDO::setLogger","PropelPDO","PropelPDO.html#method_setLogger","(<a href=\"BasicLogger.html\"><abbr title=\"BasicLogger\">BasicLogger<\/abbr><\/a> $logger)","Sets a logger to use.",2],["PropelPDO::getLogger","PropelPDO","PropelPDO.html#method_getLogger","()","Gets the logger in use.",2],["PropelPDO::log","PropelPDO","PropelPDO.html#method_log","(string $msg, integer $level = null, string $methodName = null, array $debugSnapshot = null)","Logs the method call or SQL using the Propel::log()",2],["PropelPDO::getDebugSnapshot","PropelPDO","PropelPDO.html#method_getDebugSnapshot","()","Returns a snapshot of the current values of some functions",2],["PropelPDO::__destruct","PropelPDO","PropelPDO.html#method___destruct","()","If so configured, makes an entry to the log of the",2],["PropelPHPParser::__construct","PropelPHPParser","PropelPHPParser.html#method___construct","(string $code, boolean $isAddPhp = false)","Parser constructor",2],["PropelPHPParser::getCode","PropelPHPParser","PropelPHPParser.html#method_getCode","()","Get the modified code",2],["PropelPHPParser::findMethod","PropelPHPParser","PropelPHPParser.html#method_findMethod","(string $methodName)","Parse the code looking for a method definition, and",2],["PropelPHPParser::removeMethod","PropelPHPParser","PropelPHPParser.html#method_removeMethod","(string $methodName)","Parse the code looking for a method definition, and",2],["PropelPHPParser::replaceMethod","PropelPHPParser","PropelPHPParser.html#method_replaceMethod","(string $methodName, string $newCode)","Parse the code looking for a method definition, and",2],["PropelPHPParser::addMethodAfter","PropelPHPParser","PropelPHPParser.html#method_addMethodAfter","(string $methodName, string $newCode)","Parse the code looking for a method definition, and",2],["PropelPHPParser::addMethodBefore","PropelPHPParser","PropelPHPParser.html#method_addMethodBefore","(string $methodName, string $newCode)","Parse the code looking for a method definition, and",2],["PropelPager::__construct","PropelPager","PropelPager.html#method___construct","(<a href=\"Criteria.html\"><abbr title=\"Criteria\">Criteria<\/abbr><\/a> $c = null, string $peerClass = null, string $peerSelectMethod = null, int $page = 1, int $rowsPerPage = 25)","Create a new Propel Pager.",2],["PropelPager::setCriteria","PropelPager","PropelPager.html#method_setCriteria","(<a href=\"Criteria.html\"><abbr title=\"Criteria\">Criteria<\/abbr><\/a> $c)","Set the criteria for this pager.",2],["PropelPager::getCriteria","PropelPager","PropelPager.html#method_getCriteria","()","Return the Criteria object for this pager.",2],["PropelPager::setPeerClass","PropelPager","PropelPager.html#method_setPeerClass","(string $class)","Set the Peer Classname",2],["PropelPager::getPeerClass","PropelPager","PropelPager.html#method_getPeerClass","()","Return the Peer Classname.",2],["PropelPager::setPeerMethod","PropelPager","PropelPager.html#method_setPeerMethod","(string $method)","Set the Peer select method.",2],["PropelPager::getPeerMethod","PropelPager","PropelPager.html#method_getPeerMethod","()","Return the Peer select method.",2],["PropelPager::setPeerSelectMethod","PropelPager","PropelPager.html#method_setPeerSelectMethod","(string $method)","Set the Peer select method.",2],["PropelPager::getPeerSelectMethod","PropelPager","PropelPager.html#method_getPeerSelectMethod","()","Return the Peer select method.",2],["PropelPager::setPeerCountMethod","PropelPager","PropelPager.html#method_setPeerCountMethod","(string $method)","Sets the Count method.",2],["PropelPager::getPeerCountMethod","PropelPager","PropelPager.html#method_getPeerCountMethod","()","Return the Peer count method.",2],["PropelPager::getResult","PropelPager","PropelPager.html#method_getResult","()","Get the paged resultset",2],["PropelPager::getFirstPage","PropelPager","PropelPager.html#method_getFirstPage","()","Get the first page",2],["PropelPager::atFirstPage","PropelPager","PropelPager.html#method_atFirstPage","()","Convenience method to indicate whether current page",2],["PropelPager::getLastPage","PropelPager","PropelPager.html#method_getLastPage","()","Get last page",2],["PropelPager::atLastPage","PropelPager","PropelPager.html#method_atLastPage","()","Convenience method to indicate whether current page",2],["PropelPager::getTotalPages","PropelPager","PropelPager.html#method_getTotalPages","()","get total pages",2],["PropelPager::getPrevLinks","PropelPager","PropelPager.html#method_getPrevLinks","(int $range = 5)","get an array of previous id's",2],["PropelPager::getNextLinks","PropelPager","PropelPager.html#method_getNextLinks","(int $range = 5)","get an array of next id's",2],["PropelPager::isLastPageComplete","PropelPager","PropelPager.html#method_isLastPageComplete","()","Returns whether last page is complete",2],["PropelPager::getPrev","PropelPager","PropelPager.html#method_getPrev","()","get previous id",2],["PropelPager::getNext","PropelPager","PropelPager.html#method_getNext","()","get next id",2],["PropelPager::setPage","PropelPager","PropelPager.html#method_setPage","(int $page)","Set the current page number (First page is 1).",2],["PropelPager::getPage","PropelPager","PropelPager.html#method_getPage","()","Get current page.",2],["PropelPager::setRowsPerPage","PropelPager","PropelPager.html#method_setRowsPerPage","(int $r)","Set the number of rows per page.",2],["PropelPager::getRowsPerPage","PropelPager","PropelPager.html#method_getRowsPerPage","()","Get number of rows per page.",2],["PropelPager::getTotalRecordCount","PropelPager","PropelPager.html#method_getTotalRecordCount","()","Gets the total number of (un-LIMITed) records.",2],["PropelPager::setStart","PropelPager","PropelPager.html#method_setStart","(int $v)","Sets the start row or offset.",2],["PropelPager::setMax","PropelPager","PropelPager.html#method_setMax","(int $v)","Sets max rows (limit).",2],["PropelPager::count","PropelPager","PropelPager.html#method_count","()","Returns the count of the current page's records",2],["PropelPager::current","PropelPager","PropelPager.html#method_current","()","Returns the current element of the iterator",2],["PropelPager::key","PropelPager","PropelPager.html#method_key","()","Returns the current key of the iterator",2],["PropelPager::next","PropelPager","PropelPager.html#method_next","()","Advances the iterator to the next element",2],["PropelPager::rewind","PropelPager","PropelPager.html#method_rewind","()","Resets the iterator to the first element",2],["PropelPager::valid","PropelPager","PropelPager.html#method_valid","()","Checks if the current key exists in the container",2],["PropelParser::fromArray","PropelParser","PropelParser.html#method_fromArray","(array $array)","Converts data from an associative array to the parser",2],["PropelParser::toArray","PropelParser","PropelParser.html#method_toArray","(mixed $data)","Converts data from the parser format to an associative",2],["PropelParser::listFromArray","PropelParser","PropelParser.html#method_listFromArray","($data)","",2],["PropelParser::listToArray","PropelParser","PropelParser.html#method_listToArray","($data)","",2],["PropelParser::load","PropelParser","PropelParser.html#method_load","(string $path)","Loads data from a file.",2],["PropelParser::dump","PropelParser","PropelParser.html#method_dump","(string $data, string $path = null)","Dumps data to a file, or to STDOUT if no filename is",2],["PropelParser::getParser","PropelParser","PropelParser.html#method_getParser","(string $type = &#039;XML&#039;)","Factory for getting an instance of a subclass of PropelParser",2],["PropelPlatformInterface::setConnection","PropelPlatformInterface","PropelPlatformInterface.html#method_setConnection","(<a href=\"http:\/\/php.net\/PDO\"><abbr title=\"PDO\">PDO<\/abbr><\/a> $con = null)","Sets a database connection to use (for quoting, etc.).",2],["PropelPlatformInterface::getConnection","PropelPlatformInterface","PropelPlatformInterface.html#method_getConnection","()","Returns the database connection to use for this Platform",2],["PropelPlatformInterface::setGeneratorConfig","PropelPlatformInterface","PropelPlatformInterface.html#method_setGeneratorConfig","(<a href=\"GeneratorConfigInterface.html\"><abbr title=\"GeneratorConfigInterface\">GeneratorConfigInterface<\/abbr><\/a> $config)","Sets the GeneratorConfigInterface which contains any",2],["PropelPlatformInterface::getDatabaseType","PropelPlatformInterface","PropelPlatformInterface.html#method_getDatabaseType","()","Returns the short name of the database type that this",2],["PropelPlatformInterface::getNativeIdMethod","PropelPlatformInterface","PropelPlatformInterface.html#method_getNativeIdMethod","()","Returns the native IdMethod (sequence|identity)",2],["PropelPlatformInterface::getMaxColumnNameLength","PropelPlatformInterface","PropelPlatformInterface.html#method_getMaxColumnNameLength","()","Returns the max column length supported by the db.",2],["PropelPlatformInterface::getDomainForType","PropelPlatformInterface","PropelPlatformInterface.html#method_getDomainForType","(string $propelType)","Returns the db specific domain for a propelType.",2],["PropelPlatformInterface::getNullString","PropelPlatformInterface","PropelPlatformInterface.html#method_getNullString","($notNull)","",2],["PropelPlatformInterface::getAutoIncrement","PropelPlatformInterface","PropelPlatformInterface.html#method_getAutoIncrement","()","",2],["PropelPlatformInterface::getColumnDDL","PropelPlatformInterface","PropelPlatformInterface.html#method_getColumnDDL","(<a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $col)","Returns the DDL SQL for a Column object.",2],["PropelPlatformInterface::getColumnDefaultValueDDL","PropelPlatformInterface","PropelPlatformInterface.html#method_getColumnDefaultValueDDL","(<a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $col)","Returns the SQL for the default value of a Column object.",2],["PropelPlatformInterface::getColumnListDDL","PropelPlatformInterface","PropelPlatformInterface.html#method_getColumnListDDL","($columns, $delimiter = &#039;,&#039;)","Creates a delimiter-delimited string list of column",2],["PropelPlatformInterface::getPrimaryKeyDDL","PropelPlatformInterface","PropelPlatformInterface.html#method_getPrimaryKeyDDL","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Returns the SQL for the primary key of a Table object",2],["PropelPlatformInterface::hasSize","PropelPlatformInterface","PropelPlatformInterface.html#method_hasSize","(string $sqlType)","Returns if the RDBMS-specific SQL type has a size attribute.",2],["PropelPlatformInterface::hasScale","PropelPlatformInterface","PropelPlatformInterface.html#method_hasScale","(string $sqlType)","Returns if the RDBMS-specific SQL type has a scale",2],["PropelPlatformInterface::quote","PropelPlatformInterface","PropelPlatformInterface.html#method_quote","(string $text)","Quote and escape needed characters in the string for",2],["PropelPlatformInterface::quoteIdentifier","PropelPlatformInterface","PropelPlatformInterface.html#method_quoteIdentifier","(string $text)","Quotes identifiers used in database SQL.",2],["PropelPlatformInterface::supportsNativeDeleteTrigger","PropelPlatformInterface","PropelPlatformInterface.html#method_supportsNativeDeleteTrigger","()","Whether RDBMS supports native ON DELETE triggers (e.g.",2],["PropelPlatformInterface::supportsInsertNullPk","PropelPlatformInterface","PropelPlatformInterface.html#method_supportsInsertNullPk","()","Whether RDBMS supports INSERT null values in autoincremented",2],["PropelPlatformInterface::supportsSchemas","PropelPlatformInterface","PropelPlatformInterface.html#method_supportsSchemas","()","Whether RDBMS supports native schemas for table layout.",2],["PropelPlatformInterface::supportsMigrations","PropelPlatformInterface","PropelPlatformInterface.html#method_supportsMigrations","()","Whether RDBMS supports migrations.",2],["PropelPlatformInterface::supportsVarcharWithoutSize","PropelPlatformInterface","PropelPlatformInterface.html#method_supportsVarcharWithoutSize","()","Wether RDBMS supports VARCHAR without explicit size",2],["PropelPlatformInterface::getBooleanString","PropelPlatformInterface","PropelPlatformInterface.html#method_getBooleanString","(mixed $tf)","Returns the boolean value for the RDBMS.",2],["PropelPlatformInterface::hasStreamBlobImpl","PropelPlatformInterface","PropelPlatformInterface.html#method_hasStreamBlobImpl","()","Whether the underlying PDO driver for this platform",2],["PropelPlatformInterface::getTimestampFormatter","PropelPlatformInterface","PropelPlatformInterface.html#method_getTimestampFormatter","()","Gets the preferred timestamp formatter for setting",2],["PropelPlatformInterface::getDateFormatter","PropelPlatformInterface","PropelPlatformInterface.html#method_getDateFormatter","()","Gets the preferred date formatter for setting time",2],["PropelPlatformInterface::getTimeFormatter","PropelPlatformInterface","PropelPlatformInterface.html#method_getTimeFormatter","()","Gets the preferred time formatter for setting time",2],["PropelQuery::from","PropelQuery","PropelQuery.html#method_from","(string $queryClassAndAlias)","",2],["PropelQuickBuilder::setClassTargets","PropelQuickBuilder","PropelQuickBuilder.html#method_setClassTargets","(array $targets)","",2],["PropelQuickBuilder::setSchema","PropelQuickBuilder","PropelQuickBuilder.html#method_setSchema","($schema)","",2],["PropelQuickBuilder::setPlatform","PropelQuickBuilder","PropelQuickBuilder.html#method_setPlatform","(<a href=\"PropelPlatformInterface.html\"><abbr title=\"PropelPlatformInterface\">PropelPlatformInterface<\/abbr><\/a> $platform)","Setter for the platform property",2],["PropelQuickBuilder::getPlatform","PropelQuickBuilder","PropelQuickBuilder.html#method_getPlatform","()","Getter for the platform property",2],["PropelQuickBuilder::setConfig","PropelQuickBuilder","PropelQuickBuilder.html#method_setConfig","(<a href=\"GeneratorConfigInterface.html\"><abbr title=\"GeneratorConfigInterface\">GeneratorConfigInterface<\/abbr><\/a> $config)","Setter for the config property",2],["PropelQuickBuilder::getConfig","PropelQuickBuilder","PropelQuickBuilder.html#method_getConfig","()","Getter for the config property",2],["PropelQuickBuilder::buildSchema","PropelQuickBuilder","PropelQuickBuilder.html#method_buildSchema","($schema, $dsn = null, $user = null, $pass = null, $adapter = null)","",2],["PropelQuickBuilder::build","PropelQuickBuilder","PropelQuickBuilder.html#method_build","($dsn = null, $user = null, $pass = null, $adapter = null, array $classTargets = null)","",2],["PropelQuickBuilder::getDatabase","PropelQuickBuilder","PropelQuickBuilder.html#method_getDatabase","()","",2],["PropelQuickBuilder::buildSQL","PropelQuickBuilder","PropelQuickBuilder.html#method_buildSQL","(<a href=\"http:\/\/php.net\/PDO\"><abbr title=\"PDO\">PDO<\/abbr><\/a> $con)","",2],["PropelQuickBuilder::getSQL","PropelQuickBuilder","PropelQuickBuilder.html#method_getSQL","()","",2],["PropelQuickBuilder::buildClasses","PropelQuickBuilder","PropelQuickBuilder.html#method_buildClasses","(array $classTargets = null)","",2],["PropelQuickBuilder::getClasses","PropelQuickBuilder","PropelQuickBuilder.html#method_getClasses","(array $classTargets = null)","",2],["PropelQuickBuilder::getClassesForTable","PropelQuickBuilder","PropelQuickBuilder.html#method_getClassesForTable","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table, array $classTargets = null)","",2],["PropelQuickBuilder::debugClassesForTable","PropelQuickBuilder","PropelQuickBuilder.html#method_debugClassesForTable","($schema, $tableName)","",2],["PropelSQLDiffTask::setDatabaseName","PropelSQLDiffTask","PropelSQLDiffTask.html#method_setDatabaseName","(string $v)","Sets the datasource name.",2],["PropelSQLDiffTask::getDatabaseName","PropelSQLDiffTask","PropelSQLDiffTask.html#method_getDatabaseName","()","Gets the datasource name.",2],["PropelSQLDiffTask::setEditorCmd","PropelSQLDiffTask","PropelSQLDiffTask.html#method_setEditorCmd","(string $editorCmd)","Setter for the editorCmd property",2],["PropelSQLDiffTask::getEditorCmd","PropelSQLDiffTask","PropelSQLDiffTask.html#method_getEditorCmd","()","Getter for the editorCmd property",2],["PropelSQLDiffTask::setCaseInsensitive","PropelSQLDiffTask","PropelSQLDiffTask.html#method_setCaseInsensitive","(boolean $isCaseInsensitive)","Defines whether the comparison is case insensitive",2],["PropelSQLDiffTask::isCaseInsensitive","PropelSQLDiffTask","PropelSQLDiffTask.html#method_isCaseInsensitive","()","Checks whether the comparison is case insensitive",2],["PropelSQLDiffTask::main","PropelSQLDiffTask","PropelSQLDiffTask.html#method_main","()","Main method builds all the targets for a typical propel",2],["PropelSQLExec::setSqlDbMap","PropelSQLExec","PropelSQLExec.html#method_setSqlDbMap","(<abbr title=\"$sqldbmap\">$sqldbmap<\/abbr> $sqldbmap)","Set the sqldbmap properties file.",2],["PropelSQLExec::getSqlDbMap","PropelSQLExec","PropelSQLExec.html#method_getSqlDbMap","()","Get the sqldbmap properties file.",2],["PropelSQLExec::setBuildConnections","PropelSQLExec","PropelSQLExec.html#method_setBuildConnections","(array $buildConnections)","Set the buildtime connection settings.",2],["PropelSQLExec::getBuildConnections","PropelSQLExec","PropelSQLExec.html#method_getBuildConnections","()","Get the buildtime connection settings.",2],["PropelSQLExec::getBuildConnection","PropelSQLExec","PropelSQLExec.html#method_getBuildConnection","(string $database)","Get the buildtime connection settings for a given database",2],["PropelSQLExec::setSrcDir","PropelSQLExec","PropelSQLExec.html#method_setSrcDir","(<abbr title=\"PhingFile\">PhingFile<\/abbr> $srcDir)","Set the src directory for the sql files listed in the",2],["PropelSQLExec::getSrcDir","PropelSQLExec","PropelSQLExec.html#method_getSrcDir","()","Get the src directory for the sql files listed in the",2],["PropelSQLExec::setUrl","PropelSQLExec","PropelSQLExec.html#method_setUrl","(string $url)","Set the DB connection url.",2],["PropelSQLExec::setUserid","PropelSQLExec","PropelSQLExec.html#method_setUserid","(string $userId)","Set the user name for the DB connection.",2],["PropelSQLExec::setPassword","PropelSQLExec","PropelSQLExec.html#method_setPassword","(string $password)","Set the password for the DB connection.",2],["PropelSQLExec::setAutoCommit","PropelSQLExec","PropelSQLExec.html#method_setAutoCommit","(boolean $autocommit)","Set the autocommit flag for the DB connection.",2],["PropelSQLExec::setOnerror","PropelSQLExec","PropelSQLExec.html#method_setOnerror","(string $action)","Set the action to perform onerror",2],["PropelSQLExec::main","PropelSQLExec","PropelSQLExec.html#method_main","()","Load the sql file and then execute it",2],["PropelSQLParser::setSQL","PropelSQLParser","PropelSQLParser.html#method_setSQL","(string $sql)","Sets the inner SQL string for this object.",2],["PropelSQLParser::getSQL","PropelSQLParser","PropelSQLParser.html#method_getSQL","()","Gets the inner SQL string for this object.",2],["PropelSQLParser::executeString","PropelSQLParser","PropelSQLParser.html#method_executeString","(string $input, <a href=\"http:\/\/php.net\/PDO\"><abbr title=\"PDO\">PDO<\/abbr><\/a> $connection)","Execute a list of DDL statements based on a string",2],["PropelSQLParser::executeFile","PropelSQLParser","PropelSQLParser.html#method_executeFile","(string $file, <a href=\"http:\/\/php.net\/PDO\"><abbr title=\"PDO\">PDO<\/abbr><\/a> $connection)","Execute a list of DDL statements based on the path",2],["PropelSQLParser::parseString","PropelSQLParser","PropelSQLParser.html#method_parseString","(string $input)","Explodes a SQL string into an array of SQL statements.",2],["PropelSQLParser::parseFile","PropelSQLParser","PropelSQLParser.html#method_parseFile","($file)","Explodes a SQL file into an array of SQL statements.",2],["PropelSQLParser::convertLineFeedsToUnixStyle","PropelSQLParser","PropelSQLParser.html#method_convertLineFeedsToUnixStyle","()","",2],["PropelSQLParser::stripSQLCommentLines","PropelSQLParser","PropelSQLParser.html#method_stripSQLCommentLines","()","",2],["PropelSQLParser::explodeIntoStatements","PropelSQLParser","PropelSQLParser.html#method_explodeIntoStatements","()","Explodes the inner SQL string into statements based",2],["PropelSQLParser::getNextStatement","PropelSQLParser","PropelSQLParser.html#method_getNextStatement","()","Gets the next SQL statement in the inner SQL string,",2],["PropelSQLTask::setSqlDbMap","PropelSQLTask","PropelSQLTask.html#method_setSqlDbMap","(<abbr title=\"PhingFile\">PhingFile<\/abbr> $sqldbmap)","Set the sqldbmap.",2],["PropelSQLTask::getSqlDbMap","PropelSQLTask","PropelSQLTask.html#method_getSqlDbMap","()","Get the sqldbmap.",2],["PropelSQLTask::setDatabase","PropelSQLTask","PropelSQLTask.html#method_setDatabase","(string $database)","Set the database name.",2],["PropelSQLTask::getDatabase","PropelSQLTask","PropelSQLTask.html#method_getDatabase","()","Get the database name.",2],["PropelSQLTask::main","PropelSQLTask","PropelSQLTask.html#method_main","()","",2],["PropelSQLTask::getWarnings","PropelSQLTask","PropelSQLTask.html#method_getWarnings","(<a href=\"Database.html\"><abbr title=\"Database\">Database<\/abbr><\/a> $database, <abbr title=\"PropelPLatformInterface\">PropelPLatformInterface<\/abbr> $platform)","",2],["PropelSchemaReverseTask::getDbSchema","PropelSchemaReverseTask","PropelSchemaReverseTask.html#method_getDbSchema","()","Gets the (optional) schema name to use.",2],["PropelSchemaReverseTask::setDbSchema","PropelSchemaReverseTask","PropelSchemaReverseTask.html#method_setDbSchema","(string $dbSchema)","Sets the name of a database schema to use (optional).",2],["PropelSchemaReverseTask::getDbEncoding","PropelSchemaReverseTask","PropelSchemaReverseTask.html#method_getDbEncoding","($v)","Gets the database encoding.",2],["PropelSchemaReverseTask::setDbEncoding","PropelSchemaReverseTask","PropelSchemaReverseTask.html#method_setDbEncoding","(string $v)","Sets the database encoding.",2],["PropelSchemaReverseTask::getDatabaseName","PropelSchemaReverseTask","PropelSchemaReverseTask.html#method_getDatabaseName","()","Gets the datasource name.",2],["PropelSchemaReverseTask::setDatabaseName","PropelSchemaReverseTask","PropelSchemaReverseTask.html#method_setDatabaseName","(string $v)","Sets the datasource name.",2],["PropelSchemaReverseTask::setOutputFile","PropelSchemaReverseTask","PropelSchemaReverseTask.html#method_setOutputFile","(<abbr title=\"PhingFile\">PhingFile<\/abbr> $v)","Sets the output name for the XML file.",2],["PropelSchemaReverseTask::setSamePhpName","PropelSchemaReverseTask","PropelSchemaReverseTask.html#method_setSamePhpName","(boolean $v)","Set whether to use the column name as phpName without",2],["PropelSchemaReverseTask::setAddVendorInfo","PropelSchemaReverseTask","PropelSchemaReverseTask.html#method_setAddVendorInfo","(boolean $v)","Set whether to add vendor info to the schema.",2],["PropelSchemaReverseTask::setAddValidators","PropelSchemaReverseTask","PropelSchemaReverseTask.html#method_setAddValidators","(string $v)","Sets set validator bitfield from a comma-separated",2],["PropelSchemaReverseTask::isSamePhpName","PropelSchemaReverseTask","PropelSchemaReverseTask.html#method_isSamePhpName","()","Whether to use the column name as phpName without any",2],["PropelSchemaReverseTask::main","PropelSchemaReverseTask","PropelSchemaReverseTask.html#method_main","()","",2],["PropelSchemaReverse_ValidatorSet::getValidator","PropelSchemaReverse_ValidatorSet","PropelSchemaReverse_ValidatorSet.html#method_getValidator","(<a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $column)","Gets a single validator for specified column name.",2],["PropelSchemaReverse_ValidatorSet::getValidators","PropelSchemaReverse_ValidatorSet","PropelSchemaReverse_ValidatorSet.html#method_getValidators","()","Gets all validators.",2],["PropelSchemaValidator::__construct","PropelSchemaValidator","PropelSchemaValidator.html#method___construct","(<a href=\"AppData.html\"><abbr title=\"AppData\">AppData<\/abbr><\/a> $appData)","",2],["PropelSchemaValidator::validate","PropelSchemaValidator","PropelSchemaValidator.html#method_validate","()","",2],["PropelSchemaValidator::getErrors","PropelSchemaValidator","PropelSchemaValidator.html#method_getErrors","()","",2],["PropelSimpleArrayFormatter::format","PropelSimpleArrayFormatter","PropelSimpleArrayFormatter.html#method_format","(<a href=\"http:\/\/php.net\/PDOStatement\"><abbr title=\"PDOStatement\">PDOStatement<\/abbr><\/a> $stmt)","",2],["PropelSimpleArrayFormatter::formatOne","PropelSimpleArrayFormatter","PropelSimpleArrayFormatter.html#method_formatOne","(<a href=\"http:\/\/php.net\/PDOStatement\"><abbr title=\"PDOStatement\">PDOStatement<\/abbr><\/a> $stmt)","",2],["PropelSimpleArrayFormatter::isObjectFormatter","PropelSimpleArrayFormatter","PropelSimpleArrayFormatter.html#method_isObjectFormatter","()","",2],["PropelSimpleArrayFormatter::getStructuredArrayFromRow","PropelSimpleArrayFormatter","PropelSimpleArrayFormatter.html#method_getStructuredArrayFromRow","($row)","",2],["PropelSqlBuildTask::main","PropelSqlBuildTask","PropelSqlBuildTask.html#method_main","()","",2],["PropelSqlManager::setConnections","PropelSqlManager","PropelSqlManager.html#method_setConnections","(array $connections)","Set the database connection settings",2],["PropelSqlManager::getConnections","PropelSqlManager","PropelSqlManager.html#method_getConnections","()","Get the database connection settings",2],["PropelSqlManager::hasConnection","PropelSqlManager","PropelSqlManager.html#method_hasConnection","($connection)","",2],["PropelSqlManager::getConnection","PropelSqlManager","PropelSqlManager.html#method_getConnection","($datasource)","",2],["PropelSqlManager::setGeneratorConfig","PropelSqlManager","PropelSqlManager.html#method_setGeneratorConfig","(<a href=\"GeneratorConfigInterface.html\"><abbr title=\"GeneratorConfigInterface\">GeneratorConfigInterface<\/abbr><\/a> $generatorConfig)","",2],["PropelSqlManager::getGeneratorConfig","PropelSqlManager","PropelSqlManager.html#method_getGeneratorConfig","()","",2],["PropelSqlManager::setDataModels","PropelSqlManager","PropelSqlManager.html#method_setDataModels","(array $dataModels)","",2],["PropelSqlManager::getDataModels","PropelSqlManager","PropelSqlManager.html#method_getDataModels","()","",2],["PropelSqlManager::setWorkingDirectory","PropelSqlManager","PropelSqlManager.html#method_setWorkingDirectory","(string $workingDirectory)","",2],["PropelSqlManager::getWorkingDirectory","PropelSqlManager","PropelSqlManager.html#method_getWorkingDirectory","()","return string",2],["PropelSqlManager::getDatabases","PropelSqlManager","PropelSqlManager.html#method_getDatabases","()","",2],["PropelSqlManager::getSqlDbMapFilename","PropelSqlManager","PropelSqlManager.html#method_getSqlDbMapFilename","()","",2],["PropelSqlManager::buildSql","PropelSqlManager","PropelSqlManager.html#method_buildSql","()","Build SQL files.",2],["PropelSqlManager::insertSql","PropelSqlManager","PropelSqlManager.html#method_insertSql","(string $datasource = null)","",2],["PropelStatementFormatter::format","PropelStatementFormatter","PropelStatementFormatter.html#method_format","(<a href=\"http:\/\/php.net\/PDOStatement\"><abbr title=\"PDOStatement\">PDOStatement<\/abbr><\/a> $stmt)","",2],["PropelStatementFormatter::formatOne","PropelStatementFormatter","PropelStatementFormatter.html#method_formatOne","(<a href=\"http:\/\/php.net\/PDOStatement\"><abbr title=\"PDOStatement\">PDOStatement<\/abbr><\/a> $stmt)","",2],["PropelStatementFormatter::formatRecord","PropelStatementFormatter","PropelStatementFormatter.html#method_formatRecord","(<a href=\"BaseObject.html\"><abbr title=\"BaseObject\">BaseObject<\/abbr><\/a> $record = null)","Formats an ActiveRecord object",2],["PropelStatementFormatter::isObjectFormatter","PropelStatementFormatter","PropelStatementFormatter.html#method_isObjectFormatter","()","",2],["PropelStringReader::__construct","PropelStringReader","PropelStringReader.html#method___construct","($string)","",2],["PropelStringReader::skip","PropelStringReader","PropelStringReader.html#method_skip","($n)","",2],["PropelStringReader::eof","PropelStringReader","PropelStringReader.html#method_eof","()","",2],["PropelStringReader::read","PropelStringReader","PropelStringReader.html#method_read","($len = null)","",2],["PropelStringReader::mark","PropelStringReader","PropelStringReader.html#method_mark","()","",2],["PropelStringReader::reset","PropelStringReader","PropelStringReader.html#method_reset","()","",2],["PropelStringReader::close","PropelStringReader","PropelStringReader.html#method_close","()","",2],["PropelStringReader::open","PropelStringReader","PropelStringReader.html#method_open","()","",2],["PropelStringReader::ready","PropelStringReader","PropelStringReader.html#method_ready","()","",2],["PropelStringReader::markSupported","PropelStringReader","PropelStringReader.html#method_markSupported","()","",2],["PropelStringReader::getResource","PropelStringReader","PropelStringReader.html#method_getResource","()","",2],["PropelTableComparator::__construct","PropelTableComparator","PropelTableComparator.html#method___construct","($tableDiff = null)","",2],["PropelTableComparator::getTableDiff","PropelTableComparator","PropelTableComparator.html#method_getTableDiff","()","",2],["PropelTableComparator::setFromTable","PropelTableComparator","PropelTableComparator.html#method_setFromTable","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $fromTable)","Set the table the comparator starts from",2],["PropelTableComparator::getFromTable","PropelTableComparator","PropelTableComparator.html#method_getFromTable","()","Get the table the comparator starts from",2],["PropelTableComparator::setToTable","PropelTableComparator","PropelTableComparator.html#method_setToTable","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $toTable)","Set the table the comparator goes to",2],["PropelTableComparator::getToTable","PropelTableComparator","PropelTableComparator.html#method_getToTable","()","Get the table the comparator goes to",2],["PropelTableComparator::computeDiff","PropelTableComparator","PropelTableComparator.html#method_computeDiff","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $fromTable, <a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $toTable, boolean $caseInsensitive = false)","Compute and return the difference between two table",2],["PropelTableComparator::compareColumns","PropelTableComparator","PropelTableComparator.html#method_compareColumns","(boolean $caseInsensitive = false)","Compare the columns of the fromTable and the toTable,",2],["PropelTableComparator::comparePrimaryKeys","PropelTableComparator","PropelTableComparator.html#method_comparePrimaryKeys","(boolean $caseInsensitive = false)","Compare the primary keys of the fromTable and the toTable,",2],["PropelTableComparator::compareIndices","PropelTableComparator","PropelTableComparator.html#method_compareIndices","(boolean $caseInsensitive = false)","Compare the indices and unique indices of the fromTable",2],["PropelTableComparator::compareForeignKeys","PropelTableComparator","PropelTableComparator.html#method_compareForeignKeys","(boolean $caseInsensitive = false)","Compare the foreign keys of the fromTable and the toTable,",2],["PropelTableDiff::setFromTable","PropelTableDiff","PropelTableDiff.html#method_setFromTable","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $fromTable)","Setter for the fromTable property",2],["PropelTableDiff::getFromTable","PropelTableDiff","PropelTableDiff.html#method_getFromTable","()","Getter for the fromTable property",2],["PropelTableDiff::setToTable","PropelTableDiff","PropelTableDiff.html#method_setToTable","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $toTable)","Setter for the toTable property",2],["PropelTableDiff::getToTable","PropelTableDiff","PropelTableDiff.html#method_getToTable","()","Getter for the toTable property",2],["PropelTableDiff::setAddedColumns","PropelTableDiff","PropelTableDiff.html#method_setAddedColumns","(array $addedColumns)","Setter for the addedColumns property",2],["PropelTableDiff::addAddedColumn","PropelTableDiff","PropelTableDiff.html#method_addAddedColumn","(string $columnName, <a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $addedColumn)","Add an added column",2],["PropelTableDiff::removeAddedColumn","PropelTableDiff","PropelTableDiff.html#method_removeAddedColumn","(string $columnName)","Remove an added column",2],["PropelTableDiff::getAddedColumns","PropelTableDiff","PropelTableDiff.html#method_getAddedColumns","()","Getter for the addedColumns property",2],["PropelTableDiff::getAddedColumn","PropelTableDiff","PropelTableDiff.html#method_getAddedColumn","($columnName)","Get an added column",2],["PropelTableDiff::setRemovedColumns","PropelTableDiff","PropelTableDiff.html#method_setRemovedColumns","(array $removedColumns)","Setter for the removedColumns property",2],["PropelTableDiff::addRemovedColumn","PropelTableDiff","PropelTableDiff.html#method_addRemovedColumn","(string $columnName, <a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $removedColumn)","Add a removed column",2],["PropelTableDiff::removeRemovedColumn","PropelTableDiff","PropelTableDiff.html#method_removeRemovedColumn","(string $columnName)","Remove a removed column",2],["PropelTableDiff::getRemovedColumns","PropelTableDiff","PropelTableDiff.html#method_getRemovedColumns","()","Getter for the removedColumns property",2],["PropelTableDiff::getRemovedColumn","PropelTableDiff","PropelTableDiff.html#method_getRemovedColumn","($columnName)","Get a removed column",2],["PropelTableDiff::setModifiedColumns","PropelTableDiff","PropelTableDiff.html#method_setModifiedColumns","(array $modifiedColumns)","Setter for the modifiedColumns property",2],["PropelTableDiff::addModifiedColumn","PropelTableDiff","PropelTableDiff.html#method_addModifiedColumn","(string $columnName, <a href=\"PropelColumnDiff.html\"><abbr title=\"PropelColumnDiff\">PropelColumnDiff<\/abbr><\/a> $modifiedColumn)","Add a column difference",2],["PropelTableDiff::getModifiedColumns","PropelTableDiff","PropelTableDiff.html#method_getModifiedColumns","()","Getter for the modifiedColumns property",2],["PropelTableDiff::setRenamedColumns","PropelTableDiff","PropelTableDiff.html#method_setRenamedColumns","(array $renamedColumns)","Setter for the renamedColumns property",2],["PropelTableDiff::addRenamedColumn","PropelTableDiff","PropelTableDiff.html#method_addRenamedColumn","(<a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $fromColumn, <a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $toColumn)","Add a renamed column",2],["PropelTableDiff::getRenamedColumns","PropelTableDiff","PropelTableDiff.html#method_getRenamedColumns","()","Getter for the renamedColumns property",2],["PropelTableDiff::setAddedPkColumns","PropelTableDiff","PropelTableDiff.html#method_setAddedPkColumns","(<abbr title=\"$addedPkColumns\">$addedPkColumns<\/abbr> $addedPkColumns)","Setter for the addedPkColumns property",2],["PropelTableDiff::addAddedPkColumn","PropelTableDiff","PropelTableDiff.html#method_addAddedPkColumn","(string $columnName, <a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $addedPkColumn)","Add an added Pk column",2],["PropelTableDiff::removeAddedPkColumn","PropelTableDiff","PropelTableDiff.html#method_removeAddedPkColumn","(string $columnName)","Remove an added Pk column",2],["PropelTableDiff::getAddedPkColumns","PropelTableDiff","PropelTableDiff.html#method_getAddedPkColumns","()","Getter for the addedPkColumns property",2],["PropelTableDiff::setRemovedPkColumns","PropelTableDiff","PropelTableDiff.html#method_setRemovedPkColumns","(<abbr title=\"$removedPkColumns\">$removedPkColumns<\/abbr> $removedPkColumns)","Setter for the removedPkColumns property",2],["PropelTableDiff::addRemovedPkColumn","PropelTableDiff","PropelTableDiff.html#method_addRemovedPkColumn","($columnName, <a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $removedPkColumn)","Add a removed Pk column",2],["PropelTableDiff::removeRemovedPkColumn","PropelTableDiff","PropelTableDiff.html#method_removeRemovedPkColumn","(string $columnName)","Remove a removed Pk column",2],["PropelTableDiff::getRemovedPkColumns","PropelTableDiff","PropelTableDiff.html#method_getRemovedPkColumns","()","Getter for the removedPkColumns property",2],["PropelTableDiff::setRenamedPkColumns","PropelTableDiff","PropelTableDiff.html#method_setRenamedPkColumns","(<abbr title=\"$renamedPkColumns\">$renamedPkColumns<\/abbr> $renamedPkColumns)","Setter for the renamedPkColumns property",2],["PropelTableDiff::addRenamedPkColumn","PropelTableDiff","PropelTableDiff.html#method_addRenamedPkColumn","(<a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $fromColumn, <a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $toColumn)","Add a renamed Pk column",2],["PropelTableDiff::getRenamedPkColumns","PropelTableDiff","PropelTableDiff.html#method_getRenamedPkColumns","()","Getter for the renamedPkColumns property",2],["PropelTableDiff::hasModifiedPk","PropelTableDiff","PropelTableDiff.html#method_hasModifiedPk","()","Whether the primary key was modified",2],["PropelTableDiff::setAddedIndices","PropelTableDiff","PropelTableDiff.html#method_setAddedIndices","(<abbr title=\"$addedIndices\">$addedIndices<\/abbr> $addedIndices)","Setter for the addedIndices property",2],["PropelTableDiff::addAddedIndex","PropelTableDiff","PropelTableDiff.html#method_addAddedIndex","(string $indexName, <a href=\"Index.html\"><abbr title=\"Index\">Index<\/abbr><\/a> $addedIndex)","Add an added Index",2],["PropelTableDiff::getAddedIndices","PropelTableDiff","PropelTableDiff.html#method_getAddedIndices","()","Getter for the addedIndices property",2],["PropelTableDiff::setRemovedIndices","PropelTableDiff","PropelTableDiff.html#method_setRemovedIndices","(<abbr title=\"$removedIndices\">$removedIndices<\/abbr> $removedIndices)","Setter for the removedIndices property",2],["PropelTableDiff::addRemovedIndex","PropelTableDiff","PropelTableDiff.html#method_addRemovedIndex","(string $indexName, <a href=\"Index.html\"><abbr title=\"Index\">Index<\/abbr><\/a> $removedIndex)","Add a removed Index",2],["PropelTableDiff::getRemovedIndices","PropelTableDiff","PropelTableDiff.html#method_getRemovedIndices","()","Getter for the removedIndices property",2],["PropelTableDiff::setModifiedIndices","PropelTableDiff","PropelTableDiff.html#method_setModifiedIndices","(<abbr title=\"$modifiedIndices\">$modifiedIndices<\/abbr> $modifiedIndices)","Setter for the modifiedIndices property",2],["PropelTableDiff::addModifiedIndex","PropelTableDiff","PropelTableDiff.html#method_addModifiedIndex","(string $indexName, <a href=\"Index.html\"><abbr title=\"Index\">Index<\/abbr><\/a> $fromIndex, <a href=\"Index.html\"><abbr title=\"Index\">Index<\/abbr><\/a> $toIndex)","Add a modified Index",2],["PropelTableDiff::getModifiedIndices","PropelTableDiff","PropelTableDiff.html#method_getModifiedIndices","()","Getter for the modifiedIndices property",2],["PropelTableDiff::setAddedFks","PropelTableDiff","PropelTableDiff.html#method_setAddedFks","(<abbr title=\"$addedFks\">$addedFks<\/abbr> $addedFks)","Setter for the addedFks property",2],["PropelTableDiff::addAddedFk","PropelTableDiff","PropelTableDiff.html#method_addAddedFk","(string $fkName, <a href=\"ForeignKey.html\"><abbr title=\"ForeignKey\">ForeignKey<\/abbr><\/a> $addedFk)","Add an added Fk column",2],["PropelTableDiff::removeAddedFk","PropelTableDiff","PropelTableDiff.html#method_removeAddedFk","(string $fkName)","Remove an added Fk column",2],["PropelTableDiff::getAddedFks","PropelTableDiff","PropelTableDiff.html#method_getAddedFks","()","Getter for the addedFks property",2],["PropelTableDiff::setRemovedFks","PropelTableDiff","PropelTableDiff.html#method_setRemovedFks","(<abbr title=\"$removedFks\">$removedFks<\/abbr> $removedFks)","Setter for the removedFks property",2],["PropelTableDiff::addRemovedFk","PropelTableDiff","PropelTableDiff.html#method_addRemovedFk","($fkName, <a href=\"ForeignKey.html\"><abbr title=\"ForeignKey\">ForeignKey<\/abbr><\/a> $removedFk)","Add a removed Fk column",2],["PropelTableDiff::removeRemovedFk","PropelTableDiff","PropelTableDiff.html#method_removeRemovedFk","(string $fkName)","Remove a removed Fk column",2],["PropelTableDiff::getRemovedFks","PropelTableDiff","PropelTableDiff.html#method_getRemovedFks","()","Getter for the removedFks property",2],["PropelTableDiff::setModifiedFks","PropelTableDiff","PropelTableDiff.html#method_setModifiedFks","(array $modifiedFks)","Setter for the modifiedFks property",2],["PropelTableDiff::addModifiedFk","PropelTableDiff","PropelTableDiff.html#method_addModifiedFk","(string $fkName, <a href=\"ForeignKey.html\"><abbr title=\"ForeignKey\">ForeignKey<\/abbr><\/a> $fromFk, <a href=\"ForeignKey.html\"><abbr title=\"ForeignKey\">ForeignKey<\/abbr><\/a> $toFk)","Add a modified Fk",2],["PropelTableDiff::getModifiedFks","PropelTableDiff","PropelTableDiff.html#method_getModifiedFks","()","Getter for the modifiedFks property",2],["PropelTableDiff::getReverseDiff","PropelTableDiff","PropelTableDiff.html#method_getReverseDiff","()","Get the reverse diff for this diff",2],["PropelTableDiff::__toString","PropelTableDiff","PropelTableDiff.html#method___toString","()","",2],["PropelTemplate::setTemplate","PropelTemplate","PropelTemplate.html#method_setTemplate","(string $template)","Set a string as a template.",2],["PropelTemplate::setTemplateFile","PropelTemplate","PropelTemplate.html#method_setTemplateFile","(string $filePath)","Set a file as a template.",2],["PropelTemplate::render","PropelTemplate","PropelTemplate.html#method_render","(array $vars = array())","Render the template using the variable provided as",2],["PropelTypes::getPhpNative","PropelTypes","PropelTypes.html#method_getPhpNative","(string $propelType)","Return native PHP type which corresponds to the Creole",2],["PropelTypes::getCreoleType","PropelTypes","PropelTypes.html#method_getCreoleType","(string $type)","Returns the correct Creole type _name_ for propel added",2],["PropelTypes::getPDOType","PropelTypes","PropelTypes.html#method_getPDOType","($type)","Returns the PDO type (PDO::PARAM_* constant) value.",2],["PropelTypes::getPdoTypeString","PropelTypes","PropelTypes.html#method_getPdoTypeString","($type)","Returns the PDO type ('PDO::PARAM_*' constant) name.",2],["PropelTypes::getPropelType","PropelTypes","PropelTypes.html#method_getPropelType","(int $sqlType)","Returns Propel type constant corresponding to Creole",2],["PropelTypes::getPropelTypes","PropelTypes","PropelTypes.html#method_getPropelTypes","()","Get array of Propel types.",2],["PropelTypes::isTemporalType","PropelTypes","PropelTypes.html#method_isTemporalType","(string $type)","Whether passed type is a temporal (date\/time\/timestamp)",2],["PropelTypes::isTextType","PropelTypes","PropelTypes.html#method_isTextType","(string $type)","Returns true if values for the type need to be quoted.",2],["PropelTypes::isNumericType","PropelTypes","PropelTypes.html#method_isNumericType","(string $type)","Returns true if values for the type are numeric.",2],["PropelTypes::isBooleanType","PropelTypes","PropelTypes.html#method_isBooleanType","(string $type)","Returns true if values for the type are boolean.",2],["PropelTypes::isLobType","PropelTypes","PropelTypes.html#method_isLobType","(string $type)","Returns true if type is a LOB type (i.e.",2],["PropelTypes::isPhpPrimitiveType","PropelTypes","PropelTypes.html#method_isPhpPrimitiveType","(string $phpType)","Convenience method to indicate whether a passed-in",2],["PropelTypes::isPhpPrimitiveNumericType","PropelTypes","PropelTypes.html#method_isPhpPrimitiveNumericType","(string $phpType)","Convenience method to indicate whether a passed-in",2],["PropelTypes::isPhpObjectType","PropelTypes","PropelTypes.html#method_isPhpObjectType","(string $phpType)","Convenience method to indicate whether a passed-in",2],["PropelTypes::isPhpArrayType","PropelTypes","PropelTypes.html#method_isPhpArrayType","(string $phpType)","Convenience method to indicate whether a passed-in",2],["PropelXMLParser::fromArray","PropelXMLParser","PropelXMLParser.html#method_fromArray","(array $array, string $rootElementName = &#039;data&#039;, string $charset = null)","Converts data from an associative array to XML.",2],["PropelXMLParser::listFromArray","PropelXMLParser","PropelXMLParser.html#method_listFromArray","($array, $rootElementName = &#039;data&#039;, $charset = null)","",2],["PropelXMLParser::toXML","PropelXMLParser","PropelXMLParser.html#method_toXML","(array $array, string $rootElementName = &#039;data&#039;, string $charset = null)","Alias for PropelXMLParser::fromArray()",2],["PropelXMLParser::listToXML","PropelXMLParser","PropelXMLParser.html#method_listToXML","(array $array, string $rootElementName = &#039;data&#039;, string $charset = null)","Alias for PropelXMLParser::listFromArray()",2],["PropelXMLParser::toArray","PropelXMLParser","PropelXMLParser.html#method_toArray","(string $data)","Converts data from XML to an associative array.",2],["PropelXMLParser::fromXML","PropelXMLParser","PropelXMLParser.html#method_fromXML","(string $data)","Alias for PropelXMLParser::toArray()",2],["PropelYAMLParser::fromArray","PropelYAMLParser","PropelYAMLParser.html#method_fromArray","(array $array)","Converts data from an associative array to YAML.",2],["PropelYAMLParser::toYAML","PropelYAMLParser","PropelYAMLParser.html#method_toYAML","(array $array)","Alias for PropelYAMLParser::fromArray()",2],["PropelYAMLParser::toArray","PropelYAMLParser","PropelYAMLParser.html#method_toArray","(string $data)","Converts data from YAML to an associative array.",2],["PropelYAMLParser::fromYAML","PropelYAMLParser","PropelYAMLParser.html#method_fromYAML","(string $data)","Alias for PropelYAMLParser::toArray()",2],["QueryBuilder::getPackage","QueryBuilder","QueryBuilder.html#method_getPackage","()","Gets the package for the [base] object classes.",2],["QueryBuilder::getNamespace","QueryBuilder","QueryBuilder.html#method_getNamespace","()","Return the user-defined namespace for this table, or",2],["QueryBuilder::getUnprefixedClassname","QueryBuilder","QueryBuilder.html#method_getUnprefixedClassname","()","Returns the name of the current class being built.",2],["QueryBuilder::hasBehaviorModifier","QueryBuilder","QueryBuilder.html#method_hasBehaviorModifier","(string $hookName, string $modifier = null)","Checks whether any registered behavior on that table",2],["QueryBuilder::applyBehaviorModifier","QueryBuilder","QueryBuilder.html#method_applyBehaviorModifier","($hookName, $script, $tab = &#039;\t\t&#039;)","Checks whether any registered behavior on that table",2],["QueryBuilder::getBehaviorContent","QueryBuilder","QueryBuilder.html#method_getBehaviorContent","(string $contentName)","Checks whether any registered behavior content creator",2],["QueryCacheBehavior::queryAttributes","QueryCacheBehavior","QueryCacheBehavior.html#method_queryAttributes","($builder)","",2],["QueryCacheBehavior::queryMethods","QueryCacheBehavior","QueryCacheBehavior.html#method_queryMethods","($builder)","",2],["QueryInheritanceBuilder::getUnprefixedClassname","QueryInheritanceBuilder","QueryInheritanceBuilder.html#method_getUnprefixedClassname","()","Returns the name of the current class being built.",2],["QueryInheritanceBuilder::getPackage","QueryInheritanceBuilder","QueryInheritanceBuilder.html#method_getPackage","()","Gets the package for the [base] object classes.",2],["QueryInheritanceBuilder::getNamespace","QueryInheritanceBuilder","QueryInheritanceBuilder.html#method_getNamespace","()","Return the user-defined namespace for this table, or",2],["QueryInheritanceBuilder::setChild","QueryInheritanceBuilder","QueryInheritanceBuilder.html#method_setChild","(<a href=\"Inheritance.html\"><abbr title=\"Inheritance\">Inheritance<\/abbr><\/a> $child)","Set the child object that we're operating on currently.",2],["QueryInheritanceBuilder::getChild","QueryInheritanceBuilder","QueryInheritanceBuilder.html#method_getChild","()","Returns the child object we're operating on currently.",2],["QuickGeneratorConfig::__construct","QuickGeneratorConfig","QuickGeneratorConfig.html#method___construct","(<a href=\"PropelPlatformInterface.html\"><abbr title=\"PropelPlatformInterface\">PropelPlatformInterface<\/abbr><\/a> $platform = null)","",2],["QuickGeneratorConfig::getConfiguredBuilder","QuickGeneratorConfig","QuickGeneratorConfig.html#method_getConfiguredBuilder","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table, string $type)","Gets a configured data model builder class for specified",2],["QuickGeneratorConfig::getConfiguredPluralizer","QuickGeneratorConfig","QuickGeneratorConfig.html#method_getConfiguredPluralizer","()","Gets a configured Pluralizer class.",2],["QuickGeneratorConfig::setBuildProperties","QuickGeneratorConfig","QuickGeneratorConfig.html#method_setBuildProperties","(mixed $props)","Parses the passed-in properties, renaming and saving",2],["QuickGeneratorConfig::getBuildProperty","QuickGeneratorConfig","QuickGeneratorConfig.html#method_getBuildProperty","(string $name)","Gets a specific propel (renamed) property from the",2],["QuickGeneratorConfig::setBuildProperty","QuickGeneratorConfig","QuickGeneratorConfig.html#method_setBuildProperty","(string $name, mixed $value)","Sets a specific propel (renamed) property from the",2],["QuickGeneratorConfig::getConfiguredPlatform","QuickGeneratorConfig","QuickGeneratorConfig.html#method_getConfiguredPlatform","(<a href=\"http:\/\/php.net\/PDO\"><abbr title=\"PDO\">PDO<\/abbr><\/a> $con = null, $database = null)","Creates and configures a new Platform class.",2],["QuickGeneratorConfig::getConfiguredBehavior","QuickGeneratorConfig","QuickGeneratorConfig.html#method_getConfiguredBehavior","($name)","Gets a configured behavior class",2],["RelationMap::__construct","RelationMap","RelationMap.html#method___construct","(string $name)","Constructor.",2],["RelationMap::getName","RelationMap","RelationMap.html#method_getName","()","Get the name of this relation.",2],["RelationMap::setPluralName","RelationMap","RelationMap.html#method_setPluralName","($pluralName)","",2],["RelationMap::getPluralName","RelationMap","RelationMap.html#method_getPluralName","()","Get the plural name of this relation.",2],["RelationMap::setType","RelationMap","RelationMap.html#method_setType","(integer $type)","Set the type",2],["RelationMap::getType","RelationMap","RelationMap.html#method_getType","()","Get the type",2],["RelationMap::setLocalTable","RelationMap","RelationMap.html#method_setLocalTable","(<a href=\"TableMap.html\"><abbr title=\"TableMap\">TableMap<\/abbr><\/a> $table)","Set the local table",2],["RelationMap::getLocalTable","RelationMap","RelationMap.html#method_getLocalTable","()","Get the local table",2],["RelationMap::setForeignTable","RelationMap","RelationMap.html#method_setForeignTable","(<a href=\"TableMap.html\"><abbr title=\"TableMap\">TableMap<\/abbr><\/a> $table)","Set the foreign table",2],["RelationMap::getForeignTable","RelationMap","RelationMap.html#method_getForeignTable","()","Get the foreign table",2],["RelationMap::getLeftTable","RelationMap","RelationMap.html#method_getLeftTable","()","Get the left table of the relation",2],["RelationMap::getRightTable","RelationMap","RelationMap.html#method_getRightTable","()","Get the right table of the relation",2],["RelationMap::addColumnMapping","RelationMap","RelationMap.html#method_addColumnMapping","(<a href=\"ColumnMap.html\"><abbr title=\"ColumnMap\">ColumnMap<\/abbr><\/a> $local, <a href=\"ColumnMap.html\"><abbr title=\"ColumnMap\">ColumnMap<\/abbr><\/a> $foreign)","Add a column mapping",2],["RelationMap::getColumnMappings","RelationMap","RelationMap.html#method_getColumnMappings","(int $direction = RelationMap::LOCAL_TO_FOREIGN)","Get an associative array mapping local column names",2],["RelationMap::isComposite","RelationMap","RelationMap.html#method_isComposite","()","Returns true if the relation has more than one column",2],["RelationMap::countColumnMappings","RelationMap","RelationMap.html#method_countColumnMappings","()","Return the number of column mappings",2],["RelationMap::getLocalColumns","RelationMap","RelationMap.html#method_getLocalColumns","()","Get the local columns",2],["RelationMap::getForeignColumns","RelationMap","RelationMap.html#method_getForeignColumns","()","Get the foreign columns",2],["RelationMap::getLeftColumns","RelationMap","RelationMap.html#method_getLeftColumns","()","Get the left columns of the relation",2],["RelationMap::getRightColumns","RelationMap","RelationMap.html#method_getRightColumns","()","Get the right columns of the relation",2],["RelationMap::setOnUpdate","RelationMap","RelationMap.html#method_setOnUpdate","(string $onUpdate)","Set the onUpdate behavior",2],["RelationMap::getOnUpdate","RelationMap","RelationMap.html#method_getOnUpdate","()","Get the onUpdate behavior",2],["RelationMap::setOnDelete","RelationMap","RelationMap.html#method_setOnDelete","(string $onDelete)","Set the onDelete behavior",2],["RelationMap::getOnDelete","RelationMap","RelationMap.html#method_getOnDelete","()","Get the onDelete behavior",2],["RelationMap::getSymmetricalRelation","RelationMap","RelationMap.html#method_getSymmetricalRelation","()","Gets the symmetrical relation",2],["RequiredValidator::isValid","RequiredValidator","RequiredValidator.html#method_isValid","(<a href=\"ValidatorMap.html\"><abbr title=\"ValidatorMap\">ValidatorMap<\/abbr><\/a> $map, string $str)","",2],["Rule::setValidator","Rule","Rule.html#method_setValidator","(<a href=\"Validator.html\"><abbr title=\"Validator\">Validator<\/abbr><\/a> $validator)","Sets the owning validator for this rule.",2],["Rule::getValidator","Rule","Rule.html#method_getValidator","()","Gets the owning validator for this rule.",2],["Rule::setClass","Rule","Rule.html#method_setClass","(string $classname)","Sets the dot-path name of class to use for rule.",2],["Rule::getClass","Rule","Rule.html#method_getClass","()","Gets the dot-path name of class to use for rule.",2],["Rule::setName","Rule","Rule.html#method_setName","(string $name)","Sets the name of the validator for this rule.",2],["Rule::getName","Rule","Rule.html#method_getName","()","Gets the name of the validator for this rule.",2],["Rule::setValue","Rule","Rule.html#method_setValue","(string $value)","Sets the value parameter for this validator rule.",2],["Rule::getValue","Rule","Rule.html#method_getValue","()","Gets the value parameter for this validator rule.",2],["Rule::setMessage","Rule","Rule.html#method_setMessage","(string $message)","Sets the message that will be displayed to the user",2],["Rule::getMessage","Rule","Rule.html#method_getMessage","()","Gets the message that will be displayed to the user",2],["Rule::appendXml","Rule","Rule.html#method_appendXml","(<a href=\"http:\/\/php.net\/DOMNode\"><abbr title=\"DOMNode\">DOMNode<\/abbr><\/a> $node)","",2],["SchemaParser::getConnection","SchemaParser","SchemaParser.html#method_getConnection","()","Gets the database connection.",2],["SchemaParser::setConnection","SchemaParser","SchemaParser.html#method_setConnection","(<a href=\"http:\/\/php.net\/PDO\"><abbr title=\"PDO\">PDO<\/abbr><\/a> $dbh)","Sets the database connection.",2],["SchemaParser::setGeneratorConfig","SchemaParser","SchemaParser.html#method_setGeneratorConfig","(<a href=\"GeneratorConfigInterface.html\"><abbr title=\"GeneratorConfigInterface\">GeneratorConfigInterface<\/abbr><\/a> $config)","Sets the GeneratorConfig to use in the parsing.",2],["SchemaParser::getBuildProperty","SchemaParser","SchemaParser.html#method_getBuildProperty","(string $name)","Gets a specific propel (renamed) property from the",2],["SchemaParser::getWarnings","SchemaParser","SchemaParser.html#method_getWarnings","()","Gets array of warning messages.",2],["SchemaParser::parse","SchemaParser","SchemaParser.html#method_parse","(<a href=\"Database.html\"><abbr title=\"Database\">Database<\/abbr><\/a> $database, <abbr title=\"Task\">Task<\/abbr> $task = null)","Parse the schema and populate passed-in Database model",2],["ScopedElement::getNamespace","ScopedElement","ScopedElement.html#method_getNamespace","()","Get the value of the namespace.",2],["ScopedElement::setNamespace","ScopedElement","ScopedElement.html#method_setNamespace","(<abbr title=\"$v\">$v<\/abbr> $v)","Set the value of the namespace.",2],["ScopedElement::getPackage","ScopedElement","ScopedElement.html#method_getPackage","()","Get the value of package.",2],["ScopedElement::setPackage","ScopedElement","ScopedElement.html#method_setPackage","(<abbr title=\"$v\">$v<\/abbr> $v)","Set the value of package.",2],["ScopedElement::getSchema","ScopedElement","ScopedElement.html#method_getSchema","()","Get the value of schema.",2],["ScopedElement::setSchema","ScopedElement","ScopedElement.html#method_setSchema","(<abbr title=\"$v\">$v<\/abbr> $v)","Set the value of schema.",2],["SluggableBehavior::modifyTable","SluggableBehavior","SluggableBehavior.html#method_modifyTable","()","Add the slug_column to the current table",2],["SluggableBehavior::preSave","SluggableBehavior","SluggableBehavior.html#method_preSave","(<a href=\"PHP5ObjectBuilder.html\"><abbr title=\"PHP5ObjectBuilder\">PHP5ObjectBuilder<\/abbr><\/a> $builder)","Add code in ObjectBuilder::preSave",2],["SluggableBehavior::objectMethods","SluggableBehavior","SluggableBehavior.html#method_objectMethods","(<a href=\"PHP5ObjectBuilder.html\"><abbr title=\"PHP5ObjectBuilder\">PHP5ObjectBuilder<\/abbr><\/a> $builder)","",2],["SluggableBehavior::addCleanupSlugPart","SluggableBehavior","SluggableBehavior.html#method_addCleanupSlugPart","($script)","",2],["SluggableBehavior::addLimitSlugSize","SluggableBehavior","SluggableBehavior.html#method_addLimitSlugSize","($script)","",2],["SluggableBehavior::addMakeSlugUnique","SluggableBehavior","SluggableBehavior.html#method_addMakeSlugUnique","($script)","",2],["SluggableBehavior::queryMethods","SluggableBehavior","SluggableBehavior.html#method_queryMethods","(<a href=\"QueryBuilder.html\"><abbr title=\"QueryBuilder\">QueryBuilder<\/abbr><\/a> $builder)","",2],["SoftDeleteBehavior::modifyTable","SoftDeleteBehavior","SoftDeleteBehavior.html#method_modifyTable","()","Add the deleted_column to the current table",2],["SoftDeleteBehavior::objectMethods","SoftDeleteBehavior","SoftDeleteBehavior.html#method_objectMethods","($builder)","",2],["SoftDeleteBehavior::addObjectForceDelete","SoftDeleteBehavior","SoftDeleteBehavior.html#method_addObjectForceDelete","($script)","",2],["SoftDeleteBehavior::addObjectUndelete","SoftDeleteBehavior","SoftDeleteBehavior.html#method_addObjectUndelete","($script)","",2],["SoftDeleteBehavior::preDelete","SoftDeleteBehavior","SoftDeleteBehavior.html#method_preDelete","($builder)","",2],["SoftDeleteBehavior::queryAttributes","SoftDeleteBehavior","SoftDeleteBehavior.html#method_queryAttributes","()","",2],["SoftDeleteBehavior::queryMethods","SoftDeleteBehavior","SoftDeleteBehavior.html#method_queryMethods","($builder)","",2],["SoftDeleteBehavior::addQueryIncludeDeleted","SoftDeleteBehavior","SoftDeleteBehavior.html#method_addQueryIncludeDeleted","($script)","",2],["SoftDeleteBehavior::addQuerySoftDelete","SoftDeleteBehavior","SoftDeleteBehavior.html#method_addQuerySoftDelete","($script)","",2],["SoftDeleteBehavior::addQueryForceDelete","SoftDeleteBehavior","SoftDeleteBehavior.html#method_addQueryForceDelete","($script)","",2],["SoftDeleteBehavior::addQueryForceDeleteAll","SoftDeleteBehavior","SoftDeleteBehavior.html#method_addQueryForceDeleteAll","($script)","",2],["SoftDeleteBehavior::addQueryUnDelete","SoftDeleteBehavior","SoftDeleteBehavior.html#method_addQueryUnDelete","($script)","",2],["SoftDeleteBehavior::addQueryEnableSoftDelete","SoftDeleteBehavior","SoftDeleteBehavior.html#method_addQueryEnableSoftDelete","($script)","",2],["SoftDeleteBehavior::addQueryDisableSoftDelete","SoftDeleteBehavior","SoftDeleteBehavior.html#method_addQueryDisableSoftDelete","($script)","",2],["SoftDeleteBehavior::addQueryIsSoftDeleteEnabled","SoftDeleteBehavior","SoftDeleteBehavior.html#method_addQueryIsSoftDeleteEnabled","($script)","",2],["SoftDeleteBehavior::preSelectQuery","SoftDeleteBehavior","SoftDeleteBehavior.html#method_preSelectQuery","($builder)","",2],["SoftDeleteBehavior::preDeleteQuery","SoftDeleteBehavior","SoftDeleteBehavior.html#method_preDeleteQuery","($builder)","",2],["SoftDeleteBehavior::staticMethods","SoftDeleteBehavior","SoftDeleteBehavior.html#method_staticMethods","($builder)","",2],["SoftDeleteBehavior::addPeerEnableSoftDelete","SoftDeleteBehavior","SoftDeleteBehavior.html#method_addPeerEnableSoftDelete","($script)","",2],["SoftDeleteBehavior::addPeerDisableSoftDelete","SoftDeleteBehavior","SoftDeleteBehavior.html#method_addPeerDisableSoftDelete","($script)","",2],["SoftDeleteBehavior::addPeerIsSoftDeleteEnabled","SoftDeleteBehavior","SoftDeleteBehavior.html#method_addPeerIsSoftDeleteEnabled","($script)","",2],["SoftDeleteBehavior::addPeerDoSoftDelete","SoftDeleteBehavior","SoftDeleteBehavior.html#method_addPeerDoSoftDelete","($script)","",2],["SoftDeleteBehavior::addPeerDoDelete2","SoftDeleteBehavior","SoftDeleteBehavior.html#method_addPeerDoDelete2","($script)","",2],["SoftDeleteBehavior::addPeerDoSoftDeleteAll","SoftDeleteBehavior","SoftDeleteBehavior.html#method_addPeerDoSoftDeleteAll","($script)","",2],["SoftDeleteBehavior::addPeerDoDeleteAll2","SoftDeleteBehavior","SoftDeleteBehavior.html#method_addPeerDoDeleteAll2","($script)","",2],["SoftDeleteBehavior::preSelect","SoftDeleteBehavior","SoftDeleteBehavior.html#method_preSelect","($builder)","",2],["SoftDeleteBehavior::peerFilter","SoftDeleteBehavior","SoftDeleteBehavior.html#method_peerFilter","($script)","",2],["SortableBehavior::modifyTable","SortableBehavior","SortableBehavior.html#method_modifyTable","()","Add the rank_column to the current table",2],["SortableBehavior::generateScopePhp","SortableBehavior","SortableBehavior.html#method_generateScopePhp","()","Generates the method argument signature, the appropriate",2],["SortableBehavior::getColumnGetter","SortableBehavior","SortableBehavior.html#method_getColumnGetter","(string $name)","Returns the getter method name.",2],["SortableBehavior::getColumnSetter","SortableBehavior","SortableBehavior.html#method_getColumnSetter","(string $name)","Returns the setter method name.",2],["SortableBehavior::addParameter","SortableBehavior","SortableBehavior.html#method_addParameter","(array $attribute)","Add a parameter Expects an associative array looking",2],["SortableBehavior::getScopes","SortableBehavior","SortableBehavior.html#method_getScopes","()","Returns all scope columns as array.",2],["SortableBehavior::hasMultipleScopes","SortableBehavior","SortableBehavior.html#method_hasMultipleScopes","()","Returns true if the behavior has multiple scope columns.",2],["SortableBehavior::getObjectBuilderModifier","SortableBehavior","SortableBehavior.html#method_getObjectBuilderModifier","()","",2],["SortableBehavior::getQueryBuilderModifier","SortableBehavior","SortableBehavior.html#method_getQueryBuilderModifier","()","",2],["SortableBehavior::getPeerBuilderModifier","SortableBehavior","SortableBehavior.html#method_getPeerBuilderModifier","()","",2],["SortableBehavior::useScope","SortableBehavior","SortableBehavior.html#method_useScope","()","",2],["SortableBehaviorObjectBuilderModifier::__construct","SortableBehaviorObjectBuilderModifier","SortableBehaviorObjectBuilderModifier.html#method___construct","($behavior)","",2],["SortableBehaviorObjectBuilderModifier::preSave","SortableBehaviorObjectBuilderModifier","SortableBehaviorObjectBuilderModifier.html#method_preSave","($builder)","",2],["SortableBehaviorObjectBuilderModifier::preInsert","SortableBehaviorObjectBuilderModifier","SortableBehaviorObjectBuilderModifier.html#method_preInsert","($builder)","",2],["SortableBehaviorObjectBuilderModifier::preUpdate","SortableBehaviorObjectBuilderModifier","SortableBehaviorObjectBuilderModifier.html#method_preUpdate","($builder)","",2],["SortableBehaviorObjectBuilderModifier::preDelete","SortableBehaviorObjectBuilderModifier","SortableBehaviorObjectBuilderModifier.html#method_preDelete","($builder)","",2],["SortableBehaviorObjectBuilderModifier::objectAttributes","SortableBehaviorObjectBuilderModifier","SortableBehaviorObjectBuilderModifier.html#method_objectAttributes","($builder)","",2],["SortableBehaviorObjectBuilderModifier::objectMethods","SortableBehaviorObjectBuilderModifier","SortableBehaviorObjectBuilderModifier.html#method_objectMethods","($builder)","",2],["SortableBehaviorObjectBuilderModifier::objectFilter","SortableBehaviorObjectBuilderModifier","SortableBehaviorObjectBuilderModifier.html#method_objectFilter","($script, $builder)","",2],["SortableBehaviorPeerBuilderModifier::__construct","SortableBehaviorPeerBuilderModifier","SortableBehaviorPeerBuilderModifier.html#method___construct","($behavior)","",2],["SortableBehaviorPeerBuilderModifier::staticAttributes","SortableBehaviorPeerBuilderModifier","SortableBehaviorPeerBuilderModifier.html#method_staticAttributes","($builder)","",2],["SortableBehaviorPeerBuilderModifier::staticMethods","SortableBehaviorPeerBuilderModifier","SortableBehaviorPeerBuilderModifier.html#method_staticMethods","($builder)","Static methods",2],["SortableBehaviorPeerBuilderModifier::addSortableApplyScopeCriteria","SortableBehaviorPeerBuilderModifier","SortableBehaviorPeerBuilderModifier.html#method_addSortableApplyScopeCriteria","($script)","",2],["SortableBehaviorQueryBuilderModifier::__construct","SortableBehaviorQueryBuilderModifier","SortableBehaviorQueryBuilderModifier.html#method___construct","($behavior)","",2],["SortableBehaviorQueryBuilderModifier::queryMethods","SortableBehaviorQueryBuilderModifier","SortableBehaviorQueryBuilderModifier.html#method_queryMethods","($builder)","",2],["SortableRelationBehavior::objectMethods","SortableRelationBehavior","SortableRelationBehavior.html#method_objectMethods","($builder)","",2],["SortableRelationBehavior::preDelete","SortableRelationBehavior","SortableRelationBehavior.html#method_preDelete","($builder)","",2],["SqlitePlatform::getAutoIncrement","SqlitePlatform","SqlitePlatform.html#method_getAutoIncrement","()","",2],["SqlitePlatform::getMaxColumnNameLength","SqlitePlatform","SqlitePlatform.html#method_getMaxColumnNameLength","()","Returns the max column length supported by the db.",2],["SqlitePlatform::getAddTableDDL","SqlitePlatform","SqlitePlatform.html#method_getAddTableDDL","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Builds the DDL SQL to add a table without index and",2],["SqlitePlatform::getDropPrimaryKeyDDL","SqlitePlatform","SqlitePlatform.html#method_getDropPrimaryKeyDDL","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Builds the DDL SQL to drop the primary key of a table.",2],["SqlitePlatform::getAddPrimaryKeyDDL","SqlitePlatform","SqlitePlatform.html#method_getAddPrimaryKeyDDL","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Builds the DDL SQL to add the primary key of a table.",2],["SqlitePlatform::getAddForeignKeyDDL","SqlitePlatform","SqlitePlatform.html#method_getAddForeignKeyDDL","(<a href=\"ForeignKey.html\"><abbr title=\"ForeignKey\">ForeignKey<\/abbr><\/a> $fk)","Builds the DDL SQL to add a foreign key.",2],["SqlitePlatform::getDropForeignKeyDDL","SqlitePlatform","SqlitePlatform.html#method_getDropForeignKeyDDL","(<a href=\"ForeignKey.html\"><abbr title=\"ForeignKey\">ForeignKey<\/abbr><\/a> $fk)","Builds the DDL SQL to drop a foreign key.",2],["SqlitePlatform::getDropTableDDL","SqlitePlatform","SqlitePlatform.html#method_getDropTableDDL","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Builds the DDL SQL to drop a table",2],["SqlitePlatform::getForeignKeyDDL","SqlitePlatform","SqlitePlatform.html#method_getForeignKeyDDL","(<a href=\"ForeignKey.html\"><abbr title=\"ForeignKey\">ForeignKey<\/abbr><\/a> $fk)","Builds the DDL SQL for a ForeignKey object.",2],["SqlitePlatform::hasSize","SqlitePlatform","SqlitePlatform.html#method_hasSize","(string $sqlType)","Returns if the RDBMS-specific SQL type has a size attribute.",2],["SqlitePlatform::disconnectedEscapeText","SqlitePlatform","SqlitePlatform.html#method_disconnectedEscapeText","(string $text)","Escape the string for RDBMS.",2],["SqlitePlatform::quoteIdentifier","SqlitePlatform","SqlitePlatform.html#method_quoteIdentifier","(string $text)","Quotes identifiers used in database SQL.",2],["SqlitePlatform::supportsMigrations","SqlitePlatform","SqlitePlatform.html#method_supportsMigrations","()","",2],["SqliteSchemaParser::parse","SqliteSchemaParser","SqliteSchemaParser.html#method_parse","(<a href=\"Database.html\"><abbr title=\"Database\">Database<\/abbr><\/a> $database, <abbr title=\"Task\">Task<\/abbr> $task = null)","",2],["SqlsrvPlatform::getMaxColumnNameLength","SqlsrvPlatform","SqlsrvPlatform.html#method_getMaxColumnNameLength","()","",2],["StandardEnglishPluralizer::getPluralForm","StandardEnglishPluralizer","StandardEnglishPluralizer.html#method_getPluralForm","(string $root)","Generate a plural name based on the passed in root.",2],["Table::__construct","Table","Table.html#method___construct","(string $name = null)","Constructs a table object with a name",2],["Table::setupObject","Table","Table.html#method_setupObject","()","Sets up the Rule object based on the attributes that",2],["Table::getBuildProperty","Table","Table.html#method_getBuildProperty","(string $key)","get a build property for the database this table belongs",2],["Table::applyBehaviors","Table","Table.html#method_applyBehaviors","()","Execute behavior table modifiers",2],["Table::doFinalInitialization","Table","Table.html#method_doFinalInitialization","()","A hook for the SAX XML parser to call when this",2],["Table::addExtraIndices","Table","Table.html#method_addExtraIndices","()","Adds extra indices for reverse foreign keys This is",2],["Table::getColumnList","Table","Table.html#method_getColumnList","(array $columns, string $delim = &#039;,&#039;)","Creates a delimiter-delimited string list of column",2],["Table::doNaming","Table","Table.html#method_doNaming","()","Names composing objects which haven't yet been named.",2],["Table::getBaseClass","Table","Table.html#method_getBaseClass","()","Gets the value of base class for classes produced from",2],["Table::setBaseClass","Table","Table.html#method_setBaseClass","(<abbr title=\"v\">v<\/abbr> $v)","Set the value of baseClass.",2],["Table::getBasePeer","Table","Table.html#method_getBasePeer","()","Get the value of basePeer.",2],["Table::setBasePeer","Table","Table.html#method_setBasePeer","(<abbr title=\"v\">v<\/abbr> $v)","Set the value of basePeer.",2],["Table::addColumn","Table","Table.html#method_addColumn","($data)","A utility function to create a new column from attrib",2],["Table::removeColumn","Table","Table.html#method_removeColumn","(<a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a>|string $col)","Removed a column from the table",2],["Table::adjustColumnPositions","Table","Table.html#method_adjustColumnPositions","()","",2],["Table::addValidator","Table","Table.html#method_addValidator","(mixed $data)","Add a validator to this table.",2],["Table::removeValidatorForColumn","Table","Table.html#method_removeValidatorForColumn","(string $columnName)","Removes validators based on a column name",2],["Table::addForeignKey","Table","Table.html#method_addForeignKey","($fkdata)","A utility function to create a new foreign key from",2],["Table::getChildrenColumn","Table","Table.html#method_getChildrenColumn","()","Gets the column that subclasses of the class representing",2],["Table::getChildrenNames","Table","Table.html#method_getChildrenNames","()","Get the subclasses that can be created from this table.",2],["Table::addReferrer","Table","Table.html#method_addReferrer","(<a href=\"ForeignKey.html\"><abbr title=\"ForeignKey\">ForeignKey<\/abbr><\/a> $fk)","Adds the foreign key from another table that refers",2],["Table::getReferrers","Table","Table.html#method_getReferrers","()","Get list of references to this table.",2],["Table::setupReferrers","Table","Table.html#method_setupReferrers","($throwErrors = false)","Browses the foreign keys and creates referrers for",2],["Table::getCrossFks","Table","Table.html#method_getCrossFks","()","",2],["Table::setContainsForeignPK","Table","Table.html#method_setContainsForeignPK","($b)","Set whether this table contains a foreign PK",2],["Table::getContainsForeignPK","Table","Table.html#method_getContainsForeignPK","()","Determine if this table contains a foreign PK",2],["Table::getForeignTableNames","Table","Table.html#method_getForeignTableNames","()","A list of tables referenced by foreign keys in this",2],["Table::requiresTransactionInPostgres","Table","Table.html#method_requiresTransactionInPostgres","()","Return true if the column requires a transaction in",2],["Table::addIdMethodParameter","Table","Table.html#method_addIdMethodParameter","($impdata)","A utility function to create a new id method parameter",2],["Table::removeIndex","Table","Table.html#method_removeIndex","(string $name)","Removed a index from the table",2],["Table::hasIndex","Table","Table.html#method_hasIndex","(string $name)","check if the table has a index by name",2],["Table::addIndex","Table","Table.html#method_addIndex","($idxdata)","Adds a new index to the index list and set the parent",2],["Table::addUnique","Table","Table.html#method_addUnique","($unqdata)","Adds a new Unique to the Unique list and set the parent",2],["Table::getGeneratorConfig","Table","Table.html#method_getGeneratorConfig","()","Retrieves the configuration object, filled by build.properties",2],["Table::addBehavior","Table","Table.html#method_addBehavior","($bdata)","Adds a new Behavior to the table",2],["Table::getBehaviors","Table","Table.html#method_getBehaviors","()","Get the table behaviors",2],["Table::getEarlyBehaviors","Table","Table.html#method_getEarlyBehaviors","()","Get the early table behaviors",2],["Table::hasBehavior","Table","Table.html#method_hasBehavior","(string $name)","check if the table has a behavior by name",2],["Table::getBehavior","Table","Table.html#method_getBehavior","(string $name)","Get one table behavior by name",2],["Table::hasAdditionalBuilders","Table","Table.html#method_hasAdditionalBuilders","()","Check whether one of the table behaviors offer an additional",2],["Table::getAdditionalBuilders","Table","Table.html#method_getAdditionalBuilders","()","Get the additional builders provided by the table behaviors",2],["Table::getName","Table","Table.html#method_getName","()","Get the name of the Table",2],["Table::getDescription","Table","Table.html#method_getDescription","()","Get the description for the Table",2],["Table::hasDescription","Table","Table.html#method_hasDescription","()","Whether the Table has a description",2],["Table::setDescription","Table","Table.html#method_setDescription","(<abbr title=\"newDescription\">newDescription<\/abbr> $newDescription)","Set the description for the Table",2],["Table::getPhpName","Table","Table.html#method_getPhpName","()","Get name to use in PHP sources",2],["Table::setPhpName","Table","Table.html#method_setPhpName","(string $phpName)","Set name to use in PHP sources",2],["Table::buildPhpName","Table","Table.html#method_buildPhpName","($name)","",2],["Table::getStudlyPhpName","Table","Table.html#method_getStudlyPhpName","()","Get studly version of PHP name.",2],["Table::getCommonName","Table","Table.html#method_getCommonName","()","Get the name without schema",2],["Table::setCommonName","Table","Table.html#method_setCommonName","($v)","Set the common name of the table (without schema)",2],["Table::setDefaultStringFormat","Table","Table.html#method_setDefaultStringFormat","(string $defaultStringFormat)","Set the default string format for ActiveRecord objects",2],["Table::getDefaultStringFormat","Table","Table.html#method_getDefaultStringFormat","()","Get the default string format for ActiveRecord objects",2],["Table::getIdMethod","Table","Table.html#method_getIdMethod","()","Get the method for generating pk's [HL] changing behavior",2],["Table::isAllowPkInsert","Table","Table.html#method_isAllowPkInsert","()","Whether we allow to insert primary keys on tables with",2],["Table::setIdMethod","Table","Table.html#method_setIdMethod","($idMethod)","Set the method for generating pk's",2],["Table::isSkipSql","Table","Table.html#method_isSkipSql","()","Skip generating sql for this table (in the event it",2],["Table::isReadOnly","Table","Table.html#method_isReadOnly","()","Is table read-only, in which case only accessors (and",2],["Table::setSkipSql","Table","Table.html#method_setSkipSql","(boolean $v)","Set whether this table should have its creation sql",2],["Table::isReloadOnInsert","Table","Table.html#method_isReloadOnInsert","()","Whether to force object to reload on INSERT.",2],["Table::isReloadOnUpdate","Table","Table.html#method_isReloadOnUpdate","()","Whether to force object to reload on UPDATE.",2],["Table::getAlias","Table","Table.html#method_getAlias","()","PhpName of om object this entry references.",2],["Table::isAlias","Table","Table.html#method_isAlias","()","Is this table specified in the schema or is there just",2],["Table::setAlias","Table","Table.html#method_setAlias","(string $v)","Set whether this table specified in the schema or is",2],["Table::getInterface","Table","Table.html#method_getInterface","()","Interface which objects for this table will implement",2],["Table::setInterface","Table","Table.html#method_setInterface","(string $v)","Interface which objects for this table will implement",2],["Table::isAbstract","Table","Table.html#method_isAbstract","()","When a table is abstract, it marks the business object",2],["Table::setAbstract","Table","Table.html#method_setAbstract","(boolean $v)","When a table is abstract, it marks the business object",2],["Table::getColumns","Table","Table.html#method_getColumns","()","Returns an Array containing all the columns in the",2],["Table::getNumColumns","Table","Table.html#method_getNumColumns","()","Utility method to get the number of columns in this",2],["Table::getNumLazyLoadColumns","Table","Table.html#method_getNumLazyLoadColumns","()","Utility method to get the number of columns in this",2],["Table::hasEnumColumns","Table","Table.html#method_hasEnumColumns","()","Checks whether one of the columns is of type ENUM",2],["Table::getValidators","Table","Table.html#method_getValidators","()","Returns an Array containing all the validators in the",2],["Table::getForeignKeys","Table","Table.html#method_getForeignKeys","()","Returns an Array containing all the FKs in the table.",2],["Table::getIdMethodParameters","Table","Table.html#method_getIdMethodParameters","()","Returns a Collection of parameters relevant for the",2],["Table::getIndices","Table","Table.html#method_getIndices","()","Returns an Array containing all the FKs in the table",2],["Table::getUnices","Table","Table.html#method_getUnices","()","Returns an Array containing all the UKs in the table",2],["Table::hasColumn","Table","Table.html#method_hasColumn","(<a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a>|string $col, boolean $caseInsensitive = false)","Check whether the table has a column.",2],["Table::getColumn","Table","Table.html#method_getColumn","(string $name, boolean $caseInsensitive = false)","Return the column with the specified name.",2],["Table::getColumnByPhpName","Table","Table.html#method_getColumnByPhpName","($phpName)","Returns a specified column.",2],["Table::getForeignKeysReferencingTable","Table","Table.html#method_getForeignKeysReferencingTable","($tablename)","Get all the foreign keys from this table to the specified",2],["Table::getColumnForeignKeys","Table","Table.html#method_getColumnForeignKeys","($colname)","Return the foreign keys that includes col in it's list",2],["Table::containsColumn","Table","Table.html#method_containsColumn","(<a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a>|string $col)","Check whether the table has a column.",2],["Table::setDatabase","Table","Table.html#method_setDatabase","(<a href=\"Database.html\"><abbr title=\"Database\">Database<\/abbr><\/a> $db)","Set the database that contains this table.",2],["Table::getDatabase","Table","Table.html#method_getDatabase","()","Get the database that contains this table.",2],["Table::isForReferenceOnly","Table","Table.html#method_isForReferenceOnly","()","Flag to determine if code\/sql gets created for this",2],["Table::setForReferenceOnly","Table","Table.html#method_setForReferenceOnly","(boolean $v)","Flag to determine if code\/sql gets created for this",2],["Table::treeMode","Table","Table.html#method_treeMode","()","Flag to determine if tree node class should be generated",2],["Table::setTreeMode","Table","Table.html#method_setTreeMode","(string $v)","Flag to determine if tree node class should be generated",2],["Table::appendXml","Table","Table.html#method_appendXml","(<a href=\"http:\/\/php.net\/DOMNode\"><abbr title=\"DOMNode\">DOMNode<\/abbr><\/a> $node)","Appends XML nodes to passed-in DOMNode.",2],["Table::getPrimaryKey","Table","Table.html#method_getPrimaryKey","()","Returns the collection of Columns which make up the",2],["Table::hasPrimaryKey","Table","Table.html#method_hasPrimaryKey","()","Determine whether this table has a primary key.",2],["Table::hasCompositePrimaryKey","Table","Table.html#method_hasCompositePrimaryKey","()","Determine whether this table has a composite primary",2],["Table::getFirstPrimaryKeyColumn","Table","Table.html#method_getFirstPrimaryKeyColumn","()","Get the first column of the primary key.",2],["Table::hasAutoIncrementPrimaryKey","Table","Table.html#method_hasAutoIncrementPrimaryKey","()","Determine whether this table has any auto-increment",2],["Table::getAutoIncrementPrimaryKey","Table","Table.html#method_getAutoIncrementPrimaryKey","()","Gets the auto increment PK",2],["Table::printPrimaryKey","Table","Table.html#method_printPrimaryKey","()","Returns all parts of the primary key, separated by",2],["Table::getIsCrossRef","Table","Table.html#method_getIsCrossRef","()","Gets the crossRef status for this foreign key",2],["Table::setIsCrossRef","Table","Table.html#method_setIsCrossRef","(boolean $isCrossRef)","Sets a crossref status for this foreign key.",2],["Table::hasForeignKeys","Table","Table.html#method_hasForeignKeys","()","Returns whether the table has foreign keys or not.",2],["Table::hasCrossForeignKeys","Table","Table.html#method_hasCrossForeignKeys","()","Returns whether the table has cross foreign keys or",2],["Table::getNonPrefixedName","Table","Table.html#method_getNonPrefixedName","()","",2],["TableMap::__construct","TableMap","TableMap.html#method___construct","($name = null, $dbMap = null)","Construct a new TableMap.",2],["TableMap::initialize","TableMap","TableMap.html#method_initialize","()","Initialize the TableMap to build columns, relations,",2],["TableMap::setDatabaseMap","TableMap","TableMap.html#method_setDatabaseMap","(<a href=\"DatabaseMap.html\"><abbr title=\"DatabaseMap\">DatabaseMap<\/abbr><\/a> $dbMap)","Set the DatabaseMap containing this TableMap.",2],["TableMap::getDatabaseMap","TableMap","TableMap.html#method_getDatabaseMap","()","Get the DatabaseMap containing this TableMap.",2],["TableMap::setName","TableMap","TableMap.html#method_setName","(string $name)","Set the name of the Table.",2],["TableMap::getName","TableMap","TableMap.html#method_getName","()","Get the name of the Table.",2],["TableMap::setPhpName","TableMap","TableMap.html#method_setPhpName","(string $phpName)","Set the PHP name of the Table.",2],["TableMap::getPhpName","TableMap","TableMap.html#method_getPhpName","()","Get the PHP name of the Table.",2],["TableMap::setClassname","TableMap","TableMap.html#method_setClassname","(string $classname)","Set the Classname of the Table.",2],["TableMap::getClassname","TableMap","TableMap.html#method_getClassname","()","Get the Classname of the Propel Class belonging to",2],["TableMap::getPeerClassname","TableMap","TableMap.html#method_getPeerClassname","()","Get the Peer Classname of the Propel Class belonging",2],["TableMap::setPackage","TableMap","TableMap.html#method_setPackage","(string $package)","Set the Package of the Table",2],["TableMap::getPackage","TableMap","TableMap.html#method_getPackage","()","Get the Package of the table.",2],["TableMap::setUseIdGenerator","TableMap","TableMap.html#method_setUseIdGenerator","(boolean $bit)","Set whether or not to use Id generator for primary",2],["TableMap::isUseIdGenerator","TableMap","TableMap.html#method_isUseIdGenerator","()","Whether to use Id generator for primary key.",2],["TableMap::setSingleTableInheritance","TableMap","TableMap.html#method_setSingleTableInheritance","(boolean $bit)","Set whether or not to this table uses single table",2],["TableMap::isSingleTableInheritance","TableMap","TableMap.html#method_isSingleTableInheritance","()","Whether this table uses single table inheritance",2],["TableMap::setPrimaryKeyMethodInfo","TableMap","TableMap.html#method_setPrimaryKeyMethodInfo","(<abbr title=\"$pkInfo\">$pkInfo<\/abbr> $pkInfo)","Sets the name of the sequence used to generate a key",2],["TableMap::getPrimaryKeyMethodInfo","TableMap","TableMap.html#method_getPrimaryKeyMethodInfo","()","Get the name of the sequence used to generate a primary",2],["TableMap::addColumn","TableMap","TableMap.html#method_addColumn","($name, $phpName, $type, $isNotNull = false, $size = null, $defaultValue = null, $pk = false, $fkTable = null, $fkColumn = null)","Add a column to the table.",2],["TableMap::addConfiguredColumn","TableMap","TableMap.html#method_addConfiguredColumn","(<a href=\"ColumnMap.html\"><abbr title=\"ColumnMap\">ColumnMap<\/abbr><\/a> $cmap)","Add a pre-created column to this table.",2],["TableMap::hasColumn","TableMap","TableMap.html#method_hasColumn","(mixed $name, boolean $normalize = true)","Does this table contain the specified column?",2],["TableMap::getColumn","TableMap","TableMap.html#method_getColumn","(string $name, boolean $normalize = true)","Get a ColumnMap for the table.",2],["TableMap::hasColumnByPhpName","TableMap","TableMap.html#method_hasColumnByPhpName","(mixed $phpName)","Does this table contain the specified column?",2],["TableMap::getColumnByPhpName","TableMap","TableMap.html#method_getColumnByPhpName","(string $phpName)","Get a ColumnMap for the table.",2],["TableMap::hasColumnByInsensitiveCase","TableMap","TableMap.html#method_hasColumnByInsensitiveCase","($colName)","",2],["TableMap::getColumnByInsensitiveCase","TableMap","TableMap.html#method_getColumnByInsensitiveCase","($colName)","",2],["TableMap::getColumns","TableMap","TableMap.html#method_getColumns","()","Get a ColumnMap[] of the columns in this table.",2],["TableMap::addPrimaryKey","TableMap","TableMap.html#method_addPrimaryKey","(string $columnName, string $phpName, string $type, boolean $isNotNull = false, int $size = null, string $defaultValue = null)","Add a primary key column to this Table.",2],["TableMap::addForeignKey","TableMap","TableMap.html#method_addForeignKey","(string $columnName, string $phpName, string $type, string $fkTable, string $fkColumn, boolean $isNotNull = false, int $size, string $defaultValue = null)","Add a foreign key column to the table.",2],["TableMap::addForeignPrimaryKey","TableMap","TableMap.html#method_addForeignPrimaryKey","(string $columnName, string $phpName, string $type, string $fkTable, string $fkColumn, boolean $isNotNull = false, int $size, string $defaultValue = null)","Add a foreign primary key column to the table.",2],["TableMap::isCrossRef","TableMap","TableMap.html#method_isCrossRef","()","",2],["TableMap::setIsCrossRef","TableMap","TableMap.html#method_setIsCrossRef","(boolean $isCrossRef)","set the isCrossRef",2],["TableMap::getPrimaryKeys","TableMap","TableMap.html#method_getPrimaryKeys","()","Returns array of ColumnMap objects that make up the",2],["TableMap::getForeignKeys","TableMap","TableMap.html#method_getForeignKeys","()","Returns array of ColumnMap objects that are foreign",2],["TableMap::addValidator","TableMap","TableMap.html#method_addValidator","(string $columnName, string $name, string $classname, string $value, string $message)","Add a validator to a table's column",2],["TableMap::buildRelations","TableMap","TableMap.html#method_buildRelations","()","Build relations Relations are lazy loaded for performance",2],["TableMap::addRelation","TableMap","TableMap.html#method_addRelation","(string $name, string $tablePhpName, integer $type, array $columnMapping = array(), string $onDelete = null, string $onUpdate = null, string $pluralName = null)","Adds a RelationMap to the table",2],["TableMap::hasRelation","TableMap","TableMap.html#method_hasRelation","(String $name)","Gets a RelationMap of the table by relation name This",2],["TableMap::getRelation","TableMap","TableMap.html#method_getRelation","(String $name)","Gets a RelationMap of the table by relation name This",2],["TableMap::getRelations","TableMap","TableMap.html#method_getRelations","()","Gets the RelationMap objects of the table This method",2],["TableMap::getBehaviors","TableMap","TableMap.html#method_getBehaviors","()","Gets the list of behaviors registered for this table",2],["TableMap::hasPrimaryStringColumn","TableMap","TableMap.html#method_hasPrimaryStringColumn","()","Does this table has a primaryString column?",2],["TableMap::getPrimaryStringColumn","TableMap","TableMap.html#method_getPrimaryStringColumn","()","Gets the ColumnMap for the primary string column.",2],["TableMap::containsColumn","TableMap","TableMap.html#method_containsColumn","(mixed $name, boolean $normalize = true)","Does this table contain the specified column?",2],["TableMap::getPrimaryKeyColumns","TableMap","TableMap.html#method_getPrimaryKeyColumns","()","Returns array of ColumnMap objects that make up the",2],["TableMap::getPrefix","TableMap","TableMap.html#method_getPrefix","()","Get table prefix name.",2],["TableMap::setPrefix","TableMap","TableMap.html#method_setPrefix","(string $prefix)","Set table prefix name.",2],["TableMap::removeUnderScores","TableMap","TableMap.html#method_removeUnderScores","(string $data)","Removes the PREFIX, removes the underscores and makes",2],["TimestampableBehavior::modifyTable","TimestampableBehavior","TimestampableBehavior.html#method_modifyTable","()","Add the create_column and update_columns to the current",2],["TimestampableBehavior::preUpdate","TimestampableBehavior","TimestampableBehavior.html#method_preUpdate","(<a href=\"PHP5ObjectBuilder.html\"><abbr title=\"PHP5ObjectBuilder\">PHP5ObjectBuilder<\/abbr><\/a> $builder)","Add code in ObjectBuilder::preUpdate",2],["TimestampableBehavior::preInsert","TimestampableBehavior","TimestampableBehavior.html#method_preInsert","(<a href=\"PHP5ObjectBuilder.html\"><abbr title=\"PHP5ObjectBuilder\">PHP5ObjectBuilder<\/abbr><\/a> $builder)","Add code in ObjectBuilder::preInsert",2],["TimestampableBehavior::objectMethods","TimestampableBehavior","TimestampableBehavior.html#method_objectMethods","(<a href=\"PHP5ObjectBuilder.html\"><abbr title=\"PHP5ObjectBuilder\">PHP5ObjectBuilder<\/abbr><\/a> $builder)","",2],["TimestampableBehavior::queryMethods","TimestampableBehavior","TimestampableBehavior.html#method_queryMethods","(<a href=\"QueryBuilder.html\"><abbr title=\"QueryBuilder\">QueryBuilder<\/abbr><\/a> $builder)","",2],["TypeValidator::isValid","TypeValidator","TypeValidator.html#method_isValid","(<a href=\"ValidatorMap.html\"><abbr title=\"ValidatorMap\">ValidatorMap<\/abbr><\/a> $map, mixed $value)","",2],["Unique::isUnique","Unique","Unique.html#method_isUnique","()","Returns true.",2],["Unique::appendXml","Unique","Unique.html#method_appendXml","(<a href=\"http:\/\/php.net\/DOMNode\"><abbr title=\"DOMNode\">DOMNode<\/abbr><\/a> $node)","",2],["UniqueValidator::isValid","UniqueValidator","UniqueValidator.html#method_isValid","(<a href=\"ValidatorMap.html\"><abbr title=\"ValidatorMap\">ValidatorMap<\/abbr><\/a> $map, string $str)","",2],["ValidValuesValidator::isValid","ValidValuesValidator","ValidValuesValidator.html#method_isValid","(<a href=\"ValidatorMap.html\"><abbr title=\"ValidatorMap\">ValidatorMap<\/abbr><\/a> $map, string $str)","",2],["ValidationFailed::__construct","ValidationFailed","ValidationFailed.html#method___construct","(string $colname, string $message, object $validator = null)","Construct a new ValidationFailed object.",2],["ValidationFailed::setColumn","ValidationFailed","ValidationFailed.html#method_setColumn","(string $v)","Set the column name.",2],["ValidationFailed::getColumn","ValidationFailed","ValidationFailed.html#method_getColumn","()","Gets the column name.",2],["ValidationFailed::setMessage","ValidationFailed","ValidationFailed.html#method_setMessage","(string $v)","Set the message for the validation failure.",2],["ValidationFailed::getMessage","ValidationFailed","ValidationFailed.html#method_getMessage","()","Gets the message for the validation failure.",2],["ValidationFailed::setValidator","ValidationFailed","ValidationFailed.html#method_setValidator","(object $v)","Set the validator object that caused this to fail.",2],["ValidationFailed::getValidator","ValidationFailed","ValidationFailed.html#method_getValidator","()","Gets the validator object that caused this to fail.",2],["ValidationFailed::__toString","ValidationFailed","ValidationFailed.html#method___toString","()","\"magic\" method to get string representation of object.",2],["Validator::addRule","Validator","Validator.html#method_addRule","(mixed $data)","Add a Rule to this validator.",2],["Validator::getRules","Validator","Validator.html#method_getRules","()","Gets an array of all added rules for this validator.",2],["Validator::getColumnName","Validator","Validator.html#method_getColumnName","()","Gets the name of the column that this Validator applies",2],["Validator::setColumn","Validator","Validator.html#method_setColumn","(<a href=\"Column.html\"><abbr title=\"Column\">Column<\/abbr><\/a> $column)","Sets the Column object that this validator applies",2],["Validator::getColumn","Validator","Validator.html#method_getColumn","()","Gets the Column object that this validator applies",2],["Validator::setTable","Validator","Validator.html#method_setTable","(<a href=\"Table.html\"><abbr title=\"Table\">Table<\/abbr><\/a> $table)","Set the owning Table.",2],["Validator::getTable","Validator","Validator.html#method_getTable","()","Get the owning Table.",2],["Validator::setTranslate","Validator","Validator.html#method_setTranslate","(string $method)","Set the translation mode to use for the message.",2],["Validator::getTranslate","Validator","Validator.html#method_getTranslate","()","Get the translation mode to use for the message.",2],["Validator::appendXml","Validator","Validator.html#method_appendXml","(<a href=\"http:\/\/php.net\/DOMNode\"><abbr title=\"DOMNode\">DOMNode<\/abbr><\/a> $node)","",2],["ValidatorMap::__construct","ValidatorMap","ValidatorMap.html#method___construct","($containingColumn)","",2],["ValidatorMap::getColumn","ValidatorMap","ValidatorMap.html#method_getColumn","()","",2],["ValidatorMap::getColumnName","ValidatorMap","ValidatorMap.html#method_getColumnName","()","",2],["ValidatorMap::setName","ValidatorMap","ValidatorMap.html#method_setName","($name)","",2],["ValidatorMap::setClass","ValidatorMap","ValidatorMap.html#method_setClass","($classname)","",2],["ValidatorMap::setValue","ValidatorMap","ValidatorMap.html#method_setValue","($value)","",2],["ValidatorMap::setMessage","ValidatorMap","ValidatorMap.html#method_setMessage","($message)","",2],["ValidatorMap::getName","ValidatorMap","ValidatorMap.html#method_getName","()","",2],["ValidatorMap::getClass","ValidatorMap","ValidatorMap.html#method_getClass","()","",2],["ValidatorMap::getValue","ValidatorMap","ValidatorMap.html#method_getValue","()","",2],["ValidatorMap::getMessage","ValidatorMap","ValidatorMap.html#method_getMessage","()","",2],["VendorInfo::__construct","VendorInfo","VendorInfo.html#method___construct","(string $type = null)","Creates a new VendorInfo instance.",2],["VendorInfo::setType","VendorInfo","VendorInfo.html#method_setType","(string $v)","Set RDBMS type for this vendor-specific info.",2],["VendorInfo::getType","VendorInfo","VendorInfo.html#method_getType","()","Get RDBMS type for this vendor-specific info.",2],["VendorInfo::addParameter","VendorInfo","VendorInfo.html#method_addParameter","(array $attrib)","Adds a new vendor parameter to this object.",2],["VendorInfo::setParameter","VendorInfo","VendorInfo.html#method_setParameter","(string $name, mixed $value)","Sets parameter value.",2],["VendorInfo::getParameter","VendorInfo","VendorInfo.html#method_getParameter","(string $name)","Gets parameter value.",2],["VendorInfo::hasParameter","VendorInfo","VendorInfo.html#method_hasParameter","(string $name)","Whether parameter exists.",2],["VendorInfo::setParameters","VendorInfo","VendorInfo.html#method_setParameters","(array $params = array())","Sets assoc array of parameters for vendor specific",2],["VendorInfo::getParameters","VendorInfo","VendorInfo.html#method_getParameters","()","Gets assoc array of parameters for venfor specific",2],["VendorInfo::isEmpty","VendorInfo","VendorInfo.html#method_isEmpty","()","Tests whether this vendor info is empty",2],["VendorInfo::getMergedVendorInfo","VendorInfo","VendorInfo.html#method_getMergedVendorInfo","(<a href=\"VendorInfo.html\"><abbr title=\"VendorInfo\">VendorInfo<\/abbr><\/a> $merge)","Gets a new merged VendorInfo object.",2],["VendorInfo::appendXml","VendorInfo","VendorInfo.html#method_appendXml","(<a href=\"http:\/\/php.net\/DOMNode\"><abbr title=\"DOMNode\">DOMNode<\/abbr><\/a> $node)","",2],["VersionableBehavior::modifyDatabase","VersionableBehavior","VersionableBehavior.html#method_modifyDatabase","()","This method is automatically called on database behaviors",2],["VersionableBehavior::modifyTable","VersionableBehavior","VersionableBehavior.html#method_modifyTable","()","This method is automatically called on table behaviors",2],["VersionableBehavior::addForeignKeyVersionColumns","VersionableBehavior","VersionableBehavior.html#method_addForeignKeyVersionColumns","()","",2],["VersionableBehavior::getVersionTable","VersionableBehavior","VersionableBehavior.html#method_getVersionTable","()","",2],["VersionableBehavior::getVersionTablePhpName","VersionableBehavior","VersionableBehavior.html#method_getVersionTablePhpName","()","",2],["VersionableBehavior::getVersionableFks","VersionableBehavior","VersionableBehavior.html#method_getVersionableFks","()","",2],["VersionableBehavior::getVersionableReferrers","VersionableBehavior","VersionableBehavior.html#method_getVersionableReferrers","()","",2],["VersionableBehavior::getReferrerIdsColumn","VersionableBehavior","VersionableBehavior.html#method_getReferrerIdsColumn","(<a href=\"ForeignKey.html\"><abbr title=\"ForeignKey\">ForeignKey<\/abbr><\/a> $fk)","",2],["VersionableBehavior::getReferrerVersionsColumn","VersionableBehavior","VersionableBehavior.html#method_getReferrerVersionsColumn","(<a href=\"ForeignKey.html\"><abbr title=\"ForeignKey\">ForeignKey<\/abbr><\/a> $fk)","",2],["VersionableBehavior::getObjectBuilderModifier","VersionableBehavior","VersionableBehavior.html#method_getObjectBuilderModifier","()","",2],["VersionableBehavior::getQueryBuilderModifier","VersionableBehavior","VersionableBehavior.html#method_getQueryBuilderModifier","()","",2],["VersionableBehavior::getPeerBuilderModifier","VersionableBehavior","VersionableBehavior.html#method_getPeerBuilderModifier","()","",2],["VersionableBehaviorObjectBuilderModifier::__construct","VersionableBehaviorObjectBuilderModifier","VersionableBehaviorObjectBuilderModifier.html#method___construct","(<a href=\"VersionableBehavior.html\"><abbr title=\"VersionableBehavior\">VersionableBehavior<\/abbr><\/a> $behavior)","",2],["VersionableBehaviorObjectBuilderModifier::preSave","VersionableBehaviorObjectBuilderModifier","VersionableBehaviorObjectBuilderModifier.html#method_preSave","(<a href=\"PHP5ObjectBuilder.html\"><abbr title=\"PHP5ObjectBuilder\">PHP5ObjectBuilder<\/abbr><\/a> $builder)","",2],["VersionableBehaviorObjectBuilderModifier::postSave","VersionableBehaviorObjectBuilderModifier","VersionableBehaviorObjectBuilderModifier.html#method_postSave","(<a href=\"PHP5ObjectBuilder.html\"><abbr title=\"PHP5ObjectBuilder\">PHP5ObjectBuilder<\/abbr><\/a> $builder)","",2],["VersionableBehaviorObjectBuilderModifier::postDelete","VersionableBehaviorObjectBuilderModifier","VersionableBehaviorObjectBuilderModifier.html#method_postDelete","(<a href=\"PHP5ObjectBuilder.html\"><abbr title=\"PHP5ObjectBuilder\">PHP5ObjectBuilder<\/abbr><\/a> $builder)","",2],["VersionableBehaviorObjectBuilderModifier::objectAttributes","VersionableBehaviorObjectBuilderModifier","VersionableBehaviorObjectBuilderModifier.html#method_objectAttributes","(<a href=\"PHP5ObjectBuilder.html\"><abbr title=\"PHP5ObjectBuilder\">PHP5ObjectBuilder<\/abbr><\/a> $builder)","",2],["VersionableBehaviorObjectBuilderModifier::objectMethods","VersionableBehaviorObjectBuilderModifier","VersionableBehaviorObjectBuilderModifier.html#method_objectMethods","(<a href=\"PHP5ObjectBuilder.html\"><abbr title=\"PHP5ObjectBuilder\">PHP5ObjectBuilder<\/abbr><\/a> $builder)","",2],["VersionableBehaviorPeerBuilderModifier::staticAttributes","VersionableBehaviorPeerBuilderModifier","VersionableBehaviorPeerBuilderModifier.html#method_staticAttributes","()","",2],["VersionableBehaviorPeerBuilderModifier::staticMethods","VersionableBehaviorPeerBuilderModifier","VersionableBehaviorPeerBuilderModifier.html#method_staticMethods","()","",2],["VersionableBehaviorPeerBuilderModifier::addIsVersioningEnabled","VersionableBehaviorPeerBuilderModifier","VersionableBehaviorPeerBuilderModifier.html#method_addIsVersioningEnabled","($script)","",2],["VersionableBehaviorPeerBuilderModifier::addEnableVersioning","VersionableBehaviorPeerBuilderModifier","VersionableBehaviorPeerBuilderModifier.html#method_addEnableVersioning","($script)","",2],["VersionableBehaviorPeerBuilderModifier::addDisableVersioning","VersionableBehaviorPeerBuilderModifier","VersionableBehaviorPeerBuilderModifier.html#method_addDisableVersioning","($script)","",2],["VersionableBehaviorQueryBuilderModifier::__construct","VersionableBehaviorQueryBuilderModifier","VersionableBehaviorQueryBuilderModifier.html#method___construct","(<a href=\"VersionableBehavior.html\"><abbr title=\"VersionableBehavior\">VersionableBehavior<\/abbr><\/a> $behavior)","",2],["VersionableBehaviorQueryBuilderModifier::queryMethods","VersionableBehaviorQueryBuilderModifier","VersionableBehaviorQueryBuilderModifier.html#method_queryMethods","($builder)","",2],["XMLElement::loadFromXML","XMLElement","XMLElement.html#method_loadFromXML","(array $attributes)","This is the entry point method for loading data from",2],["XMLElement::getAttributes","XMLElement","XMLElement.html#method_getAttributes","()","Returns the assoc array of attributes.",2],["XMLElement::getAttribute","XMLElement","XMLElement.html#method_getAttribute","(string $name, mixed $defaultValue = null)","Gets a particular attribute by [case-insensitive] name.",2],["XMLElement::appendXml","XMLElement","XMLElement.html#method_appendXml","(<a href=\"http:\/\/php.net\/DOMNode\"><abbr title=\"DOMNode\">DOMNode<\/abbr><\/a> $node)","Appends DOM elements to represent this object in XML.",2],["XMLElement::addVendorInfo","XMLElement","XMLElement.html#method_addVendorInfo","(mixed $data)","Sets an associated VendorInfo object.",2],["XMLElement::getVendorInfoForType","XMLElement","XMLElement.html#method_getVendorInfoForType","($type)","Gets the any associated VendorInfo object.",2],["XMLElement::getConfiguredBehavior","XMLElement","XMLElement.html#method_getConfiguredBehavior","(string $bname)","Find the best class name for a given behavior Looks",2],["XMLElement::toString","XMLElement","XMLElement.html#method_toString","()","String representation of the current object.",2],["XMLElement::__toString","XMLElement","XMLElement.html#method___toString","()","Magic string method",2],["XmlToAppData::__construct","XmlToAppData","XmlToAppData.html#method___construct","(<a href=\"PropelPlatformInterface.html\"><abbr title=\"PropelPlatformInterface\">PropelPlatformInterface<\/abbr><\/a> $defaultPlatform = null, string $defaultPackage = null, string $encoding = &#039;iso-8859-1&#039;)","Creates a new instance for the specified database type.",2],["XmlToAppData::setGeneratorConfig","XmlToAppData","XmlToAppData.html#method_setGeneratorConfig","(<a href=\"GeneratorConfigInterface.html\"><abbr title=\"GeneratorConfigInterface\">GeneratorConfigInterface<\/abbr><\/a> $generatorConfig)","Set the AppData generator configuration",2],["XmlToAppData::parseFile","XmlToAppData","XmlToAppData.html#method_parseFile","(string $xmlFile)","Parses a XML input file and returns a newly created",2],["XmlToAppData::parseString","XmlToAppData","XmlToAppData.html#method_parseString","(string $xmlString, string $xmlFile = null)","Parses a XML input string and returns a newly created",2],["XmlToAppData::startElement","XmlToAppData","XmlToAppData.html#method_startElement","($parser, $name, $attributes)","Handles opening elements of the xml file.",2],["XmlToAppData::_throwInvalidTagException","XmlToAppData","XmlToAppData.html#method__throwInvalidTagException","($parser, $tag_name)","",2],["XmlToAppData::endElement","XmlToAppData","XmlToAppData.html#method_endElement","($parser, $name)","Handles closing elements of the xml file.",2],["XmlToDataSQL::__construct","XmlToDataSQL","XmlToDataSQL.html#method___construct","(<a href=\"Database.html\"><abbr title=\"Database\">Database<\/abbr><\/a> $database, <a href=\"GeneratorConfig.html\"><abbr title=\"GeneratorConfig\">GeneratorConfig<\/abbr><\/a> $config, string $encoding = &#039;iso-8859-1&#039;)","Construct new XmlToDataSQL class.",2],["XmlToDataSQL::transform","XmlToDataSQL","XmlToDataSQL.html#method_transform","(<abbr title=\"PhingFile\">PhingFile<\/abbr> $xmlFile, <abbr title=\"Writer\">Writer<\/abbr> $out)","Transform the data dump input file into SQL and writes",2],["XmlToDataSQL::startElement","XmlToDataSQL","XmlToDataSQL.html#method_startElement","($name, $attributes)","Handles opening elements of the xml file.",2],["XmlToDataSQL::endElement","XmlToDataSQL","XmlToDataSQL.html#method_endElement","(<abbr title=\"$name\">$name<\/abbr> $name)","Handles closing elements of the xml file.",2],["sfYaml::setSpecVersion","sfYaml","sfYaml.html#method_setSpecVersion","(string $version)","Sets the YAML specification version to use.",2],["sfYaml::getSpecVersion","sfYaml","sfYaml.html#method_getSpecVersion","()","Gets the YAML specification version to use.",2],["sfYaml::load","sfYaml","sfYaml.html#method_load","(string $input)","Loads YAML into a PHP array.",2],["sfYaml::dump","sfYaml","sfYaml.html#method_dump","(array $array, integer $inline = 2)","Dumps a PHP array to a YAML string.",2],["sfYamlDumper::dump","sfYamlDumper","sfYamlDumper.html#method_dump","(mixed $input, integer $inline, integer $indent)","Dumps a PHP value to YAML.",2],["sfYamlInline::load","sfYamlInline","sfYamlInline.html#method_load","(string $value)","Convert a YAML string to a PHP array.",2],["sfYamlInline::dump","sfYamlInline","sfYamlInline.html#method_dump","(mixed $value)","Dumps a given PHP variable to a YAML string.",2],["sfYamlInline::parseScalar","sfYamlInline","sfYamlInline.html#method_parseScalar","($scalar, $delimiters = null, $stringDelimiters = array(&#039;&quot;&#039;, &#039;\\&#039;&#039;), $i, $evaluate = true)","Parses a scalar to a YAML string.",2],["sfYamlParser::__construct","sfYamlParser","sfYamlParser.html#method___construct","(integer $offset)","Constructor",2],["sfYamlParser::parse","sfYamlParser","sfYamlParser.html#method_parse","(string $value)","Parses a YAML string to a PHP value.",2]]
    }
}
search_data['index']['longSearchIndex'] = search_data['index']['searchIndex']